ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c"
  18              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  19              		.align	1
  20              		.weak	HAL_CAN_MspInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_CAN_MspInit:
  26              	.LVL0:
  27              	.LFB42:
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @file    stm32f0xx_hal_can.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @attention
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   @verbatim
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              (+++) Configure CAN pins as alternate function
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           functions:
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           messages.
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           can be used:
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  message.
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  message.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       ==============================
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) Then request transmission of a message using
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       ================================
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           here.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       ==================
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           be completed.
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           will be entered.
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   =============================================
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   weak function.
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   or HAL_CAN_Init() function.
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 5


 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #include "stm32f0xx_hal.h"
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @addtogroup STM32F0xx_HAL_Driver
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if defined(CAN)
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #define CAN_WAKEUP_TIMEOUT_COUNTER 1000000U
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief    Initialization and Configuration functions
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]  This section provides functions allowing to:
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 6


 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart;
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check CAN handle */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan == NULL)
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 7


 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Request initialisation */
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get tick */
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   tickstart = HAL_GetTick();
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Wait initialisation acknowledge */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Update error code */
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Change CAN state */
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_ERROR;
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Exit from sleep mode */
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get tick */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   tickstart = HAL_GetTick();
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Update error code */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Change CAN state */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_ERROR;
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 8


 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set the time triggered communication mode */
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set the automatic bus-off management */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set the automatic wake-up mode */
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set the automatic retransmission */
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set the transmit FIFO priority */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 9


 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set the bit timing register */
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Initialize the error code */
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Initialize the CAN state */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         reset values.
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check CAN handle */
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan == NULL)
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Stop the CAN module */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 10


 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Reset the CAN peripheral */
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
  28              		.loc 1 508 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
  33              		.loc 1 510 3 view .LVU1
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
  34              		.loc 1 515 1 is_stmt 0 view .LVU2
  35              		@ sp needed
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE42:
  40              		.section	.text.HAL_CAN_Init,"ax",%progbits
  41              		.align	1
  42              		.global	HAL_CAN_Init
  43              		.syntax unified
  44              		.code	16
  45              		.thumb_func
  47              	HAL_CAN_Init:
  48              	.LVL1:
  49              	.LFB40:
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart;
  50              		.loc 1 276 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart;
  54              		.loc 1 276 1 is_stmt 0 view .LVU4
  55 0000 70B5     		push	{r4, r5, r6, lr}
  56              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 11


  57              		.cfi_offset 4, -16
  58              		.cfi_offset 5, -12
  59              		.cfi_offset 6, -8
  60              		.cfi_offset 14, -4
  61 0002 041E     		subs	r4, r0, #0
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  62              		.loc 1 277 3 is_stmt 1 view .LVU5
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
  63              		.loc 1 280 3 view .LVU6
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
  64              		.loc 1 280 6 is_stmt 0 view .LVU7
  65 0004 00D1     		bne	.LCB27
  66 0006 A0E0     		b	.L21	@long jump
  67              	.LCB27:
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  68              		.loc 1 286 3 is_stmt 1 view .LVU8
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  69              		.loc 1 287 3 view .LVU9
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  70              		.loc 1 288 3 view .LVU10
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  71              		.loc 1 289 3 view .LVU11
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  72              		.loc 1 290 3 view .LVU12
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  73              		.loc 1 291 3 view .LVU13
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  74              		.loc 1 292 3 view .LVU14
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  75              		.loc 1 293 3 view .LVU15
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  76              		.loc 1 294 3 view .LVU16
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  77              		.loc 1 295 3 view .LVU17
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  78              		.loc 1 296 3 view .LVU18
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  79              		.loc 1 297 3 view .LVU19
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
  80              		.loc 1 327 3 view .LVU20
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
  81              		.loc 1 327 11 is_stmt 0 view .LVU21
  82 0008 2023     		movs	r3, #32
  83 000a C35C     		ldrb	r3, [r0, r3]
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
  84              		.loc 1 327 6 view .LVU22
  85 000c 002B     		cmp	r3, #0
  86 000e 1AD0     		beq	.L22
  87              	.LVL2:
  88              	.L4:
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  89              		.loc 1 335 3 is_stmt 1 view .LVU23
  90 0010 2268     		ldr	r2, [r4]
  91 0012 1368     		ldr	r3, [r2]
  92 0014 0121     		movs	r1, #1
  93 0016 0B43     		orrs	r3, r1
  94 0018 1360     		str	r3, [r2]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 12


 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  95              		.loc 1 338 3 view .LVU24
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  96              		.loc 1 338 15 is_stmt 0 view .LVU25
  97 001a FFF7FEFF 		bl	HAL_GetTick
  98              	.LVL3:
  99 001e 0500     		movs	r5, r0
 100              	.LVL4:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 101              		.loc 1 341 3 is_stmt 1 view .LVU26
 102              	.L5:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 103              		.loc 1 341 47 view .LVU27
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 104              		.loc 1 341 15 is_stmt 0 view .LVU28
 105 0020 2268     		ldr	r2, [r4]
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 106              		.loc 1 341 25 view .LVU29
 107 0022 5368     		ldr	r3, [r2, #4]
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 108              		.loc 1 341 47 view .LVU30
 109 0024 DB07     		lsls	r3, r3, #31
 110 0026 11D4     		bmi	.L23
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 111              		.loc 1 343 5 is_stmt 1 view .LVU31
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 112              		.loc 1 343 10 is_stmt 0 view .LVU32
 113 0028 FFF7FEFF 		bl	HAL_GetTick
 114              	.LVL5:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 115              		.loc 1 343 24 view .LVU33
 116 002c 401B     		subs	r0, r0, r5
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 117              		.loc 1 343 8 view .LVU34
 118 002e 0A28     		cmp	r0, #10
 119 0030 F6D9     		bls	.L5
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 120              		.loc 1 346 7 is_stmt 1 view .LVU35
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 121              		.loc 1 346 11 is_stmt 0 view .LVU36
 122 0032 626A     		ldr	r2, [r4, #36]
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 123              		.loc 1 346 23 view .LVU37
 124 0034 8023     		movs	r3, #128
 125 0036 9B02     		lsls	r3, r3, #10
 126 0038 1343     		orrs	r3, r2
 127 003a 6362     		str	r3, [r4, #36]
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 128              		.loc 1 349 7 is_stmt 1 view .LVU38
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 129              		.loc 1 349 19 is_stmt 0 view .LVU39
 130 003c 2023     		movs	r3, #32
 131 003e 0522     		movs	r2, #5
 132 0040 E254     		strb	r2, [r4, r3]
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 133              		.loc 1 351 7 is_stmt 1 view .LVU40
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 13


 134              		.loc 1 351 14 is_stmt 0 view .LVU41
 135 0042 0120     		movs	r0, #1
 136              	.LVL6:
 137              	.L3:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 138              		.loc 1 451 1 view .LVU42
 139              		@ sp needed
 140              	.LVL7:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 141              		.loc 1 451 1 view .LVU43
 142 0044 70BD     		pop	{r4, r5, r6, pc}
 143              	.LVL8:
 144              	.L22:
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 145              		.loc 1 330 5 is_stmt 1 view .LVU44
 146 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 147              	.LVL9:
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 148              		.loc 1 330 5 is_stmt 0 view .LVU45
 149 004a E1E7     		b	.L4
 150              	.LVL10:
 151              	.L23:
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 152              		.loc 1 356 3 is_stmt 1 view .LVU46
 153 004c 1368     		ldr	r3, [r2]
 154 004e 0221     		movs	r1, #2
 155 0050 8B43     		bics	r3, r1
 156 0052 1360     		str	r3, [r2]
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 157              		.loc 1 359 3 view .LVU47
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 158              		.loc 1 359 15 is_stmt 0 view .LVU48
 159 0054 FFF7FEFF 		bl	HAL_GetTick
 160              	.LVL11:
 161 0058 0500     		movs	r5, r0
 162              	.LVL12:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 163              		.loc 1 362 3 is_stmt 1 view .LVU49
 164              	.L7:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 165              		.loc 1 362 47 view .LVU50
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 166              		.loc 1 362 15 is_stmt 0 view .LVU51
 167 005a 2268     		ldr	r2, [r4]
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 168              		.loc 1 362 25 view .LVU52
 169 005c 5368     		ldr	r3, [r2, #4]
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 170              		.loc 1 362 47 view .LVU53
 171 005e 9B07     		lsls	r3, r3, #30
 172 0060 0ED5     		bpl	.L24
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 173              		.loc 1 364 5 is_stmt 1 view .LVU54
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 174              		.loc 1 364 10 is_stmt 0 view .LVU55
 175 0062 FFF7FEFF 		bl	HAL_GetTick
 176              	.LVL13:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 14


 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 177              		.loc 1 364 24 view .LVU56
 178 0066 401B     		subs	r0, r0, r5
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 179              		.loc 1 364 8 view .LVU57
 180 0068 0A28     		cmp	r0, #10
 181 006a F6D9     		bls	.L7
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 182              		.loc 1 367 7 is_stmt 1 view .LVU58
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 183              		.loc 1 367 11 is_stmt 0 view .LVU59
 184 006c 626A     		ldr	r2, [r4, #36]
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 185              		.loc 1 367 23 view .LVU60
 186 006e 8023     		movs	r3, #128
 187 0070 9B02     		lsls	r3, r3, #10
 188 0072 1343     		orrs	r3, r2
 189 0074 6362     		str	r3, [r4, #36]
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 190              		.loc 1 370 7 is_stmt 1 view .LVU61
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 191              		.loc 1 370 19 is_stmt 0 view .LVU62
 192 0076 2023     		movs	r3, #32
 193 0078 0522     		movs	r2, #5
 194 007a E254     		strb	r2, [r4, r3]
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 195              		.loc 1 372 7 is_stmt 1 view .LVU63
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 196              		.loc 1 372 14 is_stmt 0 view .LVU64
 197 007c 0120     		movs	r0, #1
 198 007e E1E7     		b	.L3
 199              	.L24:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 200              		.loc 1 377 3 is_stmt 1 view .LVU65
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 201              		.loc 1 377 17 is_stmt 0 view .LVU66
 202 0080 237E     		ldrb	r3, [r4, #24]
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 203              		.loc 1 377 6 view .LVU67
 204 0082 012B     		cmp	r3, #1
 205 0084 3ED0     		beq	.L25
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 206              		.loc 1 383 5 is_stmt 1 view .LVU68
 207 0086 1368     		ldr	r3, [r2]
 208 0088 8021     		movs	r1, #128
 209 008a 8B43     		bics	r3, r1
 210 008c 1360     		str	r3, [r2]
 211              	.L10:
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 212              		.loc 1 387 3 view .LVU69
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 213              		.loc 1 387 17 is_stmt 0 view .LVU70
 214 008e 637E     		ldrb	r3, [r4, #25]
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 215              		.loc 1 387 6 view .LVU71
 216 0090 012B     		cmp	r3, #1
 217 0092 3CD0     		beq	.L26
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 15


 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 218              		.loc 1 393 5 is_stmt 1 view .LVU72
 219 0094 2268     		ldr	r2, [r4]
 220 0096 1368     		ldr	r3, [r2]
 221 0098 4021     		movs	r1, #64
 222 009a 8B43     		bics	r3, r1
 223 009c 1360     		str	r3, [r2]
 224              	.L12:
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 225              		.loc 1 397 3 view .LVU73
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 226              		.loc 1 397 17 is_stmt 0 view .LVU74
 227 009e A37E     		ldrb	r3, [r4, #26]
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 228              		.loc 1 397 6 view .LVU75
 229 00a0 012B     		cmp	r3, #1
 230 00a2 3AD0     		beq	.L27
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 231              		.loc 1 403 5 is_stmt 1 view .LVU76
 232 00a4 2268     		ldr	r2, [r4]
 233 00a6 1368     		ldr	r3, [r2]
 234 00a8 2021     		movs	r1, #32
 235 00aa 8B43     		bics	r3, r1
 236 00ac 1360     		str	r3, [r2]
 237              	.L14:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 238              		.loc 1 407 3 view .LVU77
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 239              		.loc 1 407 17 is_stmt 0 view .LVU78
 240 00ae E37E     		ldrb	r3, [r4, #27]
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 241              		.loc 1 407 6 view .LVU79
 242 00b0 012B     		cmp	r3, #1
 243 00b2 38D0     		beq	.L28
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 244              		.loc 1 413 5 is_stmt 1 view .LVU80
 245 00b4 2268     		ldr	r2, [r4]
 246 00b6 1368     		ldr	r3, [r2]
 247 00b8 1021     		movs	r1, #16
 248 00ba 0B43     		orrs	r3, r1
 249 00bc 1360     		str	r3, [r2]
 250              	.L16:
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 251              		.loc 1 417 3 view .LVU81
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 252              		.loc 1 417 17 is_stmt 0 view .LVU82
 253 00be 237F     		ldrb	r3, [r4, #28]
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 254              		.loc 1 417 6 view .LVU83
 255 00c0 012B     		cmp	r3, #1
 256 00c2 36D0     		beq	.L29
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 257              		.loc 1 423 5 is_stmt 1 view .LVU84
 258 00c4 2268     		ldr	r2, [r4]
 259 00c6 1368     		ldr	r3, [r2]
 260 00c8 0821     		movs	r1, #8
 261 00ca 8B43     		bics	r3, r1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 16


 262 00cc 1360     		str	r3, [r2]
 263              	.L18:
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 264              		.loc 1 427 3 view .LVU85
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 265              		.loc 1 427 17 is_stmt 0 view .LVU86
 266 00ce 637F     		ldrb	r3, [r4, #29]
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 267              		.loc 1 427 6 view .LVU87
 268 00d0 012B     		cmp	r3, #1
 269 00d2 34D0     		beq	.L30
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 270              		.loc 1 433 5 is_stmt 1 view .LVU88
 271 00d4 2268     		ldr	r2, [r4]
 272 00d6 1368     		ldr	r3, [r2]
 273 00d8 0421     		movs	r1, #4
 274 00da 8B43     		bics	r3, r1
 275 00dc 1360     		str	r3, [r2]
 276              	.L20:
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 277              		.loc 1 437 3 view .LVU89
 278 00de A368     		ldr	r3, [r4, #8]
 279 00e0 E268     		ldr	r2, [r4, #12]
 280 00e2 1343     		orrs	r3, r2
 281 00e4 2269     		ldr	r2, [r4, #16]
 282 00e6 1343     		orrs	r3, r2
 283 00e8 6269     		ldr	r2, [r4, #20]
 284 00ea 1343     		orrs	r3, r2
 285 00ec 6268     		ldr	r2, [r4, #4]
 286 00ee 013A     		subs	r2, r2, #1
 287 00f0 2168     		ldr	r1, [r4]
 288 00f2 1343     		orrs	r3, r2
 289 00f4 CB61     		str	r3, [r1, #28]
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 290              		.loc 1 444 3 view .LVU90
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 291              		.loc 1 444 19 is_stmt 0 view .LVU91
 292 00f6 0023     		movs	r3, #0
 293 00f8 6362     		str	r3, [r4, #36]
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 294              		.loc 1 447 3 is_stmt 1 view .LVU92
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 295              		.loc 1 447 15 is_stmt 0 view .LVU93
 296 00fa 2033     		adds	r3, r3, #32
 297 00fc 0122     		movs	r2, #1
 298 00fe E254     		strb	r2, [r4, r3]
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 299              		.loc 1 450 3 is_stmt 1 view .LVU94
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 300              		.loc 1 450 10 is_stmt 0 view .LVU95
 301 0100 0020     		movs	r0, #0
 302 0102 9FE7     		b	.L3
 303              	.L25:
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 304              		.loc 1 379 5 is_stmt 1 view .LVU96
 305 0104 1368     		ldr	r3, [r2]
 306 0106 8021     		movs	r1, #128
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 17


 307 0108 0B43     		orrs	r3, r1
 308 010a 1360     		str	r3, [r2]
 309 010c BFE7     		b	.L10
 310              	.L26:
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 311              		.loc 1 389 5 view .LVU97
 312 010e 2268     		ldr	r2, [r4]
 313 0110 1368     		ldr	r3, [r2]
 314 0112 4021     		movs	r1, #64
 315 0114 0B43     		orrs	r3, r1
 316 0116 1360     		str	r3, [r2]
 317 0118 C1E7     		b	.L12
 318              	.L27:
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 319              		.loc 1 399 5 view .LVU98
 320 011a 2268     		ldr	r2, [r4]
 321 011c 1368     		ldr	r3, [r2]
 322 011e 2021     		movs	r1, #32
 323 0120 0B43     		orrs	r3, r1
 324 0122 1360     		str	r3, [r2]
 325 0124 C3E7     		b	.L14
 326              	.L28:
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 327              		.loc 1 409 5 view .LVU99
 328 0126 2268     		ldr	r2, [r4]
 329 0128 1368     		ldr	r3, [r2]
 330 012a 1021     		movs	r1, #16
 331 012c 8B43     		bics	r3, r1
 332 012e 1360     		str	r3, [r2]
 333 0130 C5E7     		b	.L16
 334              	.L29:
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 335              		.loc 1 419 5 view .LVU100
 336 0132 2268     		ldr	r2, [r4]
 337 0134 1368     		ldr	r3, [r2]
 338 0136 0821     		movs	r1, #8
 339 0138 0B43     		orrs	r3, r1
 340 013a 1360     		str	r3, [r2]
 341 013c C7E7     		b	.L18
 342              	.L30:
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 343              		.loc 1 429 5 view .LVU101
 344 013e 2268     		ldr	r2, [r4]
 345 0140 1368     		ldr	r3, [r2]
 346 0142 0421     		movs	r1, #4
 347 0144 0B43     		orrs	r3, r1
 348 0146 1360     		str	r3, [r2]
 349 0148 C9E7     		b	.L20
 350              	.LVL14:
 351              	.L21:
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 352              		.loc 1 282 12 is_stmt 0 view .LVU102
 353 014a 0120     		movs	r0, #1
 354              	.LVL15:
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 355              		.loc 1 282 12 view .LVU103
 356 014c 7AE7     		b	.L3
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 18


 357              		.cfi_endproc
 358              	.LFE40:
 360              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 361              		.align	1
 362              		.weak	HAL_CAN_MspDeInit
 363              		.syntax unified
 364              		.code	16
 365              		.thumb_func
 367              	HAL_CAN_MspDeInit:
 368              	.LVL16:
 369              	.LFB43:
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 370              		.loc 1 524 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 375              		.loc 1 526 3 view .LVU105
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 376              		.loc 1 531 1 is_stmt 0 view .LVU106
 377              		@ sp needed
 378 0000 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE43:
 382              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_CAN_ConfigFilter
 385              		.syntax unified
 386              		.code	16
 387              		.thumb_func
 389              	HAL_CAN_ConfigFilter:
 390              	.LVL17:
 391              	.LFB44:
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for CAN module
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be one of the following values:
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 19


 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (pCallback == NULL)
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update the error code */
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch (CallbackID)
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 20


 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default :
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update the error code */
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Return error status */
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         status =  HAL_ERROR;
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch (CallbackID)
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 21


 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default :
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update the error code */
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Return error status */
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         status =  HAL_ERROR;
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update the error code */
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return error status */
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     status =  HAL_ERROR;
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return status;
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for CAN module
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be one of the following values:
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch (CallbackID)
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 22


 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 23


 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default :
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update the error code */
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Return error status */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         status =  HAL_ERROR;
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch (CallbackID)
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default :
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update the error code */
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Return error status */
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         status =  HAL_ERROR;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update the error code */
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return error status */
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     status =  HAL_ERROR;
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return status;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief    Configuration functions.
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****               ##### Configuration functions #####
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]  This section provides functions allowing to:
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 24


 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         contains the filter configuration information.
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 392              		.loc 1 841 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		.loc 1 841 1 is_stmt 0 view .LVU108
 397 0000 70B5     		push	{r4, r5, r6, lr}
 398              		.cfi_def_cfa_offset 16
 399              		.cfi_offset 4, -16
 400              		.cfi_offset 5, -12
 401              		.cfi_offset 6, -8
 402              		.cfi_offset 14, -4
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t filternbrbitpos;
 403              		.loc 1 842 3 is_stmt 1 view .LVU109
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 404              		.loc 1 843 3 view .LVU110
 405              		.loc 1 843 16 is_stmt 0 view .LVU111
 406 0002 0268     		ldr	r2, [r0]
 407              	.LVL18:
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 408              		.loc 1 844 3 is_stmt 1 view .LVU112
 409              		.loc 1 844 24 is_stmt 0 view .LVU113
 410 0004 2023     		movs	r3, #32
 411 0006 C35C     		ldrb	r3, [r0, r3]
 412              	.LVL19:
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 413              		.loc 1 846 3 is_stmt 1 view .LVU114
 414              		.loc 1 846 38 is_stmt 0 view .LVU115
 415 0008 013B     		subs	r3, r3, #1
 416              	.LVL20:
 417              		.loc 1 846 38 view .LVU116
 418 000a DBB2     		uxtb	r3, r3
 419              		.loc 1 846 6 view .LVU117
 420 000c 012B     		cmp	r3, #1
 421 000e 06D9     		bls	.L42
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check the parameters */
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 25


 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* CAN is single instance with 14 dedicated filters banks */
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check the parameters */
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Initialisation mode for the filter */
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Convert filter number into bit position */
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Filter Deactivation */
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Filter Scale */
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* 16-bit scale for the filter */
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* 32-bit scale for the filter */
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Filter Mode */
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 26


 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Identifier list mode for the filter*/
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Filter FIFO assignment */
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Filter activation */
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 422              		.loc 1 947 5 is_stmt 1 view .LVU118
 423              		.loc 1 947 9 is_stmt 0 view .LVU119
 424 0010 426A     		ldr	r2, [r0, #36]
 425              	.LVL21:
 426              		.loc 1 947 21 view .LVU120
 427 0012 8023     		movs	r3, #128
 428 0014 DB02     		lsls	r3, r3, #11
 429 0016 1343     		orrs	r3, r2
 430 0018 4362     		str	r3, [r0, #36]
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 431              		.loc 1 949 5 is_stmt 1 view .LVU121
 432              		.loc 1 949 12 is_stmt 0 view .LVU122
 433 001a 0120     		movs	r0, #1
 434              	.LVL22:
 435              	.L41:
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 436              		.loc 1 951 1 view .LVU123
 437              		@ sp needed
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 27


 438 001c 70BD     		pop	{r4, r5, r6, pc}
 439              	.LVL23:
 440              	.L42:
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 441              		.loc 1 850 5 is_stmt 1 view .LVU124
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 442              		.loc 1 851 5 view .LVU125
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 443              		.loc 1 852 5 view .LVU126
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 444              		.loc 1 853 5 view .LVU127
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 445              		.loc 1 854 5 view .LVU128
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 446              		.loc 1 855 5 view .LVU129
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 447              		.loc 1 856 5 view .LVU130
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 448              		.loc 1 857 5 view .LVU131
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 449              		.loc 1 862 5 view .LVU132
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 450              		.loc 1 865 5 view .LVU133
 451 001e 8024     		movs	r4, #128
 452 0020 A400     		lsls	r4, r4, #2
 453 0022 1059     		ldr	r0, [r2, r4]
 454              	.LVL24:
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 455              		.loc 1 865 5 is_stmt 0 view .LVU134
 456 0024 0123     		movs	r3, #1
 457 0026 1843     		orrs	r0, r3
 458 0028 1051     		str	r0, [r2, r4]
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 459              		.loc 1 868 5 is_stmt 1 view .LVU135
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 460              		.loc 1 868 52 is_stmt 0 view .LVU136
 461 002a 4C69     		ldr	r4, [r1, #20]
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 462              		.loc 1 868 65 view .LVU137
 463 002c 1F20     		movs	r0, #31
 464 002e 2040     		ands	r0, r4
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 465              		.loc 1 868 21 view .LVU138
 466 0030 8340     		lsls	r3, r3, r0
 467              	.LVL25:
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 468              		.loc 1 871 5 is_stmt 1 view .LVU139
 469 0032 8724     		movs	r4, #135
 470 0034 A400     		lsls	r4, r4, #2
 471 0036 1059     		ldr	r0, [r2, r4]
 472 0038 DD43     		mvns	r5, r3
 473 003a 9843     		bics	r0, r3
 474 003c 1051     		str	r0, [r2, r4]
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 475              		.loc 1 874 5 view .LVU140
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 476              		.loc 1 874 22 is_stmt 0 view .LVU141
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 28


 477 003e C869     		ldr	r0, [r1, #28]
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 478              		.loc 1 874 8 view .LVU142
 479 0040 0028     		cmp	r0, #0
 480 0042 18D1     		bne	.L34
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 481              		.loc 1 877 7 is_stmt 1 view .LVU143
 482 0044 103C     		subs	r4, r4, #16
 483 0046 1059     		ldr	r0, [r2, r4]
 484 0048 2840     		ands	r0, r5
 485 004a 1051     		str	r0, [r2, r4]
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 486              		.loc 1 881 7 view .LVU144
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 487              		.loc 1 882 48 is_stmt 0 view .LVU145
 488 004c CC68     		ldr	r4, [r1, #12]
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 489              		.loc 1 882 67 view .LVU146
 490 004e 2404     		lsls	r4, r4, #16
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 491              		.loc 1 883 47 view .LVU147
 492 0050 4E68     		ldr	r6, [r1, #4]
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 493              		.loc 1 883 22 view .LVU148
 494 0052 3604     		lsls	r6, r6, #16
 495 0054 360C     		lsrs	r6, r6, #16
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 496              		.loc 1 881 44 view .LVU149
 497 0056 4869     		ldr	r0, [r1, #20]
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 498              		.loc 1 882 75 view .LVU150
 499 0058 3443     		orrs	r4, r6
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 500              		.loc 1 881 62 view .LVU151
 501 005a 4830     		adds	r0, r0, #72
 502 005c C000     		lsls	r0, r0, #3
 503 005e 8450     		str	r4, [r0, r2]
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 504              		.loc 1 887 7 is_stmt 1 view .LVU152
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 505              		.loc 1 888 48 is_stmt 0 view .LVU153
 506 0060 8C68     		ldr	r4, [r1, #8]
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 507              		.loc 1 888 68 view .LVU154
 508 0062 2404     		lsls	r4, r4, #16
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 509              		.loc 1 889 47 view .LVU155
 510 0064 0E68     		ldr	r6, [r1]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 511              		.loc 1 889 22 view .LVU156
 512 0066 3604     		lsls	r6, r6, #16
 513 0068 360C     		lsrs	r6, r6, #16
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 514              		.loc 1 887 44 view .LVU157
 515 006a 4869     		ldr	r0, [r1, #20]
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 516              		.loc 1 888 76 view .LVU158
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 29


 517 006c 3443     		orrs	r4, r6
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 518              		.loc 1 887 62 view .LVU159
 519 006e 4830     		adds	r0, r0, #72
 520 0070 C000     		lsls	r0, r0, #3
 521 0072 1018     		adds	r0, r2, r0
 522 0074 4460     		str	r4, [r0, #4]
 523              	.L34:
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 524              		.loc 1 892 5 is_stmt 1 view .LVU160
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 525              		.loc 1 892 22 is_stmt 0 view .LVU161
 526 0076 C869     		ldr	r0, [r1, #28]
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 527              		.loc 1 892 8 view .LVU162
 528 0078 0128     		cmp	r0, #1
 529 007a 1AD0     		beq	.L43
 530              	.L35:
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 531              		.loc 1 909 5 is_stmt 1 view .LVU163
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 532              		.loc 1 909 22 is_stmt 0 view .LVU164
 533 007c 8869     		ldr	r0, [r1, #24]
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 534              		.loc 1 909 8 view .LVU165
 535 007e 0028     		cmp	r0, #0
 536 0080 32D1     		bne	.L36
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 537              		.loc 1 912 7 is_stmt 1 view .LVU166
 538 0082 8124     		movs	r4, #129
 539 0084 A400     		lsls	r4, r4, #2
 540 0086 1059     		ldr	r0, [r2, r4]
 541 0088 2840     		ands	r0, r5
 542 008a 1051     		str	r0, [r2, r4]
 543              	.L37:
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 544              		.loc 1 921 5 view .LVU167
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 545              		.loc 1 921 22 is_stmt 0 view .LVU168
 546 008c 0869     		ldr	r0, [r1, #16]
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 547              		.loc 1 921 8 view .LVU169
 548 008e 0028     		cmp	r0, #0
 549 0090 30D1     		bne	.L38
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 550              		.loc 1 924 7 is_stmt 1 view .LVU170
 551 0092 8524     		movs	r4, #133
 552 0094 A400     		lsls	r4, r4, #2
 553 0096 1059     		ldr	r0, [r2, r4]
 554 0098 2840     		ands	r0, r5
 555 009a 1051     		str	r0, [r2, r4]
 556              	.L39:
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 557              		.loc 1 933 5 view .LVU171
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 558              		.loc 1 933 22 is_stmt 0 view .LVU172
 559 009c 096A     		ldr	r1, [r1, #32]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 30


 560              	.LVL26:
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 561              		.loc 1 933 8 view .LVU173
 562 009e 0129     		cmp	r1, #1
 563 00a0 2ED0     		beq	.L44
 564              	.LVL27:
 565              	.L40:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 566              		.loc 1 939 5 is_stmt 1 view .LVU174
 567 00a2 8021     		movs	r1, #128
 568 00a4 8900     		lsls	r1, r1, #2
 569 00a6 5358     		ldr	r3, [r2, r1]
 570 00a8 0120     		movs	r0, #1
 571 00aa 8343     		bics	r3, r0
 572 00ac 5350     		str	r3, [r2, r1]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 573              		.loc 1 942 5 view .LVU175
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 574              		.loc 1 942 12 is_stmt 0 view .LVU176
 575 00ae 0020     		movs	r0, #0
 576 00b0 B4E7     		b	.L41
 577              	.LVL28:
 578              	.L43:
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 579              		.loc 1 895 7 is_stmt 1 view .LVU177
 580 00b2 8324     		movs	r4, #131
 581 00b4 A400     		lsls	r4, r4, #2
 582 00b6 1059     		ldr	r0, [r2, r4]
 583 00b8 1843     		orrs	r0, r3
 584 00ba 1051     		str	r0, [r2, r4]
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 585              		.loc 1 898 7 view .LVU178
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 586              		.loc 1 899 48 is_stmt 0 view .LVU179
 587 00bc 0C68     		ldr	r4, [r1]
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 588              		.loc 1 899 64 view .LVU180
 589 00be 2404     		lsls	r4, r4, #16
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 590              		.loc 1 900 47 view .LVU181
 591 00c0 4E68     		ldr	r6, [r1, #4]
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 592              		.loc 1 900 22 view .LVU182
 593 00c2 3604     		lsls	r6, r6, #16
 594 00c4 360C     		lsrs	r6, r6, #16
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 595              		.loc 1 898 44 view .LVU183
 596 00c6 4869     		ldr	r0, [r1, #20]
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 597              		.loc 1 899 72 view .LVU184
 598 00c8 3443     		orrs	r4, r6
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 599              		.loc 1 898 62 view .LVU185
 600 00ca 4830     		adds	r0, r0, #72
 601 00cc C000     		lsls	r0, r0, #3
 602 00ce 8450     		str	r4, [r0, r2]
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 31


 603              		.loc 1 903 7 is_stmt 1 view .LVU186
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 604              		.loc 1 904 48 is_stmt 0 view .LVU187
 605 00d0 8C68     		ldr	r4, [r1, #8]
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 606              		.loc 1 904 68 view .LVU188
 607 00d2 2404     		lsls	r4, r4, #16
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 608              		.loc 1 905 47 view .LVU189
 609 00d4 CE68     		ldr	r6, [r1, #12]
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 610              		.loc 1 905 22 view .LVU190
 611 00d6 3604     		lsls	r6, r6, #16
 612 00d8 360C     		lsrs	r6, r6, #16
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 613              		.loc 1 903 44 view .LVU191
 614 00da 4869     		ldr	r0, [r1, #20]
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 615              		.loc 1 904 76 view .LVU192
 616 00dc 3443     		orrs	r4, r6
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 617              		.loc 1 903 62 view .LVU193
 618 00de 4830     		adds	r0, r0, #72
 619 00e0 C000     		lsls	r0, r0, #3
 620 00e2 1018     		adds	r0, r2, r0
 621 00e4 4460     		str	r4, [r0, #4]
 622 00e6 C9E7     		b	.L35
 623              	.L36:
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 624              		.loc 1 917 7 is_stmt 1 view .LVU194
 625 00e8 8124     		movs	r4, #129
 626 00ea A400     		lsls	r4, r4, #2
 627 00ec 1059     		ldr	r0, [r2, r4]
 628 00ee 1843     		orrs	r0, r3
 629 00f0 1051     		str	r0, [r2, r4]
 630 00f2 CBE7     		b	.L37
 631              	.L38:
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 632              		.loc 1 929 7 view .LVU195
 633 00f4 8524     		movs	r4, #133
 634 00f6 A400     		lsls	r4, r4, #2
 635 00f8 1059     		ldr	r0, [r2, r4]
 636 00fa 1843     		orrs	r0, r3
 637 00fc 1051     		str	r0, [r2, r4]
 638 00fe CDE7     		b	.L39
 639              	.LVL29:
 640              	.L44:
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 641              		.loc 1 935 7 view .LVU196
 642 0100 8720     		movs	r0, #135
 643 0102 8000     		lsls	r0, r0, #2
 644 0104 1158     		ldr	r1, [r2, r0]
 645 0106 0B43     		orrs	r3, r1
 646              	.LVL30:
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 647              		.loc 1 935 7 is_stmt 0 view .LVU197
 648 0108 1350     		str	r3, [r2, r0]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 32


 649 010a CAE7     		b	.L40
 650              		.cfi_endproc
 651              	.LFE44:
 653              		.section	.text.HAL_CAN_Start,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_CAN_Start
 656              		.syntax unified
 657              		.code	16
 658              		.thumb_func
 660              	HAL_CAN_Start:
 661              	.LVL31:
 662              	.LFB45:
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief    Control functions
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                       ##### Control functions #####
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]  This section provides functions allowing to:
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                              and activate the corresponding
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                              transmission request
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                              pending on the selected Tx mailbox
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Start the CAN module.
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 663              		.loc 1 991 1 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		.loc 1 991 1 is_stmt 0 view .LVU199
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 33


 668 0000 70B5     		push	{r4, r5, r6, lr}
 669              		.cfi_def_cfa_offset 16
 670              		.cfi_offset 4, -16
 671              		.cfi_offset 5, -12
 672              		.cfi_offset 6, -8
 673              		.cfi_offset 14, -4
 674 0002 0400     		movs	r4, r0
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart;
 675              		.loc 1 992 3 is_stmt 1 view .LVU200
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 676              		.loc 1 994 3 view .LVU201
 677              		.loc 1 994 11 is_stmt 0 view .LVU202
 678 0004 2023     		movs	r3, #32
 679 0006 C35C     		ldrb	r3, [r0, r3]
 680 0008 DEB2     		uxtb	r6, r3
 681              		.loc 1 994 6 view .LVU203
 682 000a 012B     		cmp	r3, #1
 683 000c 07D0     		beq	.L50
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Change CAN peripheral state */
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Request leave initialisation */
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Get tick */
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     tickstart = HAL_GetTick();
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Wait the acknowledge */
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check for the Timeout */
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update error code */
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Change CAN state */
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         return HAL_ERROR;
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 684              		.loc 1 1030 5 is_stmt 1 view .LVU204
 685              		.loc 1 1030 9 is_stmt 0 view .LVU205
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 34


 686 000e 426A     		ldr	r2, [r0, #36]
 687              		.loc 1 1030 21 view .LVU206
 688 0010 8023     		movs	r3, #128
 689 0012 1B03     		lsls	r3, r3, #12
 690 0014 1343     		orrs	r3, r2
 691 0016 4362     		str	r3, [r0, #36]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 692              		.loc 1 1032 5 is_stmt 1 view .LVU207
 693              		.loc 1 1032 12 is_stmt 0 view .LVU208
 694 0018 0126     		movs	r6, #1
 695              	.LVL32:
 696              	.L48:
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 697              		.loc 1 1034 1 view .LVU209
 698 001a 3000     		movs	r0, r6
 699              		@ sp needed
 700              	.LVL33:
 701              		.loc 1 1034 1 view .LVU210
 702 001c 70BD     		pop	{r4, r5, r6, pc}
 703              	.LVL34:
 704              	.L50:
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 705              		.loc 1 997 5 is_stmt 1 view .LVU211
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 706              		.loc 1 997 17 is_stmt 0 view .LVU212
 707 001e 1F33     		adds	r3, r3, #31
 708 0020 0222     		movs	r2, #2
 709 0022 C254     		strb	r2, [r0, r3]
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 710              		.loc 1 1000 5 is_stmt 1 view .LVU213
 711 0024 0268     		ldr	r2, [r0]
 712 0026 1368     		ldr	r3, [r2]
 713 0028 0121     		movs	r1, #1
 714 002a 8B43     		bics	r3, r1
 715 002c 1360     		str	r3, [r2]
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 716              		.loc 1 1003 5 view .LVU214
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 717              		.loc 1 1003 17 is_stmt 0 view .LVU215
 718 002e FFF7FEFF 		bl	HAL_GetTick
 719              	.LVL35:
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 720              		.loc 1 1003 17 view .LVU216
 721 0032 0500     		movs	r5, r0
 722              	.LVL36:
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 723              		.loc 1 1006 5 is_stmt 1 view .LVU217
 724              	.L47:
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 725              		.loc 1 1006 49 view .LVU218
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 726              		.loc 1 1006 17 is_stmt 0 view .LVU219
 727 0034 2368     		ldr	r3, [r4]
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 728              		.loc 1 1006 27 view .LVU220
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 35


 729 0036 5B68     		ldr	r3, [r3, #4]
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 730              		.loc 1 1006 49 view .LVU221
 731 0038 DB07     		lsls	r3, r3, #31
 732 003a 0DD5     		bpl	.L51
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 733              		.loc 1 1009 7 is_stmt 1 view .LVU222
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 734              		.loc 1 1009 12 is_stmt 0 view .LVU223
 735 003c FFF7FEFF 		bl	HAL_GetTick
 736              	.LVL37:
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 737              		.loc 1 1009 26 view .LVU224
 738 0040 401B     		subs	r0, r0, r5
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 739              		.loc 1 1009 10 view .LVU225
 740 0042 0A28     		cmp	r0, #10
 741 0044 F6D9     		bls	.L47
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 742              		.loc 1 1012 9 is_stmt 1 view .LVU226
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 743              		.loc 1 1012 13 is_stmt 0 view .LVU227
 744 0046 626A     		ldr	r2, [r4, #36]
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 745              		.loc 1 1012 25 view .LVU228
 746 0048 8023     		movs	r3, #128
 747 004a 9B02     		lsls	r3, r3, #10
 748 004c 1343     		orrs	r3, r2
 749 004e 6362     		str	r3, [r4, #36]
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 750              		.loc 1 1015 9 is_stmt 1 view .LVU229
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 751              		.loc 1 1015 21 is_stmt 0 view .LVU230
 752 0050 2023     		movs	r3, #32
 753 0052 0522     		movs	r2, #5
 754 0054 E254     		strb	r2, [r4, r3]
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 755              		.loc 1 1017 9 is_stmt 1 view .LVU231
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 756              		.loc 1 1017 16 is_stmt 0 view .LVU232
 757 0056 E0E7     		b	.L48
 758              	.L51:
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 759              		.loc 1 1022 5 is_stmt 1 view .LVU233
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 760              		.loc 1 1022 21 is_stmt 0 view .LVU234
 761 0058 0023     		movs	r3, #0
 762 005a 6362     		str	r3, [r4, #36]
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 763              		.loc 1 1025 5 is_stmt 1 view .LVU235
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 764              		.loc 1 1025 12 is_stmt 0 view .LVU236
 765 005c 0026     		movs	r6, #0
 766 005e DCE7     		b	.L48
 767              		.cfi_endproc
 768              	.LFE45:
 770              		.section	.text.HAL_CAN_Stop,"ax",%progbits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 36


 771              		.align	1
 772              		.global	HAL_CAN_Stop
 773              		.syntax unified
 774              		.code	16
 775              		.thumb_func
 777              	HAL_CAN_Stop:
 778              	.LVL38:
 779              	.LFB46:
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 780              		.loc 1 1043 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		.loc 1 1043 1 is_stmt 0 view .LVU238
 785 0000 70B5     		push	{r4, r5, r6, lr}
 786              		.cfi_def_cfa_offset 16
 787              		.cfi_offset 4, -16
 788              		.cfi_offset 5, -12
 789              		.cfi_offset 6, -8
 790              		.cfi_offset 14, -4
 791 0002 0400     		movs	r4, r0
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart;
 792              		.loc 1 1044 3 is_stmt 1 view .LVU239
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 793              		.loc 1 1046 3 view .LVU240
 794              		.loc 1 1046 11 is_stmt 0 view .LVU241
 795 0004 2023     		movs	r3, #32
 796 0006 C35C     		ldrb	r3, [r0, r3]
 797              		.loc 1 1046 6 view .LVU242
 798 0008 022B     		cmp	r3, #2
 799 000a 06D0     		beq	.L57
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Request initialisation */
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Get tick */
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     tickstart = HAL_GetTick();
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Wait the acknowledge */
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check for the Timeout */
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update error code */
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Change CAN state */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 37


1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         return HAL_ERROR;
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Exit from sleep mode */
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Change CAN peripheral state */
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 800              		.loc 1 1082 5 is_stmt 1 view .LVU243
 801              		.loc 1 1082 9 is_stmt 0 view .LVU244
 802 000c 426A     		ldr	r2, [r0, #36]
 803              		.loc 1 1082 21 view .LVU245
 804 000e 8023     		movs	r3, #128
 805 0010 5B03     		lsls	r3, r3, #13
 806 0012 1343     		orrs	r3, r2
 807 0014 4362     		str	r3, [r0, #36]
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 808              		.loc 1 1084 5 is_stmt 1 view .LVU246
 809              		.loc 1 1084 12 is_stmt 0 view .LVU247
 810 0016 0120     		movs	r0, #1
 811              	.LVL39:
 812              	.L55:
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 813              		.loc 1 1086 1 view .LVU248
 814              		@ sp needed
 815              	.LVL40:
 816              		.loc 1 1086 1 view .LVU249
 817 0018 70BD     		pop	{r4, r5, r6, pc}
 818              	.LVL41:
 819              	.L57:
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 820              		.loc 1 1049 5 is_stmt 1 view .LVU250
 821 001a 0268     		ldr	r2, [r0]
 822 001c 1368     		ldr	r3, [r2]
 823 001e 0121     		movs	r1, #1
 824 0020 0B43     		orrs	r3, r1
 825 0022 1360     		str	r3, [r2]
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 826              		.loc 1 1052 5 view .LVU251
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 827              		.loc 1 1052 17 is_stmt 0 view .LVU252
 828 0024 FFF7FEFF 		bl	HAL_GetTick
 829              	.LVL42:
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 38


 830              		.loc 1 1052 17 view .LVU253
 831 0028 0500     		movs	r5, r0
 832              	.LVL43:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 833              		.loc 1 1055 5 is_stmt 1 view .LVU254
 834              	.L54:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 835              		.loc 1 1055 49 view .LVU255
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 836              		.loc 1 1055 17 is_stmt 0 view .LVU256
 837 002a 2268     		ldr	r2, [r4]
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 838              		.loc 1 1055 27 view .LVU257
 839 002c 5368     		ldr	r3, [r2, #4]
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 840              		.loc 1 1055 49 view .LVU258
 841 002e DB07     		lsls	r3, r3, #31
 842 0030 0ED4     		bmi	.L58
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 843              		.loc 1 1058 7 is_stmt 1 view .LVU259
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 844              		.loc 1 1058 12 is_stmt 0 view .LVU260
 845 0032 FFF7FEFF 		bl	HAL_GetTick
 846              	.LVL44:
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 847              		.loc 1 1058 26 view .LVU261
 848 0036 401B     		subs	r0, r0, r5
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 849              		.loc 1 1058 10 view .LVU262
 850 0038 0A28     		cmp	r0, #10
 851 003a F6D9     		bls	.L54
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 852              		.loc 1 1061 9 is_stmt 1 view .LVU263
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 853              		.loc 1 1061 13 is_stmt 0 view .LVU264
 854 003c 626A     		ldr	r2, [r4, #36]
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 855              		.loc 1 1061 25 view .LVU265
 856 003e 8023     		movs	r3, #128
 857 0040 9B02     		lsls	r3, r3, #10
 858 0042 1343     		orrs	r3, r2
 859 0044 6362     		str	r3, [r4, #36]
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 860              		.loc 1 1064 9 is_stmt 1 view .LVU266
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 861              		.loc 1 1064 21 is_stmt 0 view .LVU267
 862 0046 2023     		movs	r3, #32
 863 0048 0522     		movs	r2, #5
 864 004a E254     		strb	r2, [r4, r3]
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 865              		.loc 1 1066 9 is_stmt 1 view .LVU268
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 866              		.loc 1 1066 16 is_stmt 0 view .LVU269
 867 004c 0120     		movs	r0, #1
 868 004e E3E7     		b	.L55
 869              	.L58:
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 39


 870              		.loc 1 1071 5 is_stmt 1 view .LVU270
 871 0050 1368     		ldr	r3, [r2]
 872 0052 0221     		movs	r1, #2
 873 0054 8B43     		bics	r3, r1
 874 0056 1360     		str	r3, [r2]
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 875              		.loc 1 1074 5 view .LVU271
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 876              		.loc 1 1074 17 is_stmt 0 view .LVU272
 877 0058 2023     		movs	r3, #32
 878 005a 0122     		movs	r2, #1
 879 005c E254     		strb	r2, [r4, r3]
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 880              		.loc 1 1077 5 is_stmt 1 view .LVU273
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 881              		.loc 1 1077 12 is_stmt 0 view .LVU274
 882 005e 0020     		movs	r0, #0
 883 0060 DAE7     		b	.L55
 884              		.cfi_endproc
 885              	.LFE46:
 887              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 888              		.align	1
 889              		.global	HAL_CAN_DeInit
 890              		.syntax unified
 891              		.code	16
 892              		.thumb_func
 894              	HAL_CAN_DeInit:
 895              	.LVL45:
 896              	.LFB41:
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check CAN handle */
 897              		.loc 1 461 1 is_stmt 1 view -0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check CAN handle */
 901              		.loc 1 461 1 is_stmt 0 view .LVU276
 902 0000 10B5     		push	{r4, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 4, -8
 905              		.cfi_offset 14, -4
 906 0002 041E     		subs	r4, r0, #0
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 907              		.loc 1 463 3 is_stmt 1 view .LVU277
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 908              		.loc 1 463 6 is_stmt 0 view .LVU278
 909 0004 10D0     		beq	.L61
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 910              		.loc 1 469 3 is_stmt 1 view .LVU279
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 911              		.loc 1 472 3 view .LVU280
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 912              		.loc 1 472 9 is_stmt 0 view .LVU281
 913 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 914              	.LVL46:
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 915              		.loc 1 485 3 is_stmt 1 view .LVU282
 916 000a 2000     		movs	r0, r4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 40


 917 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 918              	.LVL47:
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 919              		.loc 1 489 3 view .LVU283
 920 0010 2268     		ldr	r2, [r4]
 921 0012 1168     		ldr	r1, [r2]
 922 0014 8023     		movs	r3, #128
 923 0016 1B02     		lsls	r3, r3, #8
 924 0018 0B43     		orrs	r3, r1
 925 001a 1360     		str	r3, [r2]
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 926              		.loc 1 492 3 view .LVU284
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 927              		.loc 1 492 19 is_stmt 0 view .LVU285
 928 001c 0023     		movs	r3, #0
 929 001e 6362     		str	r3, [r4, #36]
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 930              		.loc 1 495 3 is_stmt 1 view .LVU286
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 931              		.loc 1 495 15 is_stmt 0 view .LVU287
 932 0020 2022     		movs	r2, #32
 933 0022 A354     		strb	r3, [r4, r2]
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 934              		.loc 1 498 3 is_stmt 1 view .LVU288
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 935              		.loc 1 498 10 is_stmt 0 view .LVU289
 936 0024 0020     		movs	r0, #0
 937              	.L60:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 938              		.loc 1 499 1 view .LVU290
 939              		@ sp needed
 940              	.LVL48:
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 941              		.loc 1 499 1 view .LVU291
 942 0026 10BD     		pop	{r4, pc}
 943              	.LVL49:
 944              	.L61:
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 945              		.loc 1 465 12 view .LVU292
 946 0028 0120     		movs	r0, #1
 947              	.LVL50:
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 948              		.loc 1 465 12 view .LVU293
 949 002a FCE7     		b	.L60
 950              		.cfi_endproc
 951              	.LFE41:
 953              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 954              		.align	1
 955              		.global	HAL_CAN_RequestSleep
 956              		.syntax unified
 957              		.code	16
 958              		.thumb_func
 960              	HAL_CAN_RequestSleep:
 961              	.LVL51:
 962              	.LFB47:
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 41


1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         of a CAN frame) has been completed.
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status.
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 963              		.loc 1 1098 1 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		@ link register save eliminated.
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 968              		.loc 1 1099 3 view .LVU295
 969              		.loc 1 1099 24 is_stmt 0 view .LVU296
 970 0000 2023     		movs	r3, #32
 971 0002 C35C     		ldrb	r3, [r0, r3]
 972              	.LVL52:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 973              		.loc 1 1101 3 is_stmt 1 view .LVU297
 974              		.loc 1 1101 38 is_stmt 0 view .LVU298
 975 0004 013B     		subs	r3, r3, #1
 976              	.LVL53:
 977              		.loc 1 1101 38 view .LVU299
 978 0006 DBB2     		uxtb	r3, r3
 979              		.loc 1 1101 6 view .LVU300
 980 0008 012B     		cmp	r3, #1
 981 000a 06D9     		bls	.L65
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Request Sleep mode */
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 982              		.loc 1 1113 5 is_stmt 1 view .LVU301
 983              		.loc 1 1113 9 is_stmt 0 view .LVU302
 984 000c 426A     		ldr	r2, [r0, #36]
 985              		.loc 1 1113 21 view .LVU303
 986 000e 8023     		movs	r3, #128
 987 0010 DB02     		lsls	r3, r3, #11
 988 0012 1343     		orrs	r3, r2
 989 0014 4362     		str	r3, [r0, #36]
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 990              		.loc 1 1116 5 is_stmt 1 view .LVU304
 991              		.loc 1 1116 12 is_stmt 0 view .LVU305
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 42


 992 0016 0120     		movs	r0, #1
 993              	.LVL54:
 994              	.L64:
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 995              		.loc 1 1118 1 view .LVU306
 996              		@ sp needed
 997 0018 7047     		bx	lr
 998              	.LVL55:
 999              	.L65:
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1000              		.loc 1 1105 5 is_stmt 1 view .LVU307
 1001 001a 0268     		ldr	r2, [r0]
 1002 001c 1368     		ldr	r3, [r2]
 1003 001e 0221     		movs	r1, #2
 1004 0020 0B43     		orrs	r3, r1
 1005 0022 1360     		str	r3, [r2]
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1006              		.loc 1 1108 5 view .LVU308
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1007              		.loc 1 1108 12 is_stmt 0 view .LVU309
 1008 0024 0020     		movs	r0, #0
 1009              	.LVL56:
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1010              		.loc 1 1108 12 view .LVU310
 1011 0026 F7E7     		b	.L64
 1012              		.cfi_endproc
 1013              	.LFE47:
 1015              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1016              		.align	1
 1017              		.global	HAL_CAN_WakeUp
 1018              		.syntax unified
 1019              		.code	16
 1020              		.thumb_func
 1022              	HAL_CAN_WakeUp:
 1023              	.LVL57:
 1024              	.LFB48:
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         is exited.
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status.
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1025              		.loc 1 1129 1 is_stmt 1 view -0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 8
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 1030              		.loc 1 1129 1 is_stmt 0 view .LVU312
 1031 0000 82B0     		sub	sp, sp, #8
 1032              		.cfi_def_cfa_offset 8
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __IO uint32_t count = 0;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 43


 1033              		.loc 1 1130 3 is_stmt 1 view .LVU313
 1034              		.loc 1 1130 17 is_stmt 0 view .LVU314
 1035 0002 0023     		movs	r3, #0
 1036 0004 0193     		str	r3, [sp, #4]
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1037              		.loc 1 1131 3 is_stmt 1 view .LVU315
 1038              		.loc 1 1131 24 is_stmt 0 view .LVU316
 1039 0006 2033     		adds	r3, r3, #32
 1040 0008 C35C     		ldrb	r3, [r0, r3]
 1041              	.LVL58:
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1042              		.loc 1 1133 3 is_stmt 1 view .LVU317
 1043              		.loc 1 1133 38 is_stmt 0 view .LVU318
 1044 000a 013B     		subs	r3, r3, #1
 1045              	.LVL59:
 1046              		.loc 1 1133 38 view .LVU319
 1047 000c DBB2     		uxtb	r3, r3
 1048              		.loc 1 1133 6 view .LVU320
 1049 000e 012B     		cmp	r3, #1
 1050 0010 18D8     		bhi	.L67
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Wake up request */
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 1051              		.loc 1 1137 5 is_stmt 1 view .LVU321
 1052 0012 0268     		ldr	r2, [r0]
 1053 0014 1368     		ldr	r3, [r2]
 1054 0016 0221     		movs	r1, #2
 1055 0018 8B43     		bics	r3, r1
 1056 001a 1360     		str	r3, [r2]
 1057              	.L70:
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Wait sleep mode is exited */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     do
 1058              		.loc 1 1140 5 view .LVU322
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Increment counter */
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       count++;
 1059              		.loc 1 1143 7 view .LVU323
 1060              		.loc 1 1143 12 is_stmt 0 view .LVU324
 1061 001c 019B     		ldr	r3, [sp, #4]
 1062 001e 0133     		adds	r3, r3, #1
 1063 0020 0193     		str	r3, [sp, #4]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check if timeout is reached */
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if (count > CAN_WAKEUP_TIMEOUT_COUNTER)
 1064              		.loc 1 1146 7 is_stmt 1 view .LVU325
 1065              		.loc 1 1146 17 is_stmt 0 view .LVU326
 1066 0022 019A     		ldr	r2, [sp, #4]
 1067              		.loc 1 1146 10 view .LVU327
 1068 0024 0B4B     		ldr	r3, .L73
 1069 0026 9A42     		cmp	r2, r3
 1070 0028 05D8     		bhi	.L72
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update error code */
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 44


1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         return HAL_ERROR;
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     } while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 1071              		.loc 1 1153 51 is_stmt 1 view .LVU328
 1072              		.loc 1 1153 19 is_stmt 0 view .LVU329
 1073 002a 0368     		ldr	r3, [r0]
 1074              		.loc 1 1153 29 view .LVU330
 1075 002c 5B68     		ldr	r3, [r3, #4]
 1076              		.loc 1 1153 51 view .LVU331
 1077 002e 9B07     		lsls	r3, r3, #30
 1078 0030 F4D4     		bmi	.L70
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
 1079              		.loc 1 1156 12 view .LVU332
 1080 0032 0020     		movs	r0, #0
 1081              	.LVL60:
 1082              		.loc 1 1156 12 view .LVU333
 1083 0034 0CE0     		b	.L69
 1084              	.LVL61:
 1085              	.L72:
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1086              		.loc 1 1149 9 is_stmt 1 view .LVU334
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1087              		.loc 1 1149 13 is_stmt 0 view .LVU335
 1088 0036 426A     		ldr	r2, [r0, #36]
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1089              		.loc 1 1149 25 view .LVU336
 1090 0038 8023     		movs	r3, #128
 1091 003a 9B02     		lsls	r3, r3, #10
 1092 003c 1343     		orrs	r3, r2
 1093 003e 4362     		str	r3, [r0, #36]
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 1094              		.loc 1 1151 9 is_stmt 1 view .LVU337
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 1095              		.loc 1 1151 16 is_stmt 0 view .LVU338
 1096 0040 0120     		movs	r0, #1
 1097              	.LVL62:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 1098              		.loc 1 1151 16 view .LVU339
 1099 0042 05E0     		b	.L69
 1100              	.LVL63:
 1101              	.L67:
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1102              		.loc 1 1161 5 is_stmt 1 view .LVU340
 1103              		.loc 1 1161 9 is_stmt 0 view .LVU341
 1104 0044 426A     		ldr	r2, [r0, #36]
 1105              		.loc 1 1161 21 view .LVU342
 1106 0046 8023     		movs	r3, #128
 1107 0048 DB02     		lsls	r3, r3, #11
 1108 004a 1343     		orrs	r3, r2
 1109 004c 4362     		str	r3, [r0, #36]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 45


1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 1110              		.loc 1 1163 5 is_stmt 1 view .LVU343
 1111              		.loc 1 1163 12 is_stmt 0 view .LVU344
 1112 004e 0120     		movs	r0, #1
 1113              	.LVL64:
 1114              	.L69:
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1115              		.loc 1 1165 1 view .LVU345
 1116 0050 02B0     		add	sp, sp, #8
 1117              		@ sp needed
 1118 0052 7047     		bx	lr
 1119              	.L74:
 1120              		.align	2
 1121              	.L73:
 1122 0054 40420F00 		.word	1000000
 1123              		.cfi_endproc
 1124              	.LFE48:
 1126              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1127              		.align	1
 1128              		.global	HAL_CAN_IsSleepActive
 1129              		.syntax unified
 1130              		.code	16
 1131              		.thumb_func
 1133              	HAL_CAN_IsSleepActive:
 1134              	.LVL65:
 1135              	.LFB49:
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval Status
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1136              		.loc 1 1176 1 is_stmt 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t status = 0U;
 1141              		.loc 1 1177 3 view .LVU347
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1142              		.loc 1 1178 3 view .LVU348
 1143              		.loc 1 1178 24 is_stmt 0 view .LVU349
 1144 0000 2023     		movs	r3, #32
 1145 0002 C35C     		ldrb	r3, [r0, r3]
 1146              	.LVL66:
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1147              		.loc 1 1180 3 is_stmt 1 view .LVU350
 1148              		.loc 1 1180 38 is_stmt 0 view .LVU351
 1149 0004 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 46


 1150              	.LVL67:
 1151              		.loc 1 1180 38 view .LVU352
 1152 0006 DBB2     		uxtb	r3, r3
 1153              		.loc 1 1180 6 view .LVU353
 1154 0008 012B     		cmp	r3, #1
 1155 000a 01D9     		bls	.L79
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1156              		.loc 1 1177 12 view .LVU354
 1157 000c 0020     		movs	r0, #0
 1158              	.LVL68:
 1159              	.L75:
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Sleep mode */
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       status = 1U;
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return status;
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1160              		.loc 1 1192 1 view .LVU355
 1161              		@ sp needed
 1162 000e 7047     		bx	lr
 1163              	.LVL69:
 1164              	.L79:
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1165              		.loc 1 1184 5 is_stmt 1 view .LVU356
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1166              		.loc 1 1184 14 is_stmt 0 view .LVU357
 1167 0010 0368     		ldr	r3, [r0]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1168              		.loc 1 1184 24 view .LVU358
 1169 0012 5B68     		ldr	r3, [r3, #4]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1170              		.loc 1 1184 30 view .LVU359
 1171 0014 0222     		movs	r2, #2
 1172 0016 1000     		movs	r0, r2
 1173              	.LVL70:
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1174              		.loc 1 1184 30 view .LVU360
 1175 0018 1840     		ands	r0, r3
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1176              		.loc 1 1184 8 view .LVU361
 1177 001a 1A42     		tst	r2, r3
 1178 001c F7D0     		beq	.L75
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1179              		.loc 1 1186 14 view .LVU362
 1180 001e 0120     		movs	r0, #1
 1181              	.LVL71:
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1182              		.loc 1 1191 3 is_stmt 1 view .LVU363
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1183              		.loc 1 1191 10 is_stmt 0 view .LVU364
 1184 0020 F5E7     		b	.L75
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 47


 1185              		.cfi_endproc
 1186              	.LFE49:
 1188              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1189              		.align	1
 1190              		.global	HAL_CAN_AddTxMessage
 1191              		.syntax unified
 1192              		.code	16
 1193              		.thumb_func
 1195              	HAL_CAN_AddTxMessage:
 1196              	.LVL72:
 1197              	.LFB50:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         corresponding transmission request.
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1198              		.loc 1 1208 1 is_stmt 1 view -0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              		.loc 1 1208 1 is_stmt 0 view .LVU366
 1203 0000 70B5     		push	{r4, r5, r6, lr}
 1204              		.cfi_def_cfa_offset 16
 1205              		.cfi_offset 4, -16
 1206              		.cfi_offset 5, -12
 1207              		.cfi_offset 6, -8
 1208              		.cfi_offset 14, -4
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t transmitmailbox;
 1209              		.loc 1 1209 3 is_stmt 1 view .LVU367
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1210              		.loc 1 1210 3 view .LVU368
 1211              		.loc 1 1210 24 is_stmt 0 view .LVU369
 1212 0002 2024     		movs	r4, #32
 1213 0004 045D     		ldrb	r4, [r0, r4]
 1214              	.LVL73:
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1215              		.loc 1 1211 3 is_stmt 1 view .LVU370
 1216              		.loc 1 1211 18 is_stmt 0 view .LVU371
 1217 0006 0568     		ldr	r5, [r0]
 1218              		.loc 1 1211 12 view .LVU372
 1219 0008 AD68     		ldr	r5, [r5, #8]
 1220              	.LVL74:
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1221              		.loc 1 1214 3 is_stmt 1 view .LVU373
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 48


1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1222              		.loc 1 1215 3 view .LVU374
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1223              		.loc 1 1216 3 view .LVU375
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1224              		.loc 1 1217 3 view .LVU376
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 1225              		.loc 1 1223 5 view .LVU377
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1226              		.loc 1 1225 3 view .LVU378
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1227              		.loc 1 1227 3 view .LVU379
 1228              		.loc 1 1227 38 is_stmt 0 view .LVU380
 1229 000a 013C     		subs	r4, r4, #1
 1230              	.LVL75:
 1231              		.loc 1 1227 38 view .LVU381
 1232 000c E4B2     		uxtb	r4, r4
 1233              		.loc 1 1227 6 view .LVU382
 1234 000e 012C     		cmp	r4, #1
 1235 0010 61D8     		bhi	.L81
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1236              		.loc 1 1231 5 is_stmt 1 view .LVU383
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1237              		.loc 1 1232 38 is_stmt 0 view .LVU384
 1238 0012 E024     		movs	r4, #224
 1239 0014 6405     		lsls	r4, r4, #21
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1240              		.loc 1 1231 8 view .LVU385
 1241 0016 2542     		tst	r5, r4
 1242 0018 56D0     		beq	.L82
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Select an empty transmit mailbox */
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1243              		.loc 1 1236 7 is_stmt 1 view .LVU386
 1244              		.loc 1 1236 46 is_stmt 0 view .LVU387
 1245 001a 2D0E     		lsrs	r5, r5, #24
 1246              	.LVL76:
 1247              		.loc 1 1236 23 view .LVU388
 1248 001c 0324     		movs	r4, #3
 1249 001e 2C40     		ands	r4, r5
 1250              	.LVL77:
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Store the Tx mailbox */
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1251              		.loc 1 1239 7 is_stmt 1 view .LVU389
 1252              		.loc 1 1239 33 is_stmt 0 view .LVU390
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 49


 1253 0020 0125     		movs	r5, #1
 1254 0022 A540     		lsls	r5, r5, r4
 1255              		.loc 1 1239 19 view .LVU391
 1256 0024 1D60     		str	r5, [r3]
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Set up the Id */
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1257              		.loc 1 1242 7 is_stmt 1 view .LVU392
 1258              		.loc 1 1242 18 is_stmt 0 view .LVU393
 1259 0026 8B68     		ldr	r3, [r1, #8]
 1260              	.LVL78:
 1261              		.loc 1 1242 10 view .LVU394
 1262 0028 002B     		cmp	r3, #0
 1263 002a 3AD1     		bne	.L83
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1264              		.loc 1 1244 9 is_stmt 1 view .LVU395
 1265              		.loc 1 1244 68 is_stmt 0 view .LVU396
 1266 002c 0B68     		ldr	r3, [r1]
 1267              		.loc 1 1244 76 view .LVU397
 1268 002e 5B05     		lsls	r3, r3, #21
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->RTR);
 1269              		.loc 1 1245 67 view .LVU398
 1270 0030 CD68     		ldr	r5, [r1, #12]
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->RTR);
 1271              		.loc 1 1244 13 view .LVU399
 1272 0032 0668     		ldr	r6, [r0]
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->RTR);
 1273              		.loc 1 1244 98 view .LVU400
 1274 0034 2B43     		orrs	r3, r5
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->RTR);
 1275              		.loc 1 1244 57 view .LVU401
 1276 0036 2500     		movs	r5, r4
 1277 0038 1835     		adds	r5, r5, #24
 1278 003a 2D01     		lsls	r5, r5, #4
 1279 003c AB51     		str	r3, [r5, r6]
 1280              	.L84:
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       else
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->IDE |
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->RTR);
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Set up the DLC */
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1281              		.loc 1 1255 7 is_stmt 1 view .LVU402
 1282              		.loc 1 1255 11 is_stmt 0 view .LVU403
 1283 003e 0368     		ldr	r3, [r0]
 1284              		.loc 1 1255 66 view .LVU404
 1285 0040 0E69     		ldr	r6, [r1, #16]
 1286              		.loc 1 1255 56 view .LVU405
 1287 0042 2500     		movs	r5, r4
 1288 0044 1835     		adds	r5, r5, #24
 1289 0046 2D01     		lsls	r5, r5, #4
 1290 0048 5B19     		adds	r3, r3, r5
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 50


 1291 004a 5E60     		str	r6, [r3, #4]
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1292              		.loc 1 1258 7 is_stmt 1 view .LVU406
 1293              		.loc 1 1258 18 is_stmt 0 view .LVU407
 1294 004c 0B7D     		ldrb	r3, [r1, #20]
 1295              		.loc 1 1258 10 view .LVU408
 1296 004e 012B     		cmp	r3, #1
 1297 0050 32D0     		beq	.L87
 1298              	.LVL79:
 1299              	.L85:
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Set up the data field */
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1300              		.loc 1 1264 7 is_stmt 1 view .LVU409
 1301 0052 D379     		ldrb	r3, [r2, #7]
 1302 0054 1B06     		lsls	r3, r3, #24
 1303 0056 9179     		ldrb	r1, [r2, #6]
 1304 0058 0904     		lsls	r1, r1, #16
 1305 005a 0B43     		orrs	r3, r1
 1306 005c 5179     		ldrb	r1, [r2, #5]
 1307 005e 0902     		lsls	r1, r1, #8
 1308 0060 0B43     		orrs	r3, r1
 1309 0062 1579     		ldrb	r5, [r2, #4]
 1310 0064 0168     		ldr	r1, [r0]
 1311 0066 2B43     		orrs	r3, r5
 1312 0068 2501     		lsls	r5, r4, #4
 1313 006a 4919     		adds	r1, r1, r5
 1314 006c 8D31     		adds	r1, r1, #141
 1315 006e FF31     		adds	r1, r1, #255
 1316 0070 0B60     		str	r3, [r1]
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1317              		.loc 1 1269 7 view .LVU410
 1318 0072 D378     		ldrb	r3, [r2, #3]
 1319 0074 1B06     		lsls	r3, r3, #24
 1320 0076 9178     		ldrb	r1, [r2, #2]
 1321 0078 0904     		lsls	r1, r1, #16
 1322 007a 0B43     		orrs	r3, r1
 1323 007c 5178     		ldrb	r1, [r2, #1]
 1324 007e 0902     		lsls	r1, r1, #8
 1325 0080 0B43     		orrs	r3, r1
 1326 0082 1178     		ldrb	r1, [r2]
 1327 0084 0268     		ldr	r2, [r0]
 1328              	.LVL80:
 1329              		.loc 1 1269 7 is_stmt 0 view .LVU411
 1330 0086 0B43     		orrs	r3, r1
 1331 0088 5219     		adds	r2, r2, r5
 1332 008a 8932     		adds	r2, r2, #137
 1333 008c FF32     		adds	r2, r2, #255
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 51


 1334 008e 1360     		str	r3, [r2]
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Request transmission */
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1335              		.loc 1 1276 7 is_stmt 1 view .LVU412
 1336 0090 0268     		ldr	r2, [r0]
 1337 0092 1834     		adds	r4, r4, #24
 1338              	.LVL81:
 1339              		.loc 1 1276 7 is_stmt 0 view .LVU413
 1340 0094 2401     		lsls	r4, r4, #4
 1341              	.LVL82:
 1342              		.loc 1 1276 7 view .LVU414
 1343 0096 A358     		ldr	r3, [r4, r2]
 1344 0098 0121     		movs	r1, #1
 1345 009a 0B43     		orrs	r3, r1
 1346 009c A350     		str	r3, [r4, r2]
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Return function status */
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_OK;
 1347              		.loc 1 1279 7 is_stmt 1 view .LVU415
 1348              		.loc 1 1279 14 is_stmt 0 view .LVU416
 1349 009e 0020     		movs	r0, #0
 1350              	.LVL83:
 1351              		.loc 1 1279 14 view .LVU417
 1352 00a0 1FE0     		b	.L86
 1353              	.LVL84:
 1354              	.L83:
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->IDE |
 1355              		.loc 1 1249 9 is_stmt 1 view .LVU418
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->IDE |
 1356              		.loc 1 1249 68 is_stmt 0 view .LVU419
 1357 00a2 4D68     		ldr	r5, [r1, #4]
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->IDE |
 1358              		.loc 1 1249 76 view .LVU420
 1359 00a4 ED00     		lsls	r5, r5, #3
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->IDE |
 1360              		.loc 1 1249 98 view .LVU421
 1361 00a6 2B43     		orrs	r3, r5
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 1362              		.loc 1 1251 67 view .LVU422
 1363 00a8 CD68     		ldr	r5, [r1, #12]
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->IDE |
 1364              		.loc 1 1249 13 view .LVU423
 1365 00aa 0668     		ldr	r6, [r0]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->RTR);
 1366              		.loc 1 1250 73 view .LVU424
 1367 00ac 2B43     		orrs	r3, r5
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            pHeader->IDE |
 1368              		.loc 1 1249 57 view .LVU425
 1369 00ae 2500     		movs	r5, r4
 1370 00b0 1835     		adds	r5, r5, #24
 1371 00b2 2D01     		lsls	r5, r5, #4
 1372 00b4 AB51     		str	r3, [r5, r6]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 52


 1373 00b6 C2E7     		b	.L84
 1374              	.L87:
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 1375              		.loc 1 1260 9 is_stmt 1 view .LVU426
 1376 00b8 0368     		ldr	r3, [r0]
 1377 00ba 5B19     		adds	r3, r3, r5
 1378 00bc 5D68     		ldr	r5, [r3, #4]
 1379 00be 8021     		movs	r1, #128
 1380              	.LVL85:
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 1381              		.loc 1 1260 9 is_stmt 0 view .LVU427
 1382 00c0 4900     		lsls	r1, r1, #1
 1383 00c2 2943     		orrs	r1, r5
 1384 00c4 5960     		str	r1, [r3, #4]
 1385 00c6 C4E7     		b	.L85
 1386              	.LVL86:
 1387              	.L82:
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Update error code */
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1388              		.loc 1 1284 7 is_stmt 1 view .LVU428
 1389              		.loc 1 1284 11 is_stmt 0 view .LVU429
 1390 00c8 426A     		ldr	r2, [r0, #36]
 1391              	.LVL87:
 1392              		.loc 1 1284 23 view .LVU430
 1393 00ca 8023     		movs	r3, #128
 1394              	.LVL88:
 1395              		.loc 1 1284 23 view .LVU431
 1396 00cc 9B03     		lsls	r3, r3, #14
 1397 00ce 1343     		orrs	r3, r2
 1398 00d0 4362     		str	r3, [r0, #36]
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_ERROR;
 1399              		.loc 1 1286 7 is_stmt 1 view .LVU432
 1400              		.loc 1 1286 14 is_stmt 0 view .LVU433
 1401 00d2 0120     		movs	r0, #1
 1402              	.LVL89:
 1403              		.loc 1 1286 14 view .LVU434
 1404 00d4 05E0     		b	.L86
 1405              	.LVL90:
 1406              	.L81:
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1407              		.loc 1 1292 5 is_stmt 1 view .LVU435
 1408              		.loc 1 1292 9 is_stmt 0 view .LVU436
 1409 00d6 426A     		ldr	r2, [r0, #36]
 1410              	.LVL91:
 1411              		.loc 1 1292 21 view .LVU437
 1412 00d8 8023     		movs	r3, #128
 1413              	.LVL92:
 1414              		.loc 1 1292 21 view .LVU438
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 53


 1415 00da DB02     		lsls	r3, r3, #11
 1416 00dc 1343     		orrs	r3, r2
 1417 00de 4362     		str	r3, [r0, #36]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 1418              		.loc 1 1294 5 is_stmt 1 view .LVU439
 1419              		.loc 1 1294 12 is_stmt 0 view .LVU440
 1420 00e0 0120     		movs	r0, #1
 1421              	.LVL93:
 1422              	.L86:
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1423              		.loc 1 1296 1 view .LVU441
 1424              		@ sp needed
 1425 00e2 70BD     		pop	{r4, r5, r6, pc}
 1426              		.cfi_endproc
 1427              	.LFE50:
 1429              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1430              		.align	1
 1431              		.global	HAL_CAN_AbortTxRequest
 1432              		.syntax unified
 1433              		.code	16
 1434              		.thumb_func
 1436              	HAL_CAN_AbortTxRequest:
 1437              	.LVL94:
 1438              	.LFB51:
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Abort transmission requests
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1439              		.loc 1 1307 1 is_stmt 1 view -0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              		.loc 1 1307 1 is_stmt 0 view .LVU443
 1444 0000 10B5     		push	{r4, lr}
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 4, -8
 1447              		.cfi_offset 14, -4
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1448              		.loc 1 1308 3 is_stmt 1 view .LVU444
 1449              		.loc 1 1308 24 is_stmt 0 view .LVU445
 1450 0002 2023     		movs	r3, #32
 1451 0004 C35C     		ldrb	r3, [r0, r3]
 1452              	.LVL95:
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check function parameters */
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1453              		.loc 1 1311 3 is_stmt 1 view .LVU446
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 54


1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1454              		.loc 1 1313 3 view .LVU447
 1455              		.loc 1 1313 38 is_stmt 0 view .LVU448
 1456 0006 013B     		subs	r3, r3, #1
 1457              	.LVL96:
 1458              		.loc 1 1313 38 view .LVU449
 1459 0008 DBB2     		uxtb	r3, r3
 1460              		.loc 1 1313 6 view .LVU450
 1461 000a 012B     		cmp	r3, #1
 1462 000c 06D9     		bls	.L97
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1463              		.loc 1 1343 5 is_stmt 1 view .LVU451
 1464              		.loc 1 1343 9 is_stmt 0 view .LVU452
 1465 000e 426A     		ldr	r2, [r0, #36]
 1466              		.loc 1 1343 21 view .LVU453
 1467 0010 8023     		movs	r3, #128
 1468 0012 DB02     		lsls	r3, r3, #11
 1469 0014 1343     		orrs	r3, r2
 1470 0016 4362     		str	r3, [r0, #36]
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 1471              		.loc 1 1345 5 is_stmt 1 view .LVU454
 1472              		.loc 1 1345 12 is_stmt 0 view .LVU455
 1473 0018 0120     		movs	r0, #1
 1474              	.LVL97:
 1475              	.L93:
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 55


 1476              		.loc 1 1347 1 view .LVU456
 1477              		@ sp needed
 1478 001a 10BD     		pop	{r4, pc}
 1479              	.LVL98:
 1480              	.L97:
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1481              		.loc 1 1317 5 is_stmt 1 view .LVU457
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1482              		.loc 1 1317 8 is_stmt 0 view .LVU458
 1483 001c CB07     		lsls	r3, r1, #31
 1484 001e 04D5     		bpl	.L90
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1485              		.loc 1 1320 7 is_stmt 1 view .LVU459
 1486 0020 0268     		ldr	r2, [r0]
 1487 0022 9368     		ldr	r3, [r2, #8]
 1488 0024 8024     		movs	r4, #128
 1489 0026 2343     		orrs	r3, r4
 1490 0028 9360     		str	r3, [r2, #8]
 1491              	.L90:
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1492              		.loc 1 1324 5 view .LVU460
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1493              		.loc 1 1324 8 is_stmt 0 view .LVU461
 1494 002a 8B07     		lsls	r3, r1, #30
 1495 002c 05D5     		bpl	.L91
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1496              		.loc 1 1327 7 is_stmt 1 view .LVU462
 1497 002e 0268     		ldr	r2, [r0]
 1498 0030 9468     		ldr	r4, [r2, #8]
 1499 0032 8023     		movs	r3, #128
 1500 0034 1B02     		lsls	r3, r3, #8
 1501 0036 2343     		orrs	r3, r4
 1502 0038 9360     		str	r3, [r2, #8]
 1503              	.L91:
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1504              		.loc 1 1331 5 view .LVU463
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1505              		.loc 1 1331 8 is_stmt 0 view .LVU464
 1506 003a 4907     		lsls	r1, r1, #29
 1507 003c 05D5     		bpl	.L92
 1508              	.LVL99:
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1509              		.loc 1 1334 7 is_stmt 1 view .LVU465
 1510 003e 0268     		ldr	r2, [r0]
 1511 0040 9168     		ldr	r1, [r2, #8]
 1512 0042 8023     		movs	r3, #128
 1513 0044 1B04     		lsls	r3, r3, #16
 1514 0046 0B43     		orrs	r3, r1
 1515 0048 9360     		str	r3, [r2, #8]
 1516              	.L92:
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1517              		.loc 1 1338 5 view .LVU466
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1518              		.loc 1 1338 12 is_stmt 0 view .LVU467
 1519 004a 0020     		movs	r0, #0
 1520              	.LVL100:
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 56


 1521              		.loc 1 1338 12 view .LVU468
 1522 004c E5E7     		b	.L93
 1523              		.cfi_endproc
 1524              	.LFE51:
 1526              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1527              		.align	1
 1528              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1529              		.syntax unified
 1530              		.code	16
 1531              		.thumb_func
 1533              	HAL_CAN_GetTxMailboxesFreeLevel:
 1534              	.LVL101:
 1535              	.LFB52:
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1536              		.loc 1 1356 1 is_stmt 1 view -0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540              		@ link register save eliminated.
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t freelevel = 0U;
 1541              		.loc 1 1357 3 view .LVU470
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1542              		.loc 1 1358 3 view .LVU471
 1543              		.loc 1 1358 24 is_stmt 0 view .LVU472
 1544 0000 2023     		movs	r3, #32
 1545 0002 C35C     		ldrb	r3, [r0, r3]
 1546              	.LVL102:
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1547              		.loc 1 1360 3 is_stmt 1 view .LVU473
 1548              		.loc 1 1360 38 is_stmt 0 view .LVU474
 1549 0004 013B     		subs	r3, r3, #1
 1550              	.LVL103:
 1551              		.loc 1 1360 38 view .LVU475
 1552 0006 DBB2     		uxtb	r3, r3
 1553              		.loc 1 1360 6 view .LVU476
 1554 0008 012B     		cmp	r3, #1
 1555 000a 01D9     		bls	.L106
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1556              		.loc 1 1357 12 view .LVU477
 1557 000c 0020     		movs	r0, #0
 1558              	.LVL104:
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       freelevel++;
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 57


1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       freelevel++;
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       freelevel++;
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return freelevel;
 1559              		.loc 1 1383 3 is_stmt 1 view .LVU478
 1560              	.L98:
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1561              		.loc 1 1384 1 is_stmt 0 view .LVU479
 1562              		@ sp needed
 1563 000e 7047     		bx	lr
 1564              	.LVL105:
 1565              	.L106:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1566              		.loc 1 1364 5 is_stmt 1 view .LVU480
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1567              		.loc 1 1364 14 is_stmt 0 view .LVU481
 1568 0010 0368     		ldr	r3, [r0]
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1569              		.loc 1 1364 24 view .LVU482
 1570 0012 9968     		ldr	r1, [r3, #8]
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1571              		.loc 1 1364 30 view .LVU483
 1572 0014 8022     		movs	r2, #128
 1573 0016 D204     		lsls	r2, r2, #19
 1574 0018 0800     		movs	r0, r1
 1575              	.LVL106:
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1576              		.loc 1 1364 30 view .LVU484
 1577 001a 1040     		ands	r0, r2
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1578              		.loc 1 1364 8 view .LVU485
 1579 001c 1142     		tst	r1, r2
 1580 001e 00D0     		beq	.L100
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1581              		.loc 1 1366 16 view .LVU486
 1582 0020 0120     		movs	r0, #1
 1583              	.L100:
 1584              	.LVL107:
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1585              		.loc 1 1370 5 is_stmt 1 view .LVU487
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1586              		.loc 1 1370 24 is_stmt 0 view .LVU488
 1587 0022 9A68     		ldr	r2, [r3, #8]
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1588              		.loc 1 1370 8 view .LVU489
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 58


 1589 0024 1201     		lsls	r2, r2, #4
 1590 0026 00D5     		bpl	.L101
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1591              		.loc 1 1372 7 is_stmt 1 view .LVU490
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1592              		.loc 1 1372 16 is_stmt 0 view .LVU491
 1593 0028 0130     		adds	r0, r0, #1
 1594              	.LVL108:
 1595              	.L101:
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1596              		.loc 1 1376 5 is_stmt 1 view .LVU492
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1597              		.loc 1 1376 24 is_stmt 0 view .LVU493
 1598 002a 9B68     		ldr	r3, [r3, #8]
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1599              		.loc 1 1376 8 view .LVU494
 1600 002c DB00     		lsls	r3, r3, #3
 1601 002e EED5     		bpl	.L98
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1602              		.loc 1 1378 7 is_stmt 1 view .LVU495
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1603              		.loc 1 1378 16 is_stmt 0 view .LVU496
 1604 0030 0130     		adds	r0, r0, #1
 1605              	.LVL109:
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1606              		.loc 1 1378 16 view .LVU497
 1607 0032 ECE7     		b	.L98
 1608              		.cfi_endproc
 1609              	.LFE52:
 1611              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1612              		.align	1
 1613              		.global	HAL_CAN_IsTxMessagePending
 1614              		.syntax unified
 1615              		.code	16
 1616              		.thumb_func
 1618              	HAL_CAN_IsTxMessagePending:
 1619              	.LVL110:
 1620              	.LFB53:
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         Mailboxes.
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval Status
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *                Tx Mailbox.
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1621              		.loc 1 1399 1 is_stmt 1 view -0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 59


 1625              		@ link register save eliminated.
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t status = 0U;
 1626              		.loc 1 1400 3 view .LVU499
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1627              		.loc 1 1401 3 view .LVU500
 1628              		.loc 1 1401 24 is_stmt 0 view .LVU501
 1629 0000 2023     		movs	r3, #32
 1630 0002 C35C     		ldrb	r3, [r0, r3]
 1631              	.LVL111:
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check function parameters */
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1632              		.loc 1 1404 3 is_stmt 1 view .LVU502
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1633              		.loc 1 1406 3 view .LVU503
 1634              		.loc 1 1406 38 is_stmt 0 view .LVU504
 1635 0004 013B     		subs	r3, r3, #1
 1636              	.LVL112:
 1637              		.loc 1 1406 38 view .LVU505
 1638 0006 DBB2     		uxtb	r3, r3
 1639              		.loc 1 1406 6 view .LVU506
 1640 0008 012B     		cmp	r3, #1
 1641 000a 01D9     		bls	.L111
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1642              		.loc 1 1400 12 view .LVU507
 1643 000c 0020     		movs	r0, #0
 1644              	.LVL113:
 1645              	.L107:
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       status = 1U;
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return status */
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return status;
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1646              		.loc 1 1418 1 view .LVU508
 1647              		@ sp needed
 1648 000e 7047     		bx	lr
 1649              	.LVL114:
 1650              	.L111:
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1651              		.loc 1 1410 5 is_stmt 1 view .LVU509
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1652              		.loc 1 1410 14 is_stmt 0 view .LVU510
 1653 0010 0368     		ldr	r3, [r0]
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1654              		.loc 1 1410 24 view .LVU511
 1655 0012 9B68     		ldr	r3, [r3, #8]
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1656              		.loc 1 1410 45 view .LVU512
 1657 0014 8906     		lsls	r1, r1, #26
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 60


 1658              	.LVL115:
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1659              		.loc 1 1410 30 view .LVU513
 1660 0016 0B40     		ands	r3, r1
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1661              		.loc 1 1410 8 view .LVU514
 1662 0018 9942     		cmp	r1, r3
 1663 001a 01D0     		beq	.L112
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1664              		.loc 1 1412 14 view .LVU515
 1665 001c 0120     		movs	r0, #1
 1666              	.LVL116:
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1667              		.loc 1 1417 3 is_stmt 1 view .LVU516
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1668              		.loc 1 1417 10 is_stmt 0 view .LVU517
 1669 001e F6E7     		b	.L107
 1670              	.LVL117:
 1671              	.L112:
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1672              		.loc 1 1400 12 view .LVU518
 1673 0020 0020     		movs	r0, #0
 1674              	.LVL118:
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1675              		.loc 1 1400 12 view .LVU519
 1676 0022 F4E7     		b	.L107
 1677              		.cfi_endproc
 1678              	.LFE53:
 1680              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1681              		.align	1
 1682              		.global	HAL_CAN_GetTxTimestamp
 1683              		.syntax unified
 1684              		.code	16
 1685              		.thumb_func
 1687              	HAL_CAN_GetTxTimestamp:
 1688              	.LVL119:
 1689              	.LFB54:
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             mode is enabled.
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         read.
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1690              		.loc 1 1431 1 is_stmt 1 view -0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t timestamp = 0U;
 1695              		.loc 1 1432 3 view .LVU521
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 61


1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t transmitmailbox;
 1696              		.loc 1 1433 3 view .LVU522
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1697              		.loc 1 1434 3 view .LVU523
 1698              		.loc 1 1434 24 is_stmt 0 view .LVU524
 1699 0000 2023     		movs	r3, #32
 1700 0002 C35C     		ldrb	r3, [r0, r3]
 1701              	.LVL120:
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check function parameters */
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1702              		.loc 1 1437 3 is_stmt 1 view .LVU525
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1703              		.loc 1 1439 3 view .LVU526
 1704              		.loc 1 1439 38 is_stmt 0 view .LVU527
 1705 0004 013B     		subs	r3, r3, #1
 1706              	.LVL121:
 1707              		.loc 1 1439 38 view .LVU528
 1708 0006 DBB2     		uxtb	r3, r3
 1709              		.loc 1 1439 6 view .LVU529
 1710 0008 012B     		cmp	r3, #1
 1711 000a 01D9     		bls	.L119
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t transmitmailbox;
 1712              		.loc 1 1432 12 view .LVU530
 1713 000c 0020     		movs	r0, #0
 1714              	.LVL122:
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Select the Tx mailbox */
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Select the Tx mailbox */
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (TxMailbox == CAN_TX_MAILBOX0)
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = 0U;
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else if (TxMailbox == CAN_TX_MAILBOX1)
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = 1U;
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else /* (TxMailbox == CAN_TX_MAILBOX2) */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = 2U;
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Get timestamp */
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return the timestamp */
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return timestamp;
 1715              		.loc 1 1462 3 is_stmt 1 view .LVU531
 1716              	.L113:
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1717              		.loc 1 1463 1 is_stmt 0 view .LVU532
 1718              		@ sp needed
 1719 000e 7047     		bx	lr
 1720              	.LVL123:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 62


 1721              	.L119:
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1722              		.loc 1 1444 5 is_stmt 1 view .LVU533
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1723              		.loc 1 1444 8 is_stmt 0 view .LVU534
 1724 0010 0129     		cmp	r1, #1
 1725 0012 0BD0     		beq	.L117
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1726              		.loc 1 1448 10 is_stmt 1 view .LVU535
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1727              		.loc 1 1448 13 is_stmt 0 view .LVU536
 1728 0014 0229     		cmp	r1, #2
 1729 0016 07D0     		beq	.L120
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1730              		.loc 1 1454 23 view .LVU537
 1731 0018 0223     		movs	r3, #2
 1732              	.L115:
 1733              	.LVL124:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1734              		.loc 1 1458 5 is_stmt 1 view .LVU538
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1735              		.loc 1 1458 22 is_stmt 0 view .LVU539
 1736 001a 0268     		ldr	r2, [r0]
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1737              		.loc 1 1458 61 view .LVU540
 1738 001c 1833     		adds	r3, r3, #24
 1739              	.LVL125:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1740              		.loc 1 1458 61 view .LVU541
 1741 001e 1B01     		lsls	r3, r3, #4
 1742              	.LVL126:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1743              		.loc 1 1458 61 view .LVU542
 1744 0020 D318     		adds	r3, r2, r3
 1745 0022 5868     		ldr	r0, [r3, #4]
 1746              	.LVL127:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1747              		.loc 1 1458 85 view .LVU543
 1748 0024 000C     		lsrs	r0, r0, #16
 1749              	.LVL128:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1750              		.loc 1 1458 85 view .LVU544
 1751 0026 F2E7     		b	.L113
 1752              	.LVL129:
 1753              	.L120:
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1754              		.loc 1 1450 23 view .LVU545
 1755 0028 0123     		movs	r3, #1
 1756 002a F6E7     		b	.L115
 1757              	.L117:
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1758              		.loc 1 1446 23 view .LVU546
 1759 002c 0023     		movs	r3, #0
 1760 002e F4E7     		b	.L115
 1761              		.cfi_endproc
 1762              	.LFE54:
 1764              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 63


 1765              		.align	1
 1766              		.global	HAL_CAN_GetRxMessage
 1767              		.syntax unified
 1768              		.code	16
 1769              		.thumb_func
 1771              	HAL_CAN_GetRxMessage:
 1772              	.LVL130:
 1773              	.LFB55:
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         of the Rx frame will be stored.
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1774              		.loc 1 1478 1 is_stmt 1 view -0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 1778              		.loc 1 1478 1 is_stmt 0 view .LVU548
 1779 0000 70B5     		push	{r4, r5, r6, lr}
 1780              		.cfi_def_cfa_offset 16
 1781              		.cfi_offset 4, -16
 1782              		.cfi_offset 5, -12
 1783              		.cfi_offset 6, -8
 1784              		.cfi_offset 14, -4
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1785              		.loc 1 1479 3 is_stmt 1 view .LVU549
 1786              		.loc 1 1479 24 is_stmt 0 view .LVU550
 1787 0002 2024     		movs	r4, #32
 1788 0004 045D     		ldrb	r4, [r0, r4]
 1789              	.LVL131:
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1790              		.loc 1 1481 3 is_stmt 1 view .LVU551
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1791              		.loc 1 1483 3 view .LVU552
 1792              		.loc 1 1483 38 is_stmt 0 view .LVU553
 1793 0006 013C     		subs	r4, r4, #1
 1794              	.LVL132:
 1795              		.loc 1 1483 38 view .LVU554
 1796 0008 E4B2     		uxtb	r4, r4
 1797              		.loc 1 1483 6 view .LVU555
 1798 000a 012C     		cmp	r4, #1
 1799 000c 00D9     		bls	.LCB1574
 1800 000e 9CE0     		b	.L122	@long jump
 1801              	.LCB1574:
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 64


1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check the Rx FIFO */
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1802              		.loc 1 1487 5 is_stmt 1 view .LVU556
 1803              		.loc 1 1487 8 is_stmt 0 view .LVU557
 1804 0010 0029     		cmp	r1, #0
 1805 0012 0AD1     		bne	.L123
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1806              		.loc 1 1490 7 is_stmt 1 view .LVU558
 1807              		.loc 1 1490 16 is_stmt 0 view .LVU559
 1808 0014 0468     		ldr	r4, [r0]
 1809              		.loc 1 1490 26 view .LVU560
 1810 0016 E468     		ldr	r4, [r4, #12]
 1811              		.loc 1 1490 10 view .LVU561
 1812 0018 A407     		lsls	r4, r4, #30
 1813 001a 11D1     		bne	.L124
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update error code */
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1814              		.loc 1 1493 9 is_stmt 1 view .LVU562
 1815              		.loc 1 1493 13 is_stmt 0 view .LVU563
 1816 001c 426A     		ldr	r2, [r0, #36]
 1817              	.LVL133:
 1818              		.loc 1 1493 25 view .LVU564
 1819 001e 8023     		movs	r3, #128
 1820              	.LVL134:
 1821              		.loc 1 1493 25 view .LVU565
 1822 0020 9B03     		lsls	r3, r3, #14
 1823 0022 1343     		orrs	r3, r2
 1824 0024 4362     		str	r3, [r0, #36]
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         return HAL_ERROR;
 1825              		.loc 1 1495 9 is_stmt 1 view .LVU566
 1826              		.loc 1 1495 16 is_stmt 0 view .LVU567
 1827 0026 0120     		movs	r0, #1
 1828              	.LVL135:
 1829              		.loc 1 1495 16 view .LVU568
 1830 0028 95E0     		b	.L125
 1831              	.LVL136:
 1832              	.L123:
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1833              		.loc 1 1501 7 is_stmt 1 view .LVU569
 1834              		.loc 1 1501 16 is_stmt 0 view .LVU570
 1835 002a 0468     		ldr	r4, [r0]
 1836              		.loc 1 1501 26 view .LVU571
 1837 002c 2469     		ldr	r4, [r4, #16]
 1838              		.loc 1 1501 10 view .LVU572
 1839 002e A407     		lsls	r4, r4, #30
 1840 0030 06D1     		bne	.L124
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 65


1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Update error code */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1841              		.loc 1 1504 9 is_stmt 1 view .LVU573
 1842              		.loc 1 1504 13 is_stmt 0 view .LVU574
 1843 0032 426A     		ldr	r2, [r0, #36]
 1844              	.LVL137:
 1845              		.loc 1 1504 25 view .LVU575
 1846 0034 8023     		movs	r3, #128
 1847              	.LVL138:
 1848              		.loc 1 1504 25 view .LVU576
 1849 0036 9B03     		lsls	r3, r3, #14
 1850 0038 1343     		orrs	r3, r2
 1851 003a 4362     		str	r3, [r0, #36]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         return HAL_ERROR;
 1852              		.loc 1 1506 9 is_stmt 1 view .LVU577
 1853              		.loc 1 1506 16 is_stmt 0 view .LVU578
 1854 003c 0120     		movs	r0, #1
 1855              	.LVL139:
 1856              		.loc 1 1506 16 view .LVU579
 1857 003e 8AE0     		b	.L125
 1858              	.LVL140:
 1859              	.L124:
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Get the header */
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1860              		.loc 1 1511 5 is_stmt 1 view .LVU580
 1861              		.loc 1 1511 39 is_stmt 0 view .LVU581
 1862 0040 0568     		ldr	r5, [r0]
 1863              		.loc 1 1511 71 view .LVU582
 1864 0042 0C00     		movs	r4, r1
 1865 0044 1B34     		adds	r4, r4, #27
 1866 0046 2401     		lsls	r4, r4, #4
 1867 0048 6559     		ldr	r5, [r4, r5]
 1868              		.loc 1 1511 33 view .LVU583
 1869 004a 0424     		movs	r4, #4
 1870 004c 2C40     		ands	r4, r5
 1871              		.loc 1 1511 18 view .LVU584
 1872 004e 9460     		str	r4, [r2, #8]
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1873              		.loc 1 1512 5 is_stmt 1 view .LVU585
 1874              		.loc 1 1512 8 is_stmt 0 view .LVU586
 1875 0050 64D1     		bne	.L126
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 1876              		.loc 1 1514 7 is_stmt 1 view .LVU587
 1877              		.loc 1 1514 45 is_stmt 0 view .LVU588
 1878 0052 0568     		ldr	r5, [r0]
 1879              		.loc 1 1514 77 view .LVU589
 1880 0054 0C00     		movs	r4, r1
 1881 0056 1B34     		adds	r4, r4, #27
 1882 0058 2401     		lsls	r4, r4, #4
 1883 005a 6459     		ldr	r4, [r4, r5]
 1884              		.loc 1 1514 83 view .LVU590
 1885 005c 640D     		lsrs	r4, r4, #21
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 66


 1886              		.loc 1 1514 22 view .LVU591
 1887 005e 1460     		str	r4, [r2]
 1888              	.L127:
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1889              		.loc 1 1521 5 is_stmt 1 view .LVU592
 1890              		.loc 1 1521 40 is_stmt 0 view .LVU593
 1891 0060 0568     		ldr	r5, [r0]
 1892              		.loc 1 1521 72 view .LVU594
 1893 0062 0C00     		movs	r4, r1
 1894 0064 1B34     		adds	r4, r4, #27
 1895 0066 2401     		lsls	r4, r4, #4
 1896 0068 6659     		ldr	r6, [r4, r5]
 1897              		.loc 1 1521 34 view .LVU595
 1898 006a 0225     		movs	r5, #2
 1899 006c 3540     		ands	r5, r6
 1900              		.loc 1 1521 18 view .LVU596
 1901 006e D560     		str	r5, [r2, #12]
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 1902              		.loc 1 1522 5 is_stmt 1 view .LVU597
 1903              		.loc 1 1522 31 is_stmt 0 view .LVU598
 1904 0070 0568     		ldr	r5, [r0]
 1905              		.loc 1 1522 63 view .LVU599
 1906 0072 2C19     		adds	r4, r5, r4
 1907 0074 6468     		ldr	r4, [r4, #4]
 1908              		.loc 1 1522 8 view .LVU600
 1909 0076 2407     		lsls	r4, r4, #28
 1910 0078 58D5     		bpl	.L128
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Truncate DLC to 8 if received field is over range */
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       pHeader->DLC = 8U;
 1911              		.loc 1 1525 7 is_stmt 1 view .LVU601
 1912              		.loc 1 1525 20 is_stmt 0 view .LVU602
 1913 007a 0824     		movs	r4, #8
 1914 007c 1461     		str	r4, [r2, #16]
 1915              	.L129:
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_P
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1916              		.loc 1 1531 5 is_stmt 1 view .LVU603
 1917              		.loc 1 1531 54 is_stmt 0 view .LVU604
 1918 007e 0568     		ldr	r5, [r0]
 1919              		.loc 1 1531 86 view .LVU605
 1920 0080 0C00     		movs	r4, r1
 1921 0082 1B34     		adds	r4, r4, #27
 1922 0084 2401     		lsls	r4, r4, #4
 1923 0086 2D19     		adds	r5, r5, r4
 1924 0088 6E68     		ldr	r6, [r5, #4]
 1925              		.loc 1 1531 93 view .LVU606
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 67


 1926 008a 360A     		lsrs	r6, r6, #8
 1927 008c FF25     		movs	r5, #255
 1928 008e 3540     		ands	r5, r6
 1929              		.loc 1 1531 31 view .LVU607
 1930 0090 9561     		str	r5, [r2, #24]
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1931              		.loc 1 1532 5 is_stmt 1 view .LVU608
 1932              		.loc 1 1532 48 is_stmt 0 view .LVU609
 1933 0092 0568     		ldr	r5, [r0]
 1934              		.loc 1 1532 80 view .LVU610
 1935 0094 2C19     		adds	r4, r5, r4
 1936 0096 6468     		ldr	r4, [r4, #4]
 1937              		.loc 1 1532 87 view .LVU611
 1938 0098 240C     		lsrs	r4, r4, #16
 1939              		.loc 1 1532 24 view .LVU612
 1940 009a 5461     		str	r4, [r2, #20]
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Get the data */
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1941              		.loc 1 1535 5 is_stmt 1 view .LVU613
 1942              		.loc 1 1535 49 is_stmt 0 view .LVU614
 1943 009c 0468     		ldr	r4, [r0]
 1944              		.loc 1 1535 81 view .LVU615
 1945 009e 0A01     		lsls	r2, r1, #4
 1946              	.LVL141:
 1947              		.loc 1 1535 81 view .LVU616
 1948 00a0 A418     		adds	r4, r4, r2
 1949 00a2 B934     		adds	r4, r4, #185
 1950 00a4 FF34     		adds	r4, r4, #255
 1951 00a6 2468     		ldr	r4, [r4]
 1952              		.loc 1 1535 14 view .LVU617
 1953 00a8 1C70     		strb	r4, [r3]
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1954              		.loc 1 1536 5 is_stmt 1 view .LVU618
 1955              		.loc 1 1536 49 is_stmt 0 view .LVU619
 1956 00aa 0468     		ldr	r4, [r0]
 1957              		.loc 1 1536 81 view .LVU620
 1958 00ac A418     		adds	r4, r4, r2
 1959 00ae B934     		adds	r4, r4, #185
 1960 00b0 FF34     		adds	r4, r4, #255
 1961 00b2 2468     		ldr	r4, [r4]
 1962              		.loc 1 1536 88 view .LVU621
 1963 00b4 240A     		lsrs	r4, r4, #8
 1964              		.loc 1 1536 14 view .LVU622
 1965 00b6 5C70     		strb	r4, [r3, #1]
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1966              		.loc 1 1537 5 is_stmt 1 view .LVU623
 1967              		.loc 1 1537 49 is_stmt 0 view .LVU624
 1968 00b8 0468     		ldr	r4, [r0]
 1969              		.loc 1 1537 81 view .LVU625
 1970 00ba A418     		adds	r4, r4, r2
 1971 00bc B934     		adds	r4, r4, #185
 1972 00be FF34     		adds	r4, r4, #255
 1973 00c0 2468     		ldr	r4, [r4]
 1974              		.loc 1 1537 88 view .LVU626
 1975 00c2 240C     		lsrs	r4, r4, #16
 1976              		.loc 1 1537 14 view .LVU627
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 68


 1977 00c4 9C70     		strb	r4, [r3, #2]
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1978              		.loc 1 1538 5 is_stmt 1 view .LVU628
 1979              		.loc 1 1538 49 is_stmt 0 view .LVU629
 1980 00c6 0468     		ldr	r4, [r0]
 1981              		.loc 1 1538 81 view .LVU630
 1982 00c8 A418     		adds	r4, r4, r2
 1983 00ca B934     		adds	r4, r4, #185
 1984 00cc FF34     		adds	r4, r4, #255
 1985 00ce 2468     		ldr	r4, [r4]
 1986              		.loc 1 1538 16 view .LVU631
 1987 00d0 240E     		lsrs	r4, r4, #24
 1988              		.loc 1 1538 14 view .LVU632
 1989 00d2 DC70     		strb	r4, [r3, #3]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1990              		.loc 1 1539 5 is_stmt 1 view .LVU633
 1991              		.loc 1 1539 49 is_stmt 0 view .LVU634
 1992 00d4 0468     		ldr	r4, [r0]
 1993              		.loc 1 1539 81 view .LVU635
 1994 00d6 A418     		adds	r4, r4, r2
 1995 00d8 BD34     		adds	r4, r4, #189
 1996 00da FF34     		adds	r4, r4, #255
 1997 00dc 2468     		ldr	r4, [r4]
 1998              		.loc 1 1539 14 view .LVU636
 1999 00de 1C71     		strb	r4, [r3, #4]
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2000              		.loc 1 1540 5 is_stmt 1 view .LVU637
 2001              		.loc 1 1540 49 is_stmt 0 view .LVU638
 2002 00e0 0468     		ldr	r4, [r0]
 2003              		.loc 1 1540 81 view .LVU639
 2004 00e2 A418     		adds	r4, r4, r2
 2005 00e4 BD34     		adds	r4, r4, #189
 2006 00e6 FF34     		adds	r4, r4, #255
 2007 00e8 2468     		ldr	r4, [r4]
 2008              		.loc 1 1540 88 view .LVU640
 2009 00ea 240A     		lsrs	r4, r4, #8
 2010              		.loc 1 1540 14 view .LVU641
 2011 00ec 5C71     		strb	r4, [r3, #5]
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2012              		.loc 1 1541 5 is_stmt 1 view .LVU642
 2013              		.loc 1 1541 49 is_stmt 0 view .LVU643
 2014 00ee 0468     		ldr	r4, [r0]
 2015              		.loc 1 1541 81 view .LVU644
 2016 00f0 A418     		adds	r4, r4, r2
 2017 00f2 BD34     		adds	r4, r4, #189
 2018 00f4 FF34     		adds	r4, r4, #255
 2019 00f6 2468     		ldr	r4, [r4]
 2020              		.loc 1 1541 88 view .LVU645
 2021 00f8 240C     		lsrs	r4, r4, #16
 2022              		.loc 1 1541 14 view .LVU646
 2023 00fa 9C71     		strb	r4, [r3, #6]
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2024              		.loc 1 1542 5 is_stmt 1 view .LVU647
 2025              		.loc 1 1542 49 is_stmt 0 view .LVU648
 2026 00fc 0468     		ldr	r4, [r0]
 2027              		.loc 1 1542 81 view .LVU649
 2028 00fe A218     		adds	r2, r4, r2
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 69


 2029 0100 BD32     		adds	r2, r2, #189
 2030 0102 FF32     		adds	r2, r2, #255
 2031 0104 1268     		ldr	r2, [r2]
 2032              		.loc 1 1542 16 view .LVU650
 2033 0106 120E     		lsrs	r2, r2, #24
 2034              		.loc 1 1542 14 view .LVU651
 2035 0108 DA71     		strb	r2, [r3, #7]
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Release the FIFO */
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 2036              		.loc 1 1545 5 is_stmt 1 view .LVU652
 2037              		.loc 1 1545 8 is_stmt 0 view .LVU653
 2038 010a 0029     		cmp	r1, #0
 2039 010c 17D1     		bne	.L130
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Release RX FIFO 0 */
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 2040              		.loc 1 1548 7 is_stmt 1 view .LVU654
 2041 010e 0268     		ldr	r2, [r0]
 2042 0110 D368     		ldr	r3, [r2, #12]
 2043              	.LVL142:
 2044              		.loc 1 1548 7 is_stmt 0 view .LVU655
 2045 0112 2031     		adds	r1, r1, #32
 2046              	.LVL143:
 2047              		.loc 1 1548 7 view .LVU656
 2048 0114 0B43     		orrs	r3, r1
 2049 0116 D360     		str	r3, [r2, #12]
 2050              	.LVL144:
 2051              	.L131:
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Release RX FIFO 1 */
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
 2052              		.loc 1 1557 5 is_stmt 1 view .LVU657
 2053              		.loc 1 1557 12 is_stmt 0 view .LVU658
 2054 0118 0020     		movs	r0, #0
 2055              	.LVL145:
 2056              		.loc 1 1557 12 view .LVU659
 2057 011a 1CE0     		b	.L125
 2058              	.LVL146:
 2059              	.L126:
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2060              		.loc 1 1518 7 is_stmt 1 view .LVU660
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2061              		.loc 1 1519 29 is_stmt 0 view .LVU661
 2062 011c 0568     		ldr	r5, [r0]
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2063              		.loc 1 1519 61 view .LVU662
 2064 011e 0C00     		movs	r4, r1
 2065 0120 1B34     		adds	r4, r4, #27
 2066 0122 2401     		lsls	r4, r4, #4
 2067 0124 6459     		ldr	r4, [r4, r5]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 70


1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2068              		.loc 1 1519 67 view .LVU663
 2069 0126 E408     		lsrs	r4, r4, #3
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2070              		.loc 1 1518 22 view .LVU664
 2071 0128 5460     		str	r4, [r2, #4]
 2072 012a 99E7     		b	.L127
 2073              	.L128:
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2074              		.loc 1 1529 7 is_stmt 1 view .LVU665
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2075              		.loc 1 1529 75 is_stmt 0 view .LVU666
 2076 012c 0C00     		movs	r4, r1
 2077 012e 1B34     		adds	r4, r4, #27
 2078 0130 2401     		lsls	r4, r4, #4
 2079 0132 2D19     		adds	r5, r5, r4
 2080 0134 6D68     		ldr	r5, [r5, #4]
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2081              		.loc 1 1529 82 view .LVU667
 2082 0136 0F24     		movs	r4, #15
 2083 0138 2C40     		ands	r4, r5
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2084              		.loc 1 1529 20 view .LVU668
 2085 013a 1461     		str	r4, [r2, #16]
 2086 013c 9FE7     		b	.L129
 2087              	.LVL147:
 2088              	.L130:
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2089              		.loc 1 1553 7 is_stmt 1 view .LVU669
 2090 013e 0268     		ldr	r2, [r0]
 2091 0140 1369     		ldr	r3, [r2, #16]
 2092              	.LVL148:
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2093              		.loc 1 1553 7 is_stmt 0 view .LVU670
 2094 0142 2021     		movs	r1, #32
 2095              	.LVL149:
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2096              		.loc 1 1553 7 view .LVU671
 2097 0144 0B43     		orrs	r3, r1
 2098 0146 1361     		str	r3, [r2, #16]
 2099 0148 E6E7     		b	.L131
 2100              	.LVL150:
 2101              	.L122:
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2102              		.loc 1 1562 5 is_stmt 1 view .LVU672
 2103              		.loc 1 1562 9 is_stmt 0 view .LVU673
 2104 014a 426A     		ldr	r2, [r0, #36]
 2105              	.LVL151:
 2106              		.loc 1 1562 21 view .LVU674
 2107 014c 8023     		movs	r3, #128
 2108              	.LVL152:
 2109              		.loc 1 1562 21 view .LVU675
 2110 014e DB02     		lsls	r3, r3, #11
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 71


 2111 0150 1343     		orrs	r3, r2
 2112 0152 4362     		str	r3, [r0, #36]
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 2113              		.loc 1 1564 5 is_stmt 1 view .LVU676
 2114              		.loc 1 1564 12 is_stmt 0 view .LVU677
 2115 0154 0120     		movs	r0, #1
 2116              	.LVL153:
 2117              	.L125:
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2118              		.loc 1 1566 1 view .LVU678
 2119              		@ sp needed
 2120 0156 70BD     		pop	{r4, r5, r6, pc}
 2121              		.cfi_endproc
 2122              	.LFE55:
 2124              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 2125              		.align	1
 2126              		.global	HAL_CAN_GetRxFifoFillLevel
 2127              		.syntax unified
 2128              		.code	16
 2129              		.thumb_func
 2131              	HAL_CAN_GetRxFifoFillLevel:
 2132              	.LVL154:
 2133              	.LFB56:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2134              		.loc 1 1577 1 is_stmt 1 view -0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 0
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138              		@ link register save eliminated.
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t filllevel = 0U;
 2139              		.loc 1 1578 3 view .LVU680
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2140              		.loc 1 1579 3 view .LVU681
 2141              		.loc 1 1579 24 is_stmt 0 view .LVU682
 2142 0000 2023     		movs	r3, #32
 2143 0002 C35C     		ldrb	r3, [r0, r3]
 2144              	.LVL155:
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check function parameters */
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 2145              		.loc 1 1582 3 is_stmt 1 view .LVU683
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2146              		.loc 1 1584 3 view .LVU684
 2147              		.loc 1 1584 38 is_stmt 0 view .LVU685
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 72


 2148 0004 013B     		subs	r3, r3, #1
 2149              	.LVL156:
 2150              		.loc 1 1584 38 view .LVU686
 2151 0006 DBB2     		uxtb	r3, r3
 2152              		.loc 1 1584 6 view .LVU687
 2153 0008 012B     		cmp	r3, #1
 2154 000a 01D9     		bls	.L138
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2155              		.loc 1 1578 12 view .LVU688
 2156 000c 0020     		movs	r0, #0
 2157              	.LVL157:
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return Rx FIFO fill level */
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return filllevel;
 2158              		.loc 1 1598 3 is_stmt 1 view .LVU689
 2159              	.L134:
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2160              		.loc 1 1599 1 is_stmt 0 view .LVU690
 2161              		@ sp needed
 2162 000e 7047     		bx	lr
 2163              	.LVL158:
 2164              	.L138:
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2165              		.loc 1 1587 5 is_stmt 1 view .LVU691
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2166              		.loc 1 1587 8 is_stmt 0 view .LVU692
 2167 0010 0029     		cmp	r1, #0
 2168 0012 04D1     		bne	.L136
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2169              		.loc 1 1589 7 is_stmt 1 view .LVU693
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2170              		.loc 1 1589 23 is_stmt 0 view .LVU694
 2171 0014 0368     		ldr	r3, [r0]
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2172              		.loc 1 1589 33 view .LVU695
 2173 0016 DB68     		ldr	r3, [r3, #12]
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2174              		.loc 1 1589 17 view .LVU696
 2175 0018 0320     		movs	r0, #3
 2176              	.LVL159:
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2177              		.loc 1 1589 17 view .LVU697
 2178 001a 1840     		ands	r0, r3
 2179              	.LVL160:
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2180              		.loc 1 1589 17 view .LVU698
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 73


 2181 001c F7E7     		b	.L134
 2182              	.LVL161:
 2183              	.L136:
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2184              		.loc 1 1593 7 is_stmt 1 view .LVU699
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2185              		.loc 1 1593 23 is_stmt 0 view .LVU700
 2186 001e 0368     		ldr	r3, [r0]
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2187              		.loc 1 1593 33 view .LVU701
 2188 0020 1B69     		ldr	r3, [r3, #16]
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2189              		.loc 1 1593 17 view .LVU702
 2190 0022 0320     		movs	r0, #3
 2191              	.LVL162:
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2192              		.loc 1 1593 17 view .LVU703
 2193 0024 1840     		ands	r0, r3
 2194              	.LVL163:
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2195              		.loc 1 1593 17 view .LVU704
 2196 0026 F2E7     		b	.L134
 2197              		.cfi_endproc
 2198              	.LFE56:
 2200              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 2201              		.align	1
 2202              		.global	HAL_CAN_ActivateNotification
 2203              		.syntax unified
 2204              		.code	16
 2205              		.thumb_func
 2207              	HAL_CAN_ActivateNotification:
 2208              	.LVL164:
 2209              	.LFB57:
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief    Interrupts management
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                        ##### Interrupts management #####
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]  This section provides functions allowing to:
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Enable interrupts.
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 74


1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2210              		.loc 1 1630 1 is_stmt 1 view -0
 2211              		.cfi_startproc
 2212              		@ args = 0, pretend = 0, frame = 0
 2213              		@ frame_needed = 0, uses_anonymous_args = 0
 2214              		@ link register save eliminated.
1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2215              		.loc 1 1631 3 view .LVU706
 2216              		.loc 1 1631 24 is_stmt 0 view .LVU707
 2217 0000 2023     		movs	r3, #32
 2218 0002 C35C     		ldrb	r3, [r0, r3]
 2219              	.LVL165:
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check function parameters */
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 2220              		.loc 1 1634 3 is_stmt 1 view .LVU708
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2221              		.loc 1 1636 3 view .LVU709
 2222              		.loc 1 1636 38 is_stmt 0 view .LVU710
 2223 0004 013B     		subs	r3, r3, #1
 2224              	.LVL166:
 2225              		.loc 1 1636 38 view .LVU711
 2226 0006 DBB2     		uxtb	r3, r3
 2227              		.loc 1 1636 6 view .LVU712
 2228 0008 012B     		cmp	r3, #1
 2229 000a 06D9     		bls	.L142
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Enable the selected interrupts */
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2230              		.loc 1 1648 5 is_stmt 1 view .LVU713
 2231              		.loc 1 1648 9 is_stmt 0 view .LVU714
 2232 000c 426A     		ldr	r2, [r0, #36]
 2233              		.loc 1 1648 21 view .LVU715
 2234 000e 8023     		movs	r3, #128
 2235 0010 DB02     		lsls	r3, r3, #11
 2236 0012 1343     		orrs	r3, r2
 2237 0014 4362     		str	r3, [r0, #36]
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 2238              		.loc 1 1650 5 is_stmt 1 view .LVU716
 2239              		.loc 1 1650 12 is_stmt 0 view .LVU717
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 75


 2240 0016 0120     		movs	r0, #1
 2241              	.LVL167:
 2242              	.L141:
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2243              		.loc 1 1652 1 view .LVU718
 2244              		@ sp needed
 2245 0018 7047     		bx	lr
 2246              	.LVL168:
 2247              	.L142:
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2248              		.loc 1 1640 5 is_stmt 1 view .LVU719
 2249 001a 0268     		ldr	r2, [r0]
 2250 001c 5369     		ldr	r3, [r2, #20]
 2251 001e 0B43     		orrs	r3, r1
 2252 0020 5361     		str	r3, [r2, #20]
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2253              		.loc 1 1643 5 view .LVU720
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2254              		.loc 1 1643 12 is_stmt 0 view .LVU721
 2255 0022 0020     		movs	r0, #0
 2256              	.LVL169:
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2257              		.loc 1 1643 12 view .LVU722
 2258 0024 F8E7     		b	.L141
 2259              		.cfi_endproc
 2260              	.LFE57:
 2262              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2263              		.align	1
 2264              		.global	HAL_CAN_DeactivateNotification
 2265              		.syntax unified
 2266              		.code	16
 2267              		.thumb_func
 2269              	HAL_CAN_DeactivateNotification:
 2270              	.LVL170:
 2271              	.LFB58:
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Disable interrupts.
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2272              		.loc 1 1663 1 is_stmt 1 view -0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 0
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              		@ link register save eliminated.
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2277              		.loc 1 1664 3 view .LVU724
 2278              		.loc 1 1664 24 is_stmt 0 view .LVU725
 2279 0000 2023     		movs	r3, #32
 2280 0002 C35C     		ldrb	r3, [r0, r3]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 76


 2281              	.LVL171:
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check function parameters */
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2282              		.loc 1 1667 3 is_stmt 1 view .LVU726
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2283              		.loc 1 1669 3 view .LVU727
 2284              		.loc 1 1669 38 is_stmt 0 view .LVU728
 2285 0004 013B     		subs	r3, r3, #1
 2286              	.LVL172:
 2287              		.loc 1 1669 38 view .LVU729
 2288 0006 DBB2     		uxtb	r3, r3
 2289              		.loc 1 1669 6 view .LVU730
 2290 0008 012B     		cmp	r3, #1
 2291 000a 06D9     		bls	.L146
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Disable the selected interrupts */
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2292              		.loc 1 1681 5 is_stmt 1 view .LVU731
 2293              		.loc 1 1681 9 is_stmt 0 view .LVU732
 2294 000c 426A     		ldr	r2, [r0, #36]
 2295              		.loc 1 1681 21 view .LVU733
 2296 000e 8023     		movs	r3, #128
 2297 0010 DB02     		lsls	r3, r3, #11
 2298 0012 1343     		orrs	r3, r2
 2299 0014 4362     		str	r3, [r0, #36]
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 2300              		.loc 1 1683 5 is_stmt 1 view .LVU734
 2301              		.loc 1 1683 12 is_stmt 0 view .LVU735
 2302 0016 0120     		movs	r0, #1
 2303              	.LVL173:
 2304              	.L145:
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2305              		.loc 1 1685 1 view .LVU736
 2306              		@ sp needed
 2307 0018 7047     		bx	lr
 2308              	.LVL174:
 2309              	.L146:
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2310              		.loc 1 1673 5 is_stmt 1 view .LVU737
 2311 001a 0268     		ldr	r2, [r0]
 2312 001c 5369     		ldr	r3, [r2, #20]
 2313 001e 8B43     		bics	r3, r1
 2314 0020 5361     		str	r3, [r2, #20]
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 77


 2315              		.loc 1 1676 5 view .LVU738
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2316              		.loc 1 1676 12 is_stmt 0 view .LVU739
 2317 0022 0020     		movs	r0, #0
 2318              	.LVL175:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2319              		.loc 1 1676 12 view .LVU740
 2320 0024 F8E7     		b	.L145
 2321              		.cfi_endproc
 2322              	.LFE58:
 2324              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2325              		.align	1
 2326              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2327              		.syntax unified
 2328              		.code	16
 2329              		.thumb_func
 2331              	HAL_CAN_TxMailbox0CompleteCallback:
 2332              	.LVL176:
 2333              	.LFB60:
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Call registered callback*/
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Call weak (surcharged) callback */
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       else
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 78


1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Update error code */
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Update error code */
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         else
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Call registered callback*/
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Call weak (surcharged) callback */
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Call registered callback*/
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Call weak (surcharged) callback */
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       else
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Update error code */
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Update error code */
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         else
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 79


1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Call registered callback*/
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Call weak (surcharged) callback */
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Call registered callback*/
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Call weak (surcharged) callback */
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       else
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Update error code */
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Update error code */
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         else
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Call registered callback*/
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Call weak (surcharged) callback */
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 80


1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call registered callback*/
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call weak (surcharged) callback */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check if message is still pending */
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call registered callback*/
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call weak (surcharged) callback */
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 81


1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call registered callback*/
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call weak (surcharged) callback */
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check if message is still pending */
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call registered callback*/
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call weak (surcharged) callback */
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Sleep Callback */
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call registered callback*/
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->SleepCallback(hcan);
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call weak (surcharged) callback */
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 82


1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear WakeUp Flag */
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* WakeUp Callback */
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call registered callback*/
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Call weak (surcharged) callback */
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Error interrupts management *********************************************/
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check Error Warning Flag */
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Set CAN error code to Error Warning */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check Error Passive Flag */
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Set CAN error code to Error Passive */
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check Bus-off Flag */
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check Last Error Code Flag */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 83


2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             /* Set CAN error code to Form error */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             /* Set CAN error code to CRC error */
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           default:
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Clear Last error code Flag */
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Clear ERRI Flag */
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code in handle */
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Call Error callback function */
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Call registered callback*/
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #else
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Call weak (surcharged) callback */
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 84


2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief   CAN Callback functions
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                           ##### Callback functions #####
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     This subsection provides the following callback functions:
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2334              		.loc 1 2105 1 is_stmt 1 view -0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 0
 2337              		@ frame_needed = 0, uses_anonymous_args = 0
 2338              		@ link register save eliminated.
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2339              		.loc 1 2107 3 view .LVU742
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2340              		.loc 1 2113 1 is_stmt 0 view .LVU743
 2341              		@ sp needed
 2342 0000 7047     		bx	lr
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 85


 2343              		.cfi_endproc
 2344              	.LFE60:
 2346              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2347              		.align	1
 2348              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2349              		.syntax unified
 2350              		.code	16
 2351              		.thumb_func
 2353              	HAL_CAN_TxMailbox1CompleteCallback:
 2354              	.LVL177:
 2355              	.LFB61:
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2356              		.loc 1 2122 1 is_stmt 1 view -0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 0
 2359              		@ frame_needed = 0, uses_anonymous_args = 0
 2360              		@ link register save eliminated.
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2361              		.loc 1 2124 3 view .LVU745
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2362              		.loc 1 2130 1 is_stmt 0 view .LVU746
 2363              		@ sp needed
 2364 0000 7047     		bx	lr
 2365              		.cfi_endproc
 2366              	.LFE61:
 2368              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 2369              		.align	1
 2370              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 2371              		.syntax unified
 2372              		.code	16
 2373              		.thumb_func
 2375              	HAL_CAN_TxMailbox2CompleteCallback:
 2376              	.LVL178:
 2377              	.LFB62:
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 86


 2378              		.loc 1 2139 1 is_stmt 1 view -0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              		@ link register save eliminated.
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2383              		.loc 1 2141 3 view .LVU748
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2384              		.loc 1 2147 1 is_stmt 0 view .LVU749
 2385              		@ sp needed
 2386 0000 7047     		bx	lr
 2387              		.cfi_endproc
 2388              	.LFE62:
 2390              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2391              		.align	1
 2392              		.weak	HAL_CAN_TxMailbox0AbortCallback
 2393              		.syntax unified
 2394              		.code	16
 2395              		.thumb_func
 2397              	HAL_CAN_TxMailbox0AbortCallback:
 2398              	.LVL179:
 2399              	.LFB63:
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2400              		.loc 1 2156 1 is_stmt 1 view -0
 2401              		.cfi_startproc
 2402              		@ args = 0, pretend = 0, frame = 0
 2403              		@ frame_needed = 0, uses_anonymous_args = 0
 2404              		@ link register save eliminated.
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2405              		.loc 1 2158 3 view .LVU751
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2406              		.loc 1 2164 1 is_stmt 0 view .LVU752
 2407              		@ sp needed
 2408 0000 7047     		bx	lr
 2409              		.cfi_endproc
 2410              	.LFE63:
 2412              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 87


 2413              		.align	1
 2414              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2415              		.syntax unified
 2416              		.code	16
 2417              		.thumb_func
 2419              	HAL_CAN_TxMailbox1AbortCallback:
 2420              	.LVL180:
 2421              	.LFB64:
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2422              		.loc 1 2173 1 is_stmt 1 view -0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 2426              		@ link register save eliminated.
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2427              		.loc 1 2175 3 view .LVU754
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2428              		.loc 1 2181 1 is_stmt 0 view .LVU755
 2429              		@ sp needed
 2430 0000 7047     		bx	lr
 2431              		.cfi_endproc
 2432              	.LFE64:
 2434              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2435              		.align	1
 2436              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2437              		.syntax unified
 2438              		.code	16
 2439              		.thumb_func
 2441              	HAL_CAN_TxMailbox2AbortCallback:
 2442              	.LVL181:
 2443              	.LFB65:
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2444              		.loc 1 2190 1 is_stmt 1 view -0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 88


 2447              		@ frame_needed = 0, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2449              		.loc 1 2192 3 view .LVU757
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2450              		.loc 1 2198 1 is_stmt 0 view .LVU758
 2451              		@ sp needed
 2452 0000 7047     		bx	lr
 2453              		.cfi_endproc
 2454              	.LFE65:
 2456              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2457              		.align	1
 2458              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2459              		.syntax unified
 2460              		.code	16
 2461              		.thumb_func
 2463              	HAL_CAN_RxFifo0MsgPendingCallback:
 2464              	.LVL182:
 2465              	.LFB66:
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2466              		.loc 1 2207 1 is_stmt 1 view -0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 2470              		@ link register save eliminated.
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2471              		.loc 1 2209 3 view .LVU760
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2472              		.loc 1 2215 1 is_stmt 0 view .LVU761
 2473              		@ sp needed
 2474 0000 7047     		bx	lr
 2475              		.cfi_endproc
 2476              	.LFE66:
 2478              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2479              		.align	1
 2480              		.weak	HAL_CAN_RxFifo0FullCallback
 2481              		.syntax unified
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 89


 2482              		.code	16
 2483              		.thumb_func
 2485              	HAL_CAN_RxFifo0FullCallback:
 2486              	.LVL183:
 2487              	.LFB67:
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2488              		.loc 1 2224 1 is_stmt 1 view -0
 2489              		.cfi_startproc
 2490              		@ args = 0, pretend = 0, frame = 0
 2491              		@ frame_needed = 0, uses_anonymous_args = 0
 2492              		@ link register save eliminated.
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2493              		.loc 1 2226 3 view .LVU763
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             file
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2494              		.loc 1 2232 1 is_stmt 0 view .LVU764
 2495              		@ sp needed
 2496 0000 7047     		bx	lr
 2497              		.cfi_endproc
 2498              	.LFE67:
 2500              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2501              		.align	1
 2502              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2503              		.syntax unified
 2504              		.code	16
 2505              		.thumb_func
 2507              	HAL_CAN_RxFifo1MsgPendingCallback:
 2508              	.LVL184:
 2509              	.LFB68:
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2510              		.loc 1 2241 1 is_stmt 1 view -0
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 0
 2513              		@ frame_needed = 0, uses_anonymous_args = 0
 2514              		@ link register save eliminated.
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 90


2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2515              		.loc 1 2243 3 view .LVU766
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2516              		.loc 1 2249 1 is_stmt 0 view .LVU767
 2517              		@ sp needed
 2518 0000 7047     		bx	lr
 2519              		.cfi_endproc
 2520              	.LFE68:
 2522              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2523              		.align	1
 2524              		.weak	HAL_CAN_RxFifo1FullCallback
 2525              		.syntax unified
 2526              		.code	16
 2527              		.thumb_func
 2529              	HAL_CAN_RxFifo1FullCallback:
 2530              	.LVL185:
 2531              	.LFB69:
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2532              		.loc 1 2258 1 is_stmt 1 view -0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 0
 2535              		@ frame_needed = 0, uses_anonymous_args = 0
 2536              		@ link register save eliminated.
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2537              		.loc 1 2260 3 view .LVU769
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             file
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2538              		.loc 1 2266 1 is_stmt 0 view .LVU770
 2539              		@ sp needed
 2540 0000 7047     		bx	lr
 2541              		.cfi_endproc
 2542              	.LFE69:
 2544              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2545              		.align	1
 2546              		.weak	HAL_CAN_SleepCallback
 2547              		.syntax unified
 2548              		.code	16
 2549              		.thumb_func
 2551              	HAL_CAN_SleepCallback:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 91


 2552              	.LVL186:
 2553              	.LFB70:
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Sleep callback.
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2554              		.loc 1 2275 1 is_stmt 1 view -0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 0
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
 2558              		@ link register save eliminated.
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2559              		.loc 1 2277 3 view .LVU772
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2560              		.loc 1 2282 1 is_stmt 0 view .LVU773
 2561              		@ sp needed
 2562 0000 7047     		bx	lr
 2563              		.cfi_endproc
 2564              	.LFE70:
 2566              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 2567              		.align	1
 2568              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2569              		.syntax unified
 2570              		.code	16
 2571              		.thumb_func
 2573              	HAL_CAN_WakeUpFromRxMsgCallback:
 2574              	.LVL187:
 2575              	.LFB71:
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2576              		.loc 1 2291 1 is_stmt 1 view -0
 2577              		.cfi_startproc
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 0, uses_anonymous_args = 0
 2580              		@ link register save eliminated.
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2581              		.loc 1 2293 3 view .LVU775
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 92


2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             user file
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2582              		.loc 1 2299 1 is_stmt 0 view .LVU776
 2583              		@ sp needed
 2584 0000 7047     		bx	lr
 2585              		.cfi_endproc
 2586              	.LFE71:
 2588              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2589              		.align	1
 2590              		.weak	HAL_CAN_ErrorCallback
 2591              		.syntax unified
 2592              		.code	16
 2593              		.thumb_func
 2595              	HAL_CAN_ErrorCallback:
 2596              	.LVL188:
 2597              	.LFB72:
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Error CAN callback.
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2598              		.loc 1 2308 1 is_stmt 1 view -0
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 0
 2601              		@ frame_needed = 0, uses_anonymous_args = 0
 2602              		@ link register save eliminated.
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 2603              		.loc 1 2310 3 view .LVU778
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2604              		.loc 1 2315 1 is_stmt 0 view .LVU779
 2605              		@ sp needed
 2606 0000 7047     		bx	lr
 2607              		.cfi_endproc
 2608              	.LFE72:
 2610              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2611              		.align	1
 2612              		.global	HAL_CAN_IRQHandler
 2613              		.syntax unified
 2614              		.code	16
 2615              		.thumb_func
 2617              	HAL_CAN_IRQHandler:
 2618              	.LVL189:
 2619              	.LFB59:
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2620              		.loc 1 1694 1 is_stmt 1 view -0
 2621              		.cfi_startproc
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 93


 2622              		@ args = 0, pretend = 0, frame = 0
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2624              		.loc 1 1694 1 is_stmt 0 view .LVU781
 2625 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2626              		.cfi_def_cfa_offset 24
 2627              		.cfi_offset 3, -24
 2628              		.cfi_offset 4, -20
 2629              		.cfi_offset 5, -16
 2630              		.cfi_offset 6, -12
 2631              		.cfi_offset 7, -8
 2632              		.cfi_offset 14, -4
 2633 0002 DE46     		mov	lr, fp
 2634 0004 5746     		mov	r7, r10
 2635 0006 4E46     		mov	r6, r9
 2636 0008 4546     		mov	r5, r8
 2637 000a E0B5     		push	{r5, r6, r7, lr}
 2638              		.cfi_def_cfa_offset 40
 2639              		.cfi_offset 8, -40
 2640              		.cfi_offset 9, -36
 2641              		.cfi_offset 10, -32
 2642              		.cfi_offset 11, -28
 2643 000c 0500     		movs	r5, r0
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2644              		.loc 1 1695 3 is_stmt 1 view .LVU782
 2645              	.LVL190:
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2646              		.loc 1 1696 3 view .LVU783
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2647              		.loc 1 1696 25 is_stmt 0 view .LVU784
 2648 000e 0368     		ldr	r3, [r0]
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2649              		.loc 1 1696 12 view .LVU785
 2650 0010 5C69     		ldr	r4, [r3, #20]
 2651              	.LVL191:
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2652              		.loc 1 1697 3 is_stmt 1 view .LVU786
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2653              		.loc 1 1697 12 is_stmt 0 view .LVU787
 2654 0012 5A68     		ldr	r2, [r3, #4]
 2655 0014 9046     		mov	r8, r2
 2656              	.LVL192:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2657              		.loc 1 1698 3 is_stmt 1 view .LVU788
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2658              		.loc 1 1698 12 is_stmt 0 view .LVU789
 2659 0016 9F68     		ldr	r7, [r3, #8]
 2660              	.LVL193:
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2661              		.loc 1 1699 3 is_stmt 1 view .LVU790
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2662              		.loc 1 1699 12 is_stmt 0 view .LVU791
 2663 0018 DA68     		ldr	r2, [r3, #12]
 2664              	.LVL194:
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2665              		.loc 1 1699 12 view .LVU792
 2666 001a 9246     		mov	r10, r2
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 94


 2667              	.LVL195:
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2668              		.loc 1 1700 3 is_stmt 1 view .LVU793
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2669              		.loc 1 1700 12 is_stmt 0 view .LVU794
 2670 001c 1A69     		ldr	r2, [r3, #16]
 2671              	.LVL196:
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2672              		.loc 1 1700 12 view .LVU795
 2673 001e 9146     		mov	r9, r2
 2674              	.LVL197:
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2675              		.loc 1 1701 3 is_stmt 1 view .LVU796
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2676              		.loc 1 1701 12 is_stmt 0 view .LVU797
 2677 0020 9A69     		ldr	r2, [r3, #24]
 2678              	.LVL198:
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2679              		.loc 1 1701 12 view .LVU798
 2680 0022 9346     		mov	fp, r2
 2681              	.LVL199:
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2682              		.loc 1 1704 3 is_stmt 1 view .LVU799
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2683              		.loc 1 1704 19 is_stmt 0 view .LVU800
 2684 0024 0122     		movs	r2, #1
 2685              	.LVL200:
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2686              		.loc 1 1704 19 view .LVU801
 2687 0026 1600     		movs	r6, r2
 2688 0028 2640     		ands	r6, r4
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2689              		.loc 1 1704 6 view .LVU802
 2690 002a 2242     		tst	r2, r4
 2691 002c 33D0     		beq	.L161
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2692              		.loc 1 1707 5 is_stmt 1 view .LVU803
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2693              		.loc 1 1707 19 is_stmt 0 view .LVU804
 2694 002e 1600     		movs	r6, r2
 2695 0030 3E40     		ands	r6, r7
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2696              		.loc 1 1707 8 view .LVU805
 2697 0032 3A42     		tst	r2, r7
 2698 0034 15D0     		beq	.L162
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2699              		.loc 1 1710 7 is_stmt 1 view .LVU806
 2700 0036 9A60     		str	r2, [r3, #8]
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2701              		.loc 1 1712 7 view .LVU807
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2702              		.loc 1 1712 10 is_stmt 0 view .LVU808
 2703 0038 BB07     		lsls	r3, r7, #30
 2704 003a 09D4     		bmi	.L222
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2705              		.loc 1 1725 9 is_stmt 1 view .LVU809
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 95


 2706              		.loc 1 1725 12 is_stmt 0 view .LVU810
 2707 003c 7B07     		lsls	r3, r7, #29
 2708 003e 0ED4     		bmi	.L193
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2709              		.loc 1 1730 14 is_stmt 1 view .LVU811
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2710              		.loc 1 1730 28 is_stmt 0 view .LVU812
 2711 0040 0823     		movs	r3, #8
 2712 0042 1E00     		movs	r6, r3
 2713 0044 3E40     		ands	r6, r7
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2714              		.loc 1 1730 17 view .LVU813
 2715 0046 3B42     		tst	r3, r7
 2716 0048 06D0     		beq	.L223
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2717              		.loc 1 1733 21 view .LVU814
 2718 004a 8026     		movs	r6, #128
 2719 004c 7601     		lsls	r6, r6, #5
 2720 004e 08E0     		b	.L162
 2721              	.L222:
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2722              		.loc 1 1720 9 is_stmt 1 view .LVU815
 2723 0050 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2724              	.LVL201:
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2725              		.loc 1 1695 12 is_stmt 0 view .LVU816
 2726 0054 0026     		movs	r6, #0
 2727 0056 04E0     		b	.L162
 2728              	.LVL202:
 2729              	.L223:
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2730              		.loc 1 1743 11 is_stmt 1 view .LVU817
 2731 0058 FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2732              	.LVL203:
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2733              		.loc 1 1743 11 is_stmt 0 view .LVU818
 2734 005c 01E0     		b	.L162
 2735              	.LVL204:
 2736              	.L193:
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2737              		.loc 1 1728 21 view .LVU819
 2738 005e 8026     		movs	r6, #128
 2739 0060 3601     		lsls	r6, r6, #4
 2740              	.LVL205:
 2741              	.L162:
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2742              		.loc 1 1750 5 is_stmt 1 view .LVU820
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2743              		.loc 1 1750 8 is_stmt 0 view .LVU821
 2744 0062 FB05     		lsls	r3, r7, #23
 2745 0064 0AD5     		bpl	.L164
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2746              		.loc 1 1753 7 is_stmt 1 view .LVU822
 2747 0066 2B68     		ldr	r3, [r5]
 2748 0068 8022     		movs	r2, #128
 2749 006a 5200     		lsls	r2, r2, #1
 2750 006c 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 96


1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2751              		.loc 1 1755 7 view .LVU823
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2752              		.loc 1 1755 10 is_stmt 0 view .LVU824
 2753 006e BB05     		lsls	r3, r7, #22
 2754 0070 73D4     		bmi	.L224
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2755              		.loc 1 1768 9 is_stmt 1 view .LVU825
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2756              		.loc 1 1768 12 is_stmt 0 view .LVU826
 2757 0072 7B05     		lsls	r3, r7, #21
 2758 0074 75D5     		bpl	.L166
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2759              		.loc 1 1771 11 is_stmt 1 view .LVU827
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2760              		.loc 1 1771 21 is_stmt 0 view .LVU828
 2761 0076 8023     		movs	r3, #128
 2762 0078 9B01     		lsls	r3, r3, #6
 2763 007a 1E43     		orrs	r6, r3
 2764              	.LVL206:
 2765              	.L164:
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2766              		.loc 1 1793 5 is_stmt 1 view .LVU829
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2767              		.loc 1 1793 8 is_stmt 0 view .LVU830
 2768 007c FB03     		lsls	r3, r7, #15
 2769 007e 0AD5     		bpl	.L161
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2770              		.loc 1 1796 7 is_stmt 1 view .LVU831
 2771 0080 2B68     		ldr	r3, [r5]
 2772 0082 8022     		movs	r2, #128
 2773 0084 5202     		lsls	r2, r2, #9
 2774 0086 9A60     		str	r2, [r3, #8]
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2775              		.loc 1 1798 7 view .LVU832
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2776              		.loc 1 1798 10 is_stmt 0 view .LVU833
 2777 0088 BB03     		lsls	r3, r7, #14
 2778 008a 74D4     		bmi	.L225
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2779              		.loc 1 1811 9 is_stmt 1 view .LVU834
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2780              		.loc 1 1811 12 is_stmt 0 view .LVU835
 2781 008c 7B03     		lsls	r3, r7, #13
 2782 008e 76D5     		bpl	.L169
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2783              		.loc 1 1814 11 is_stmt 1 view .LVU836
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2784              		.loc 1 1814 21 is_stmt 0 view .LVU837
 2785 0090 8023     		movs	r3, #128
 2786 0092 1B02     		lsls	r3, r3, #8
 2787 0094 1E43     		orrs	r6, r3
 2788              	.LVL207:
 2789              	.L161:
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2790              		.loc 1 1837 3 is_stmt 1 view .LVU838
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 97


 2791              		.loc 1 1837 6 is_stmt 0 view .LVU839
 2792 0096 2307     		lsls	r3, r4, #28
 2793 0098 08D5     		bpl	.L171
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2794              		.loc 1 1839 5 is_stmt 1 view .LVU840
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2795              		.loc 1 1839 8 is_stmt 0 view .LVU841
 2796 009a 5346     		mov	r3, r10
 2797 009c DB06     		lsls	r3, r3, #27
 2798 009e 05D5     		bpl	.L171
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2799              		.loc 1 1842 7 is_stmt 1 view .LVU842
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2800              		.loc 1 1842 17 is_stmt 0 view .LVU843
 2801 00a0 8023     		movs	r3, #128
 2802 00a2 9B00     		lsls	r3, r3, #2
 2803 00a4 1E43     		orrs	r6, r3
 2804              	.LVL208:
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2805              		.loc 1 1845 7 is_stmt 1 view .LVU844
 2806 00a6 2B68     		ldr	r3, [r5]
 2807 00a8 1022     		movs	r2, #16
 2808 00aa DA60     		str	r2, [r3, #12]
 2809              	.L171:
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2810              		.loc 1 1850 3 view .LVU845
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2811              		.loc 1 1850 6 is_stmt 0 view .LVU846
 2812 00ac 6307     		lsls	r3, r4, #29
 2813 00ae 02D5     		bpl	.L172
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2814              		.loc 1 1852 5 is_stmt 1 view .LVU847
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2815              		.loc 1 1852 8 is_stmt 0 view .LVU848
 2816 00b0 5346     		mov	r3, r10
 2817 00b2 1B07     		lsls	r3, r3, #28
 2818 00b4 6DD4     		bmi	.L226
 2819              	.L172:
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2820              		.loc 1 1869 3 is_stmt 1 view .LVU849
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2821              		.loc 1 1869 6 is_stmt 0 view .LVU850
 2822 00b6 A307     		lsls	r3, r4, #30
 2823 00b8 03D5     		bpl	.L173
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2824              		.loc 1 1872 5 is_stmt 1 view .LVU851
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2825              		.loc 1 1872 14 is_stmt 0 view .LVU852
 2826 00ba 2B68     		ldr	r3, [r5]
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2827              		.loc 1 1872 24 view .LVU853
 2828 00bc DB68     		ldr	r3, [r3, #12]
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2829              		.loc 1 1872 8 view .LVU854
 2830 00be 9B07     		lsls	r3, r3, #30
 2831 00c0 6ED1     		bne	.L227
 2832              	.L173:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 98


1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2833              		.loc 1 1886 3 is_stmt 1 view .LVU855
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2834              		.loc 1 1886 6 is_stmt 0 view .LVU856
 2835 00c2 6306     		lsls	r3, r4, #25
 2836 00c4 08D5     		bpl	.L174
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2837              		.loc 1 1888 5 is_stmt 1 view .LVU857
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2838              		.loc 1 1888 8 is_stmt 0 view .LVU858
 2839 00c6 4B46     		mov	r3, r9
 2840 00c8 DB06     		lsls	r3, r3, #27
 2841 00ca 05D5     		bpl	.L174
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2842              		.loc 1 1891 7 is_stmt 1 view .LVU859
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2843              		.loc 1 1891 17 is_stmt 0 view .LVU860
 2844 00cc 8023     		movs	r3, #128
 2845 00ce DB00     		lsls	r3, r3, #3
 2846 00d0 1E43     		orrs	r6, r3
 2847              	.LVL209:
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2848              		.loc 1 1894 7 is_stmt 1 view .LVU861
 2849 00d2 2B68     		ldr	r3, [r5]
 2850 00d4 1022     		movs	r2, #16
 2851 00d6 1A61     		str	r2, [r3, #16]
 2852              	.L174:
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2853              		.loc 1 1899 3 view .LVU862
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2854              		.loc 1 1899 6 is_stmt 0 view .LVU863
 2855 00d8 A306     		lsls	r3, r4, #26
 2856 00da 02D5     		bpl	.L175
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2857              		.loc 1 1901 5 is_stmt 1 view .LVU864
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2858              		.loc 1 1901 8 is_stmt 0 view .LVU865
 2859 00dc 4B46     		mov	r3, r9
 2860 00de 1B07     		lsls	r3, r3, #28
 2861 00e0 62D4     		bmi	.L228
 2862              	.L175:
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2863              		.loc 1 1918 3 is_stmt 1 view .LVU866
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2864              		.loc 1 1918 6 is_stmt 0 view .LVU867
 2865 00e2 E306     		lsls	r3, r4, #27
 2866 00e4 03D5     		bpl	.L176
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2867              		.loc 1 1921 5 is_stmt 1 view .LVU868
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2868              		.loc 1 1921 14 is_stmt 0 view .LVU869
 2869 00e6 2B68     		ldr	r3, [r5]
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2870              		.loc 1 1921 24 view .LVU870
 2871 00e8 1B69     		ldr	r3, [r3, #16]
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2872              		.loc 1 1921 8 view .LVU871
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 99


 2873 00ea 9B07     		lsls	r3, r3, #30
 2874 00ec 63D1     		bne	.L229
 2875              	.L176:
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2876              		.loc 1 1935 3 is_stmt 1 view .LVU872
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2877              		.loc 1 1935 6 is_stmt 0 view .LVU873
 2878 00ee A303     		lsls	r3, r4, #14
 2879 00f0 02D5     		bpl	.L177
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2880              		.loc 1 1937 5 is_stmt 1 view .LVU874
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2881              		.loc 1 1937 8 is_stmt 0 view .LVU875
 2882 00f2 4346     		mov	r3, r8
 2883 00f4 DB06     		lsls	r3, r3, #27
 2884 00f6 62D4     		bmi	.L230
 2885              	.L177:
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2886              		.loc 1 1954 3 is_stmt 1 view .LVU876
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2887              		.loc 1 1954 6 is_stmt 0 view .LVU877
 2888 00f8 E303     		lsls	r3, r4, #15
 2889 00fa 02D5     		bpl	.L178
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2890              		.loc 1 1956 5 is_stmt 1 view .LVU878
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2891              		.loc 1 1956 8 is_stmt 0 view .LVU879
 2892 00fc 4346     		mov	r3, r8
 2893 00fe 1B07     		lsls	r3, r3, #28
 2894 0100 64D4     		bmi	.L231
 2895              	.L178:
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2896              		.loc 1 1973 3 is_stmt 1 view .LVU880
1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2897              		.loc 1 1973 6 is_stmt 0 view .LVU881
 2898 0102 2304     		lsls	r3, r4, #16
 2899 0104 75D5     		bpl	.L179
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2900              		.loc 1 1975 5 is_stmt 1 view .LVU882
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2901              		.loc 1 1975 8 is_stmt 0 view .LVU883
 2902 0106 4346     		mov	r3, r8
 2903 0108 5B07     		lsls	r3, r3, #29
 2904 010a 6FD5     		bpl	.L180
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2905              		.loc 1 1978 7 is_stmt 1 view .LVU884
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2906              		.loc 1 1978 10 is_stmt 0 view .LVU885
 2907 010c E305     		lsls	r3, r4, #23
 2908 010e 04D5     		bpl	.L181
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2909              		.loc 1 1978 55 discriminator 1 view .LVU886
 2910 0110 5B46     		mov	r3, fp
 2911 0112 DB07     		lsls	r3, r3, #31
 2912 0114 01D5     		bpl	.L181
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2913              		.loc 1 1982 9 is_stmt 1 view .LVU887
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 100


1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2914              		.loc 1 1982 19 is_stmt 0 view .LVU888
 2915 0116 0123     		movs	r3, #1
 2916 0118 1E43     		orrs	r6, r3
 2917              	.LVL210:
 2918              	.L181:
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2919              		.loc 1 1988 7 is_stmt 1 view .LVU889
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2920              		.loc 1 1988 10 is_stmt 0 view .LVU890
 2921 011a A305     		lsls	r3, r4, #22
 2922 011c 04D5     		bpl	.L182
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2923              		.loc 1 1988 55 discriminator 1 view .LVU891
 2924 011e 5B46     		mov	r3, fp
 2925 0120 9B07     		lsls	r3, r3, #30
 2926 0122 01D5     		bpl	.L182
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2927              		.loc 1 1992 9 is_stmt 1 view .LVU892
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2928              		.loc 1 1992 19 is_stmt 0 view .LVU893
 2929 0124 0223     		movs	r3, #2
 2930 0126 1E43     		orrs	r6, r3
 2931              	.LVL211:
 2932              	.L182:
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2933              		.loc 1 1998 7 is_stmt 1 view .LVU894
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2934              		.loc 1 1998 10 is_stmt 0 view .LVU895
 2935 0128 6305     		lsls	r3, r4, #21
 2936 012a 04D5     		bpl	.L183
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2937              		.loc 1 1998 48 discriminator 1 view .LVU896
 2938 012c 5B46     		mov	r3, fp
 2939 012e 5B07     		lsls	r3, r3, #29
 2940 0130 01D5     		bpl	.L183
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2941              		.loc 1 2002 9 is_stmt 1 view .LVU897
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2942              		.loc 1 2002 19 is_stmt 0 view .LVU898
 2943 0132 0423     		movs	r3, #4
 2944 0134 1E43     		orrs	r6, r3
 2945              	.LVL212:
 2946              	.L183:
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2947              		.loc 1 2008 7 is_stmt 1 view .LVU899
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2948              		.loc 1 2008 10 is_stmt 0 view .LVU900
 2949 0136 2405     		lsls	r4, r4, #20
 2950 0138 58D5     		bpl	.L180
 2951              	.LVL213:
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2952              		.loc 1 2009 22 discriminator 1 view .LVU901
 2953 013a 7022     		movs	r2, #112
 2954 013c 5B46     		mov	r3, fp
 2955 013e 1340     		ands	r3, r2
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 101


 2956              		.loc 1 2008 57 discriminator 1 view .LVU902
 2957 0140 5946     		mov	r1, fp
 2958 0142 0A42     		tst	r2, r1
 2959 0144 52D0     		beq	.L180
 2960              	.LVL214:
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2961              		.loc 1 2011 9 is_stmt 1 view .LVU903
 2962 0146 402B     		cmp	r3, #64
 2963 0148 66D0     		beq	.L184
 2964 014a 5AD8     		bhi	.L185
 2965 014c 202B     		cmp	r3, #32
 2966 014e 60D0     		beq	.L186
 2967 0150 302B     		cmp	r3, #48
 2968 0152 42D1     		bne	.L232
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 2969              		.loc 1 2023 13 view .LVU904
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 2970              		.loc 1 2023 23 is_stmt 0 view .LVU905
 2971 0154 2023     		movs	r3, #32
 2972 0156 1E43     		orrs	r6, r3
 2973              	.LVL215:
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2974              		.loc 1 2024 13 is_stmt 1 view .LVU906
 2975 0158 43E0     		b	.L189
 2976              	.LVL216:
 2977              	.L224:
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2978              		.loc 1 1763 9 view .LVU907
 2979 015a 2800     		movs	r0, r5
 2980 015c FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2981              	.LVL217:
 2982 0160 8CE7     		b	.L164
 2983              	.L166:
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2984              		.loc 1 1773 14 view .LVU908
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 2985              		.loc 1 1773 17 is_stmt 0 view .LVU909
 2986 0162 3B05     		lsls	r3, r7, #20
 2987 0164 03D5     		bpl	.L167
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2988              		.loc 1 1776 11 is_stmt 1 view .LVU910
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2989              		.loc 1 1776 21 is_stmt 0 view .LVU911
 2990 0166 8023     		movs	r3, #128
 2991 0168 DB01     		lsls	r3, r3, #7
 2992 016a 1E43     		orrs	r6, r3
 2993              	.LVL218:
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 2994              		.loc 1 1776 21 view .LVU912
 2995 016c 86E7     		b	.L164
 2996              	.L167:
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2997              		.loc 1 1786 11 is_stmt 1 view .LVU913
 2998 016e 2800     		movs	r0, r5
 2999 0170 FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 3000              	.LVL219:
 3001 0174 82E7     		b	.L164
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 102


 3002              	.L225:
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3003              		.loc 1 1806 9 view .LVU914
 3004 0176 2800     		movs	r0, r5
 3005 0178 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 3006              	.LVL220:
 3007 017c 8BE7     		b	.L161
 3008              	.L169:
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 3009              		.loc 1 1816 14 view .LVU915
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 3010              		.loc 1 1816 17 is_stmt 0 view .LVU916
 3011 017e 3F03     		lsls	r7, r7, #12
 3012 0180 03D5     		bpl	.L170
 3013              	.LVL221:
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 3014              		.loc 1 1819 11 is_stmt 1 view .LVU917
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 3015              		.loc 1 1819 21 is_stmt 0 view .LVU918
 3016 0182 8023     		movs	r3, #128
 3017 0184 5B02     		lsls	r3, r3, #9
 3018 0186 1E43     		orrs	r6, r3
 3019              	.LVL222:
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 3020              		.loc 1 1819 21 view .LVU919
 3021 0188 85E7     		b	.L161
 3022              	.L170:
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3023              		.loc 1 1829 11 is_stmt 1 view .LVU920
 3024 018a 2800     		movs	r0, r5
 3025 018c FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 3026              	.LVL223:
 3027 0190 81E7     		b	.L161
 3028              	.L226:
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3029              		.loc 1 1855 7 view .LVU921
 3030 0192 2B68     		ldr	r3, [r5]
 3031 0194 0822     		movs	r2, #8
 3032 0196 DA60     		str	r2, [r3, #12]
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3033              		.loc 1 1863 7 view .LVU922
 3034 0198 2800     		movs	r0, r5
 3035 019a FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 3036              	.LVL224:
 3037 019e 8AE7     		b	.L172
 3038              	.L227:
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3039              		.loc 1 1880 7 view .LVU923
 3040 01a0 2800     		movs	r0, r5
 3041 01a2 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 3042              	.LVL225:
 3043 01a6 8CE7     		b	.L173
 3044              	.L228:
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3045              		.loc 1 1904 7 view .LVU924
 3046 01a8 2B68     		ldr	r3, [r5]
 3047 01aa 0822     		movs	r2, #8
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 103


 3048 01ac 1A61     		str	r2, [r3, #16]
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3049              		.loc 1 1912 7 view .LVU925
 3050 01ae 2800     		movs	r0, r5
 3051 01b0 FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 3052              	.LVL226:
 3053 01b4 95E7     		b	.L175
 3054              	.L229:
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3055              		.loc 1 1929 7 view .LVU926
 3056 01b6 2800     		movs	r0, r5
 3057 01b8 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 3058              	.LVL227:
 3059 01bc 97E7     		b	.L176
 3060              	.L230:
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3061              		.loc 1 1940 7 view .LVU927
 3062 01be 2B68     		ldr	r3, [r5]
 3063 01c0 1022     		movs	r2, #16
 3064 01c2 5A60     		str	r2, [r3, #4]
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3065              		.loc 1 1948 7 view .LVU928
 3066 01c4 2800     		movs	r0, r5
 3067 01c6 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 3068              	.LVL228:
 3069 01ca 95E7     		b	.L177
 3070              	.L231:
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3071              		.loc 1 1959 7 view .LVU929
 3072 01cc 2B68     		ldr	r3, [r5]
 3073 01ce 0822     		movs	r2, #8
 3074 01d0 5A60     		str	r2, [r3, #4]
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3075              		.loc 1 1967 7 view .LVU930
 3076 01d2 2800     		movs	r0, r5
 3077 01d4 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 3078              	.LVL229:
 3079 01d8 93E7     		b	.L178
 3080              	.LVL230:
 3081              	.L232:
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 3082              		.loc 1 2011 9 is_stmt 0 view .LVU931
 3083 01da 102B     		cmp	r3, #16
 3084 01dc 01D1     		bne	.L189
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3085              		.loc 1 2015 13 is_stmt 1 view .LVU932
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3086              		.loc 1 2015 23 is_stmt 0 view .LVU933
 3087 01de 0823     		movs	r3, #8
 3088 01e0 1E43     		orrs	r6, r3
 3089              	.LVL231:
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 3090              		.loc 1 2016 13 is_stmt 1 view .LVU934
 3091              	.L189:
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 3092              		.loc 1 2042 9 view .LVU935
 3093 01e2 2A68     		ldr	r2, [r5]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 104


 3094 01e4 9369     		ldr	r3, [r2, #24]
 3095 01e6 7021     		movs	r1, #112
 3096              	.LVL232:
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 3097              		.loc 1 2042 9 is_stmt 0 view .LVU936
 3098 01e8 8B43     		bics	r3, r1
 3099 01ea 9361     		str	r3, [r2, #24]
 3100              	.L180:
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 3101              		.loc 1 2047 5 is_stmt 1 view .LVU937
 3102 01ec 2B68     		ldr	r3, [r5]
 3103 01ee 0422     		movs	r2, #4
 3104 01f0 5A60     		str	r2, [r3, #4]
 3105              	.L179:
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 3106              		.loc 1 2051 3 view .LVU938
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 3107              		.loc 1 2051 6 is_stmt 0 view .LVU939
 3108 01f2 002E     		cmp	r6, #0
 3109 01f4 16D1     		bne	.L233
 3110              	.L160:
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3111              		.loc 1 2065 1 view .LVU940
 3112              		@ sp needed
 3113              	.LVL233:
 3114              	.LVL234:
 3115              	.LVL235:
 3116              	.LVL236:
 3117              	.LVL237:
 3118              	.LVL238:
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3119              		.loc 1 2065 1 view .LVU941
 3120 01f6 F0BC     		pop	{r4, r5, r6, r7}
 3121 01f8 BB46     		mov	fp, r7
 3122 01fa B246     		mov	r10, r6
 3123 01fc A946     		mov	r9, r5
 3124 01fe A046     		mov	r8, r4
 3125 0200 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3126              	.LVL239:
 3127              	.L185:
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 3128              		.loc 1 2011 9 view .LVU942
 3129 0202 502B     		cmp	r3, #80
 3130 0204 0BD0     		beq	.L190
 3131 0206 602B     		cmp	r3, #96
 3132 0208 EBD1     		bne	.L189
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3133              		.loc 1 2035 13 is_stmt 1 view .LVU943
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3134              		.loc 1 2035 23 is_stmt 0 view .LVU944
 3135 020a 8023     		movs	r3, #128
 3136 020c 5B00     		lsls	r3, r3, #1
 3137 020e 1E43     		orrs	r6, r3
 3138              	.LVL240:
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           default:
 3139              		.loc 1 2036 13 is_stmt 1 view .LVU945
 3140 0210 E7E7     		b	.L189
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 105


 3141              	.L186:
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3142              		.loc 1 2019 13 view .LVU946
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3143              		.loc 1 2019 23 is_stmt 0 view .LVU947
 3144 0212 1023     		movs	r3, #16
 3145 0214 1E43     		orrs	r6, r3
 3146              	.LVL241:
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 3147              		.loc 1 2020 13 is_stmt 1 view .LVU948
 3148 0216 E4E7     		b	.L189
 3149              	.L184:
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3150              		.loc 1 2027 13 view .LVU949
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3151              		.loc 1 2027 23 is_stmt 0 view .LVU950
 3152 0218 4023     		movs	r3, #64
 3153 021a 1E43     		orrs	r6, r3
 3154              	.LVL242:
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 3155              		.loc 1 2028 13 is_stmt 1 view .LVU951
 3156 021c E1E7     		b	.L189
 3157              	.L190:
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3158              		.loc 1 2031 13 view .LVU952
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             break;
 3159              		.loc 1 2031 23 is_stmt 0 view .LVU953
 3160 021e 8023     		movs	r3, #128
 3161 0220 1E43     		orrs	r6, r3
 3162              	.LVL243:
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 3163              		.loc 1 2032 13 is_stmt 1 view .LVU954
 3164 0222 DEE7     		b	.L189
 3165              	.LVL244:
 3166              	.L233:
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3167              		.loc 1 2054 5 view .LVU955
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3168              		.loc 1 2054 9 is_stmt 0 view .LVU956
 3169 0224 6B6A     		ldr	r3, [r5, #36]
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3170              		.loc 1 2054 21 view .LVU957
 3171 0226 3343     		orrs	r3, r6
 3172 0228 6B62     		str	r3, [r5, #36]
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 3173              		.loc 1 2062 5 is_stmt 1 view .LVU958
 3174 022a 2800     		movs	r0, r5
 3175 022c FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 3176              	.LVL245:
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3177              		.loc 1 2065 1 is_stmt 0 view .LVU959
 3178 0230 E1E7     		b	.L160
 3179              		.cfi_endproc
 3180              	.LFE59:
 3182              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 3183              		.align	1
 3184              		.global	HAL_CAN_GetState
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 106


 3185              		.syntax unified
 3186              		.code	16
 3187              		.thumb_func
 3189              	HAL_CAN_GetState:
 3190              	.LVL246:
 3191              	.LFB73:
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief   CAN Peripheral State functions
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     This subsection provides functions allowing to :
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Return the CAN state.
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL state
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 3192              		.loc 1 2345 1 is_stmt 1 view -0
 3193              		.cfi_startproc
 3194              		@ args = 0, pretend = 0, frame = 0
 3195              		@ frame_needed = 0, uses_anonymous_args = 0
 3196              		@ link register save eliminated.
 3197              		.loc 1 2345 1 is_stmt 0 view .LVU961
 3198 0000 0200     		movs	r2, r0
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3199              		.loc 1 2346 3 is_stmt 1 view .LVU962
 3200              		.loc 1 2346 24 is_stmt 0 view .LVU963
 3201 0002 2023     		movs	r3, #32
 3202 0004 C35C     		ldrb	r3, [r0, r3]
 3203 0006 D8B2     		uxtb	r0, r3
 3204              	.LVL247:
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3205              		.loc 1 2348 3 is_stmt 1 view .LVU964
 3206              		.loc 1 2348 38 is_stmt 0 view .LVU965
 3207 0008 013B     		subs	r3, r3, #1
 3208 000a DBB2     		uxtb	r3, r3
 3209              		.loc 1 2348 6 view .LVU966
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 107


 3210 000c 012B     		cmp	r3, #1
 3211 000e 00D9     		bls	.L239
 3212              	.LVL248:
 3213              	.L235:
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Sleep mode is active */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check sleep mode request flag */
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Sleep mode request is pending */
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 3214              		.loc 1 2366 5 is_stmt 1 view .LVU967
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return CAN state */
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return state;
 3215              		.loc 1 2370 3 view .LVU968
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 3216              		.loc 1 2371 1 is_stmt 0 view .LVU969
 3217              		@ sp needed
 3218 0010 7047     		bx	lr
 3219              	.LVL249:
 3220              	.L239:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3221              		.loc 1 2352 5 is_stmt 1 view .LVU970
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3222              		.loc 1 2352 14 is_stmt 0 view .LVU971
 3223 0012 1268     		ldr	r2, [r2]
 3224              	.LVL250:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3225              		.loc 1 2352 24 view .LVU972
 3226 0014 5368     		ldr	r3, [r2, #4]
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3227              		.loc 1 2352 8 view .LVU973
 3228 0016 9B07     		lsls	r3, r3, #30
 3229 0018 04D4     		bmi	.L236
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3230              		.loc 1 2358 10 is_stmt 1 view .LVU974
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3231              		.loc 1 2358 29 is_stmt 0 view .LVU975
 3232 001a 1368     		ldr	r3, [r2]
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3233              		.loc 1 2358 13 view .LVU976
 3234 001c 9B07     		lsls	r3, r3, #30
 3235 001e F7D5     		bpl	.L235
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 108


 3236              		.loc 1 2361 13 view .LVU977
 3237 0020 0320     		movs	r0, #3
 3238              	.LVL251:
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 3239              		.loc 1 2361 13 view .LVU978
 3240 0022 F5E7     		b	.L235
 3241              	.LVL252:
 3242              	.L236:
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 3243              		.loc 1 2355 13 view .LVU979
 3244 0024 0420     		movs	r0, #4
 3245              	.LVL253:
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 3246              		.loc 1 2355 13 view .LVU980
 3247 0026 F3E7     		b	.L235
 3248              		.cfi_endproc
 3249              	.LFE73:
 3251              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 3252              		.align	1
 3253              		.global	HAL_CAN_GetError
 3254              		.syntax unified
 3255              		.code	16
 3256              		.thumb_func
 3258              	HAL_CAN_GetError:
 3259              	.LVL254:
 3260              	.LFB74:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Return the CAN error code.
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval CAN Error Code
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 3261              		.loc 1 2380 1 is_stmt 1 view -0
 3262              		.cfi_startproc
 3263              		@ args = 0, pretend = 0, frame = 0
 3264              		@ frame_needed = 0, uses_anonymous_args = 0
 3265              		@ link register save eliminated.
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return CAN error code */
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return hcan->ErrorCode;
 3266              		.loc 1 2382 3 view .LVU982
 3267              		.loc 1 2382 14 is_stmt 0 view .LVU983
 3268 0000 406A     		ldr	r0, [r0, #36]
 3269              	.LVL255:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 3270              		.loc 1 2383 1 view .LVU984
 3271              		@ sp needed
 3272 0002 7047     		bx	lr
 3273              		.cfi_endproc
 3274              	.LFE74:
 3276              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 3277              		.align	1
 3278              		.global	HAL_CAN_ResetError
 3279              		.syntax unified
 3280              		.code	16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 109


 3281              		.thumb_func
 3283              	HAL_CAN_ResetError:
 3284              	.LVL256:
 3285              	.LFB75:
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Reset the CAN error code.
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 3286              		.loc 1 2392 1 is_stmt 1 view -0
 3287              		.cfi_startproc
 3288              		@ args = 0, pretend = 0, frame = 0
 3289              		@ frame_needed = 0, uses_anonymous_args = 0
 3290              		@ link register save eliminated.
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 3291              		.loc 1 2393 3 view .LVU986
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3292              		.loc 1 2394 3 view .LVU987
 3293              		.loc 1 2394 24 is_stmt 0 view .LVU988
 3294 0000 2023     		movs	r3, #32
 3295 0002 C35C     		ldrb	r3, [r0, r3]
 3296              	.LVL257:
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3297              		.loc 1 2396 3 is_stmt 1 view .LVU989
 3298              		.loc 1 2396 38 is_stmt 0 view .LVU990
 3299 0004 013B     		subs	r3, r3, #1
 3300              	.LVL258:
 3301              		.loc 1 2396 38 view .LVU991
 3302 0006 DBB2     		uxtb	r3, r3
 3303              		.loc 1 2396 6 view .LVU992
 3304 0008 012B     		cmp	r3, #1
 3305 000a 06D9     		bls	.L244
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Reset CAN error code */
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode = 0U;
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Update error code */
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 3306              		.loc 1 2405 5 is_stmt 1 view .LVU993
 3307              		.loc 1 2405 9 is_stmt 0 view .LVU994
 3308 000c 426A     		ldr	r2, [r0, #36]
 3309              		.loc 1 2405 21 view .LVU995
 3310 000e 8023     		movs	r3, #128
 3311 0010 DB02     		lsls	r3, r3, #11
 3312 0012 1343     		orrs	r3, r2
 3313 0014 4362     		str	r3, [r0, #36]
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     status = HAL_ERROR;
 3314              		.loc 1 2407 5 is_stmt 1 view .LVU996
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 110


 3315              	.LVL259:
 3316              		.loc 1 2407 12 is_stmt 0 view .LVU997
 3317 0016 0120     		movs	r0, #1
 3318              	.LVL260:
 3319              	.L243:
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return the status */
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return status;
 3320              		.loc 1 2411 3 is_stmt 1 view .LVU998
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 3321              		.loc 1 2412 1 is_stmt 0 view .LVU999
 3322              		@ sp needed
 3323 0018 7047     		bx	lr
 3324              	.LVL261:
 3325              	.L244:
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 3326              		.loc 1 2400 5 is_stmt 1 view .LVU1000
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 3327              		.loc 1 2400 21 is_stmt 0 view .LVU1001
 3328 001a 0023     		movs	r3, #0
 3329 001c 4362     		str	r3, [r0, #36]
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3330              		.loc 1 2393 21 view .LVU1002
 3331 001e 0020     		movs	r0, #0
 3332              	.LVL262:
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3333              		.loc 1 2393 21 view .LVU1003
 3334 0020 FAE7     		b	.L243
 3335              		.cfi_endproc
 3336              	.LFE75:
 3338              		.text
 3339              	.Letext0:
 3340              		.file 2 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 3341              		.file 3 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 3342              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 3343              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 3344              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 3345              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 3346              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 111


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_can.c
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:19     .text.HAL_CAN_MspInit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:25     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:41     .text.HAL_CAN_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:47     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:361    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:367    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:383    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:389    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:654    .text.HAL_CAN_Start:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:660    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:771    .text.HAL_CAN_Stop:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:777    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:888    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:894    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:954    .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:960    .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1016   .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1022   .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1122   .text.HAL_CAN_WakeUp:00000054 $d
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1127   .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1133   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1189   .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1195   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1430   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1436   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1527   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1533   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1612   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1618   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1681   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1687   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1765   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:1771   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2125   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2131   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2201   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2207   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2263   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2269   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2325   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2331   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2347   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2353   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2369   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2375   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2391   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2397   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2413   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2419   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2435   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2441   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2457   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2463   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2479   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2485   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s 			page 112


C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2501   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2507   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2523   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2529   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2545   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2551   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2567   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2573   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2589   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2595   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2611   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:2617   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:3183   .text.HAL_CAN_GetState:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:3189   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:3252   .text.HAL_CAN_GetError:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:3258   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:3277   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccvcBrdy.s:3283   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
