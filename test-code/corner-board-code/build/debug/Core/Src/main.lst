ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB62:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** uint32_t adc_data[4];
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_CAN_Init(void);
  60:Core/Src/main.c **** static void MX_SPI1_Init(void);
  61:Core/Src/main.c **** static void MX_TIM3_Init(void);
  62:Core/Src/main.c **** static void MX_TIM16_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** void delay_us (uint16_t us)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
  73:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
  74:Core/Src/main.c **** }
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** uint32_t ads131m04_transfer_word(uint16_t word) {
  77:Core/Src/main.c ****   uint8_t lower = word & 0xff;
  78:Core/Src/main.c ****   uint8_t upper = word >> 8;
  79:Core/Src/main.c ****   uint8_t zero = 0;
  80:Core/Src/main.c ****   uint8_t recv[3];
  81:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
  82:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
  83:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
  84:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
  85:Core/Src/main.c **** }
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void ads131m04_transfer_frame(uint32_t* out, uint16_t* words, uint16_t tx_rx_delay) {
  88:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
  89:Core/Src/main.c ****   
  90:Core/Src/main.c ****   for (uint8_t i = 0; i < 6; i++) {
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 3


  91:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
  92:Core/Src/main.c ****   }
  93:Core/Src/main.c ****   // need to wait length of one word. at 6mhz this is 4us
  94:Core/Src/main.c ****   delay_us(4);
  95:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
  96:Core/Src/main.c **** }
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** void ads131m04_read_adc_nonblocking(uint32_t* out) {
  99:Core/Src/main.c ****   uint32_t recv[12];
 100:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
 101:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 102:Core/Src/main.c ****   out[0] = recv[1];
 103:Core/Src/main.c ****   out[1] = recv[2];
 104:Core/Src/main.c ****   out[2] = recv[3];
 105:Core/Src/main.c ****   out[3] = recv[4];
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** void ads131m04_drdy_exti_handler() {
 109:Core/Src/main.c ****   ads131m04_read_adc_nonblocking(adc_data);
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** void ads131m04_cmd(uint16_t cmd, uint32_t* out, uint16_t tx_rx_delay) {
 113:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 114:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 115:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 116:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 117:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 118:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 119:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** uint16_t ads131m04_reset() {
 123:Core/Src/main.c ****     uint32_t recv[12];
 124:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 125:Core/Src/main.c ****     return recv[6] >> 8;
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** uint16_t ads131m04_status() {
 129:Core/Src/main.c ****     uint32_t recv[12];
 130:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 131:Core/Src/main.c ****     return recv[6] >> 8;
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** uint16_t ads131m04_standby() {
 135:Core/Src/main.c ****     uint32_t recv[12];
 136:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 137:Core/Src/main.c ****     return recv[6] >> 8;
 138:Core/Src/main.c **** }
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** uint16_t ads131m04_wake() {
 141:Core/Src/main.c ****     uint32_t recv[12];
 142:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 143:Core/Src/main.c ****     return recv[6] >> 8;
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** uint16_t ads131m04_lock() {
 147:Core/Src/main.c ****     uint32_t recv[12];
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 4


 148:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 149:Core/Src/main.c ****     return recv[6] >> 8;
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** uint16_t ads131m04_unlock() {
 153:Core/Src/main.c ****     uint32_t recv[12];
 154:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 155:Core/Src/main.c ****     return recv[6] >> 8;
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** // returns register value
 159:Core/Src/main.c **** uint16_t ads131m04_rreg(uint8_t reg) {
 160:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 161:Core/Src/main.c ****     uint32_t recv[12];
 162:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 163:Core/Src/main.c ****     return recv[6] >> 8;
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** // read multiple registers
 167:Core/Src/main.c **** // returns read acknowledgement in out[0]
 168:Core/Src/main.c **** // returns register i in out[1+i]
 169:Core/Src/main.c **** void ads131m04_rreg_multiple(uint8_t start_reg, uint8_t count, uint32_t* out) {
 170:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 171:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 172:Core/Src/main.c ****   if (count == 0) return;
 173:Core/Src/main.c ****   if (count == 1) {
 174:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 175:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 176:Core/Src/main.c ****     out[7] = out[6];
 177:Core/Src/main.c ****     return;
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   // write first frame asking to read
 181:Core/Src/main.c ****   uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 182:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 183:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   // manually transfer the second frame
 186:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 187:Core/Src/main.c ****   
 188:Core/Src/main.c ****   // write min(6, count + 2) zero words
 189:Core/Src/main.c ****   uint8_t max = (count < 4) ? 6 : (count + 2);
 190:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 191:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 195:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** // returns write acknowledgement
 201:Core/Src/main.c **** uint16_t ads131m04_wreg(uint8_t reg, uint16_t data) {
 202:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 203:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 204:Core/Src/main.c ****   uint32_t recv[12];
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 5


 205:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 206:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 207:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 208:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 209:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 210:Core/Src/main.c ****   return recv[6] >> 8;
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** // returns write acknowledgement
 214:Core/Src/main.c **** uint16_t ads131m04_wreg_multiple(uint8_t start_reg, uint8_t count, uint16_t* data) {
 215:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 216:Core/Src/main.c ****   if (count == 0) return 0;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 219:Core/Src/main.c ****   // manually transfer the first frame
 220:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   // write the command
 223:Core/Src/main.c ****   ads131m04_transfer_word(cmd);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   // write all registers to write
 226:Core/Src/main.c ****   for (uint8_t i = 0; i < count; i++) {
 227:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   // pad if not written enough (need to have written at least 6 words)
 231:Core/Src/main.c ****   for (int8_t i = 0; i < 4 - count; i++) {
 232:Core/Src/main.c ****     ads131m04_transfer_word(0);
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   // write one zero word
 236:Core/Src/main.c ****   ads131m04_transfer_word(0);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 239:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   // transfer the second frame to get the write acknowledgement
 242:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 243:Core/Src/main.c ****   uint32_t recv[12];
 244:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 247:Core/Src/main.c ****   return recv[6] >> 8;  
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** /* USER CODE END 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /**
 252:Core/Src/main.c ****   * @brief  The application entry point.
 253:Core/Src/main.c ****   * @retval int
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** int main(void)
 256:Core/Src/main.c **** {
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE END 1 */
 261:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 6


 262:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 265:Core/Src/main.c ****   HAL_Init();
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END Init */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* Configure the system clock */
 272:Core/Src/main.c ****   SystemClock_Config();
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END SysInit */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* Initialize all configured peripherals */
 279:Core/Src/main.c ****   MX_GPIO_Init();
 280:Core/Src/main.c ****   MX_CAN_Init();
 281:Core/Src/main.c ****   MX_SPI1_Init();
 282:Core/Src/main.c ****   MX_TIM3_Init();
 283:Core/Src/main.c ****   MX_TIM16_Init();
 284:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 285:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 286:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 287:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   uint32_t registers[64];
 290:Core/Src/main.c ****   for (int i = 0; i < 64; i++) registers[i] = 0;
 291:Core/Src/main.c ****   /* USER CODE END 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* Infinite loop */
 294:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   ads131m04_reset();
 297:Core/Src/main.c ****   while (1)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 300:Core/Src/main.c ****     HAL_Delay(1);
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****     ads131m04_reset();
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****     HAL_Delay(1);
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****     ads131m04_status();
 307:Core/Src/main.c ****     ads131m04_lock();
 308:Core/Src/main.c ****     ads131m04_unlock();
 309:Core/Src/main.c ****     
 310:Core/Src/main.c ****     ads131m04_wake();
 311:Core/Src/main.c ****     HAL_Delay(1);
 312:Core/Src/main.c ****     ads131m04_standby();
 313:Core/Src/main.c ****     HAL_Delay(1);
 314:Core/Src/main.c ****     ads131m04_wake();
 315:Core/Src/main.c ****     HAL_Delay(1);
 316:Core/Src/main.c ****     ads131m04_rreg_multiple(0x00, 28, registers);
 317:Core/Src/main.c ****     HAL_Delay(1);
 318:Core/Src/main.c ****     ads131m04_wreg(0x06, 0x0602);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 7


 319:Core/Src/main.c ****     HAL_Delay(1);
 320:Core/Src/main.c ****     registers[0x07] = ads131m04_rreg(0x06);
 321:Core/Src/main.c ****     HAL_Delay(1);
 322:Core/Src/main.c ****     uint16_t towrite[2] = {0x0513, 0x0f0e};
 323:Core/Src/main.c ****     ads131m04_wreg_multiple(0x02, 2, towrite);
 324:Core/Src/main.c ****     // HAL_Delay(id | status | mode | clock | gain | cfg); // no optimization >:(((
 325:Core/Src/main.c ****     /* USER CODE END WHILE */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   /* USER CODE END 3 */
 330:Core/Src/main.c **** }
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /**
 333:Core/Src/main.c ****   * @brief System Clock Configuration
 334:Core/Src/main.c ****   * @retval None
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c **** void SystemClock_Config(void)
 337:Core/Src/main.c **** {
 338:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 339:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 342:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 345:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 346:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 347:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 348:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 349:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 350:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 351:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 352:Core/Src/main.c ****   {
 353:Core/Src/main.c ****     Error_Handler();
 354:Core/Src/main.c ****   }
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 357:Core/Src/main.c ****   */
 358:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 359:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 360:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 361:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 362:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 365:Core/Src/main.c ****   {
 366:Core/Src/main.c ****     Error_Handler();
 367:Core/Src/main.c ****   }
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * @brief CAN Initialization Function
 372:Core/Src/main.c ****   * @param None
 373:Core/Src/main.c ****   * @retval None
 374:Core/Src/main.c ****   */
 375:Core/Src/main.c **** static void MX_CAN_Init(void)
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 8


 376:Core/Src/main.c **** {
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
 385:Core/Src/main.c ****   hcan.Instance = CAN;
 386:Core/Src/main.c ****   hcan.Init.Prescaler = 32;
 387:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 388:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 389:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 390:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 391:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 392:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 393:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 394:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 395:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 396:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 397:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 398:Core/Src/main.c ****   {
 399:Core/Src/main.c ****     Error_Handler();
 400:Core/Src/main.c ****   }
 401:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** }
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** /**
 408:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 409:Core/Src/main.c ****   * @param None
 410:Core/Src/main.c ****   * @retval None
 411:Core/Src/main.c ****   */
 412:Core/Src/main.c **** static void MX_SPI1_Init(void)
 413:Core/Src/main.c **** {
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 422:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 423:Core/Src/main.c ****   hspi1.Instance = SPI1;
 424:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 425:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 426:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 427:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 428:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 429:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 430:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 431:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 432:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 9


 433:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 434:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 435:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 436:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 437:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 438:Core/Src/main.c ****   {
 439:Core/Src/main.c ****     Error_Handler();
 440:Core/Src/main.c ****   }
 441:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** }
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 449:Core/Src/main.c ****   * @param None
 450:Core/Src/main.c ****   * @retval None
 451:Core/Src/main.c ****   */
 452:Core/Src/main.c **** static void MX_TIM3_Init(void)
 453:Core/Src/main.c **** {
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 460:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 461:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 466:Core/Src/main.c ****   htim3.Instance = TIM3;
 467:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 468:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 469:Core/Src/main.c ****   htim3.Init.Period = 7;
 470:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 471:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 472:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 477:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****     Error_Handler();
 480:Core/Src/main.c ****   }
 481:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     Error_Handler();
 484:Core/Src/main.c ****   }
 485:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 486:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 487:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 488:Core/Src/main.c ****   {
 489:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 10


 490:Core/Src/main.c ****   }
 491:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 492:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 493:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 494:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 495:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 496:Core/Src/main.c ****   {
 497:Core/Src/main.c ****     Error_Handler();
 498:Core/Src/main.c ****   }
 499:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 502:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** /**
 507:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 508:Core/Src/main.c ****   * @param None
 509:Core/Src/main.c ****   * @retval None
 510:Core/Src/main.c ****   */
 511:Core/Src/main.c **** static void MX_TIM16_Init(void)
 512:Core/Src/main.c **** {
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 521:Core/Src/main.c ****   htim16.Instance = TIM16;
 522:Core/Src/main.c ****   htim16.Init.Prescaler = 48;
 523:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 524:Core/Src/main.c ****   htim16.Init.Period = 65535;
 525:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 526:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 527:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 528:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 529:Core/Src/main.c ****   {
 530:Core/Src/main.c ****     Error_Handler();
 531:Core/Src/main.c ****   }
 532:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** }
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** /**
 539:Core/Src/main.c ****   * @brief GPIO Initialization Function
 540:Core/Src/main.c ****   * @param None
 541:Core/Src/main.c ****   * @retval None
 542:Core/Src/main.c ****   */
 543:Core/Src/main.c **** static void MX_GPIO_Init(void)
 544:Core/Src/main.c **** {
  26              		.loc 1 544 1 view -0
  27              		.cfi_startproc
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 11


  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              		.cfi_def_cfa_offset 56
 545:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 545 3 view .LVU1
  40              		.loc 1 545 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 546:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 547:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 550:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  46              		.loc 1 550 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 550 3 view .LVU4
  49              		.loc 1 550 3 view .LVU5
  50 000e 304B     		ldr	r3, .L2
  51 0010 5A69     		ldr	r2, [r3, #20]
  52 0012 8021     		movs	r1, #128
  53 0014 C903     		lsls	r1, r1, #15
  54 0016 0A43     		orrs	r2, r1
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 550 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0A40     		ands	r2, r1
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 550 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 550 3 view .LVU8
 551:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 551 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 551 3 view .LVU10
  67              		.loc 1 551 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 551 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 0A40     		ands	r2, r1
  76 0030 0192     		str	r2, [sp, #4]
  77              		.loc 1 551 3 view .LVU13
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 12


  78 0032 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 551 3 view .LVU14
 552:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 552 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 552 3 view .LVU16
  84              		.loc 1 552 3 view .LVU17
  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 8021     		movs	r1, #128
  87 0038 C902     		lsls	r1, r1, #11
  88 003a 0A43     		orrs	r2, r1
  89 003c 5A61     		str	r2, [r3, #20]
  90              		.loc 1 552 3 view .LVU18
  91 003e 5B69     		ldr	r3, [r3, #20]
  92 0040 0B40     		ands	r3, r1
  93 0042 0293     		str	r3, [sp, #8]
  94              		.loc 1 552 3 view .LVU19
  95 0044 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 552 3 view .LVU20
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 555:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  98              		.loc 1 555 3 view .LVU21
  99 0046 234F     		ldr	r7, .L2+4
 100 0048 0022     		movs	r2, #0
 101 004a 0121     		movs	r1, #1
 102 004c 3800     		movs	r0, r7
 103 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL1:
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 558:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET);
 105              		.loc 1 558 3 view .LVU22
 106 0052 9026     		movs	r6, #144
 107 0054 F605     		lsls	r6, r6, #23
 108 0056 0022     		movs	r2, #0
 109 0058 1021     		movs	r1, #16
 110 005a 3000     		movs	r0, r6
 111 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL2:
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 561:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 113              		.loc 1 561 3 view .LVU23
 114              		.loc 1 561 23 is_stmt 0 view .LVU24
 115 0060 0125     		movs	r5, #1
 116 0062 0395     		str	r5, [sp, #12]
 562:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 562 3 is_stmt 1 view .LVU25
 118              		.loc 1 562 24 is_stmt 0 view .LVU26
 119 0064 0495     		str	r5, [sp, #16]
 563:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 563 3 is_stmt 1 view .LVU27
 121              		.loc 1 563 24 is_stmt 0 view .LVU28
 122 0066 0024     		movs	r4, #0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 13


 123 0068 0594     		str	r4, [sp, #20]
 564:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 564 3 is_stmt 1 view .LVU29
 125              		.loc 1 564 25 is_stmt 0 view .LVU30
 126 006a 0694     		str	r4, [sp, #24]
 565:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 127              		.loc 1 565 3 is_stmt 1 view .LVU31
 128 006c 03A9     		add	r1, sp, #12
 129 006e 3800     		movs	r0, r7
 130 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /*Configure GPIO pin : A3_Pin */
 568:Core/Src/main.c ****   GPIO_InitStruct.Pin = A3_Pin;
 132              		.loc 1 568 3 view .LVU32
 133              		.loc 1 568 23 is_stmt 0 view .LVU33
 134 0074 0223     		movs	r3, #2
 135 0076 0393     		str	r3, [sp, #12]
 569:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 136              		.loc 1 569 3 is_stmt 1 view .LVU34
 137              		.loc 1 569 24 is_stmt 0 view .LVU35
 138 0078 0494     		str	r4, [sp, #16]
 570:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 139              		.loc 1 570 3 is_stmt 1 view .LVU36
 140              		.loc 1 570 24 is_stmt 0 view .LVU37
 141 007a 0595     		str	r5, [sp, #20]
 571:Core/Src/main.c ****   HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 571 3 is_stmt 1 view .LVU38
 143 007c 03A9     		add	r1, sp, #12
 144 007e 3800     		movs	r0, r7
 145 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /*Configure GPIO pins : A2_Pin A1_Pin A0_Pin */
 574:Core/Src/main.c ****   GPIO_InitStruct.Pin = A2_Pin|A1_Pin|A0_Pin;
 147              		.loc 1 574 3 view .LVU39
 148              		.loc 1 574 23 is_stmt 0 view .LVU40
 149 0084 0723     		movs	r3, #7
 150 0086 0393     		str	r3, [sp, #12]
 575:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 151              		.loc 1 575 3 is_stmt 1 view .LVU41
 152              		.loc 1 575 24 is_stmt 0 view .LVU42
 153 0088 0494     		str	r4, [sp, #16]
 576:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 154              		.loc 1 576 3 is_stmt 1 view .LVU43
 155              		.loc 1 576 24 is_stmt 0 view .LVU44
 156 008a 0595     		str	r5, [sp, #20]
 577:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157              		.loc 1 577 3 is_stmt 1 view .LVU45
 158 008c 03A9     		add	r1, sp, #12
 159 008e 3000     		movs	r0, r6
 160 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /*Configure GPIO pin : DRDY_Pin */
 580:Core/Src/main.c ****   GPIO_InitStruct.Pin = DRDY_Pin;
 162              		.loc 1 580 3 view .LVU46
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 14


 163              		.loc 1 580 23 is_stmt 0 view .LVU47
 164 0094 0823     		movs	r3, #8
 165 0096 0393     		str	r3, [sp, #12]
 581:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 166              		.loc 1 581 3 is_stmt 1 view .LVU48
 167              		.loc 1 581 24 is_stmt 0 view .LVU49
 168 0098 8423     		movs	r3, #132
 169 009a 9B03     		lsls	r3, r3, #14
 170 009c 0493     		str	r3, [sp, #16]
 582:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 582 3 is_stmt 1 view .LVU50
 172              		.loc 1 582 24 is_stmt 0 view .LVU51
 173 009e 0594     		str	r4, [sp, #20]
 583:Core/Src/main.c ****   HAL_GPIO_Init(DRDY_GPIO_Port, &GPIO_InitStruct);
 174              		.loc 1 583 3 is_stmt 1 view .LVU52
 175 00a0 03A9     		add	r1, sp, #12
 176 00a2 3000     		movs	r0, r6
 177 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL6:
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /*Configure GPIO pin : CS_Pin */
 586:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_Pin;
 179              		.loc 1 586 3 view .LVU53
 180              		.loc 1 586 23 is_stmt 0 view .LVU54
 181 00a8 1023     		movs	r3, #16
 182 00aa 0393     		str	r3, [sp, #12]
 587:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 587 3 is_stmt 1 view .LVU55
 184              		.loc 1 587 24 is_stmt 0 view .LVU56
 185 00ac 0495     		str	r5, [sp, #16]
 588:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 588 3 is_stmt 1 view .LVU57
 187              		.loc 1 588 24 is_stmt 0 view .LVU58
 188 00ae 0594     		str	r4, [sp, #20]
 589:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 589 3 is_stmt 1 view .LVU59
 190              		.loc 1 589 25 is_stmt 0 view .LVU60
 191 00b0 0694     		str	r4, [sp, #24]
 590:Core/Src/main.c ****   HAL_GPIO_Init(CS_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 590 3 is_stmt 1 view .LVU61
 193 00b2 03A9     		add	r1, sp, #12
 194 00b4 3000     		movs	r0, r6
 195 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL7:
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /* EXTI interrupt init*/
 593:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_3_IRQn, 0, 0);
 197              		.loc 1 593 3 view .LVU62
 198 00ba 0022     		movs	r2, #0
 199 00bc 0021     		movs	r1, #0
 200 00be 0620     		movs	r0, #6
 201 00c0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 202              	.LVL8:
 594:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 203              		.loc 1 594 3 view .LVU63
 204 00c4 0620     		movs	r0, #6
 205 00c6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 15


 206              	.LVL9:
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 597:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 598:Core/Src/main.c **** }
 207              		.loc 1 598 1 is_stmt 0 view .LVU64
 208 00ca 09B0     		add	sp, sp, #36
 209              		@ sp needed
 210 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 211              	.L3:
 212 00ce C046     		.align	2
 213              	.L2:
 214 00d0 00100240 		.word	1073876992
 215 00d4 00140048 		.word	1207964672
 216              		.cfi_endproc
 217              	.LFE62:
 219              		.section	.text.delay_us,"ax",%progbits
 220              		.align	1
 221              		.global	delay_us
 222              		.syntax unified
 223              		.code	16
 224              		.thumb_func
 226              	delay_us:
 227              	.LVL10:
 228              	.LFB40:
  71:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 229              		.loc 1 71 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
  72:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 234              		.loc 1 72 2 view .LVU66
 235 0000 034B     		ldr	r3, .L6
 236 0002 1A68     		ldr	r2, [r3]
 237 0004 0023     		movs	r3, #0
 238 0006 5362     		str	r3, [r2, #36]
  73:Core/Src/main.c **** }
 239              		.loc 1 73 2 view .LVU67
 240              	.L5:
  73:Core/Src/main.c **** }
 241              		.loc 1 73 40 discriminator 1 view .LVU68
  73:Core/Src/main.c **** }
 242              		.loc 1 73 9 is_stmt 0 discriminator 1 view .LVU69
 243 0008 536A     		ldr	r3, [r2, #36]
  73:Core/Src/main.c **** }
 244              		.loc 1 73 40 discriminator 1 view .LVU70
 245 000a 8342     		cmp	r3, r0
 246 000c FCD3     		bcc	.L5
  74:Core/Src/main.c **** 
 247              		.loc 1 74 1 view .LVU71
 248              		@ sp needed
 249 000e 7047     		bx	lr
 250              	.L7:
 251              		.align	2
 252              	.L6:
 253 0010 00000000 		.word	htim16
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 16


 254              		.cfi_endproc
 255              	.LFE40:
 257              		.section	.text.ads131m04_transfer_word,"ax",%progbits
 258              		.align	1
 259              		.global	ads131m04_transfer_word
 260              		.syntax unified
 261              		.code	16
 262              		.thumb_func
 264              	ads131m04_transfer_word:
 265              	.LVL11:
 266              	.LFB41:
  76:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 267              		.loc 1 76 49 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 8
 270              		@ frame_needed = 0, uses_anonymous_args = 0
  76:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 271              		.loc 1 76 49 is_stmt 0 view .LVU73
 272 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 273              		.cfi_def_cfa_offset 20
 274              		.cfi_offset 4, -20
 275              		.cfi_offset 5, -16
 276              		.cfi_offset 6, -12
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 C646     		mov	lr, r8
 280 0004 00B5     		push	{lr}
 281              		.cfi_def_cfa_offset 24
 282              		.cfi_offset 8, -24
 283 0006 84B0     		sub	sp, sp, #16
 284              		.cfi_def_cfa_offset 40
  77:Core/Src/main.c ****   uint8_t upper = word >> 8;
 285              		.loc 1 77 3 is_stmt 1 view .LVU74
  77:Core/Src/main.c ****   uint8_t upper = word >> 8;
 286              		.loc 1 77 11 is_stmt 0 view .LVU75
 287 0008 0F23     		movs	r3, #15
 288 000a 6B44     		add	r3, r3, sp
 289 000c 9846     		mov	r8, r3
 290 000e 1870     		strb	r0, [r3]
  78:Core/Src/main.c ****   uint8_t zero = 0;
 291              		.loc 1 78 3 is_stmt 1 view .LVU76
  78:Core/Src/main.c ****   uint8_t zero = 0;
 292              		.loc 1 78 11 is_stmt 0 view .LVU77
 293 0010 0E21     		movs	r1, #14
 294 0012 6944     		add	r1, r1, sp
 295 0014 000A     		lsrs	r0, r0, #8
 296              	.LVL12:
  78:Core/Src/main.c ****   uint8_t zero = 0;
 297              		.loc 1 78 11 view .LVU78
 298 0016 0870     		strb	r0, [r1]
  79:Core/Src/main.c ****   uint8_t recv[3];
 299              		.loc 1 79 3 is_stmt 1 view .LVU79
  79:Core/Src/main.c ****   uint8_t recv[3];
 300              		.loc 1 79 11 is_stmt 0 view .LVU80
 301 0018 0D27     		movs	r7, #13
 302 001a 6F44     		add	r7, r7, sp
 303 001c 0026     		movs	r6, #0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 17


 304 001e 3E70     		strb	r6, [r7]
  80:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 305              		.loc 1 80 3 is_stmt 1 view .LVU81
  81:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 306              		.loc 1 81 3 view .LVU82
 307 0020 02AC     		add	r4, sp, #8
 308 0022 114D     		ldr	r5, .L9
 309 0024 0096     		str	r6, [sp]
 310 0026 0123     		movs	r3, #1
 311 0028 2200     		movs	r2, r4
 312 002a 2800     		movs	r0, r5
 313 002c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 314              	.LVL13:
  82:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 315              		.loc 1 82 3 view .LVU83
 316 0030 0096     		str	r6, [sp]
 317 0032 0123     		movs	r3, #1
 318 0034 0922     		movs	r2, #9
 319 0036 6A44     		add	r2, r2, sp
 320 0038 4146     		mov	r1, r8
 321 003a 2800     		movs	r0, r5
 322 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 323              	.LVL14:
  83:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 324              		.loc 1 83 3 view .LVU84
 325 0040 0096     		str	r6, [sp]
 326 0042 0123     		movs	r3, #1
 327 0044 0A22     		movs	r2, #10
 328 0046 6A44     		add	r2, r2, sp
 329 0048 3900     		movs	r1, r7
 330 004a 2800     		movs	r0, r5
 331 004c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 332              	.LVL15:
  84:Core/Src/main.c **** }
 333              		.loc 1 84 3 view .LVU85
  84:Core/Src/main.c **** }
 334              		.loc 1 84 15 is_stmt 0 view .LVU86
 335 0050 2078     		ldrb	r0, [r4]
  84:Core/Src/main.c **** }
 336              		.loc 1 84 19 view .LVU87
 337 0052 0004     		lsls	r0, r0, #16
  84:Core/Src/main.c **** }
 338              		.loc 1 84 33 view .LVU88
 339 0054 6378     		ldrb	r3, [r4, #1]
  84:Core/Src/main.c **** }
 340              		.loc 1 84 37 view .LVU89
 341 0056 1B02     		lsls	r3, r3, #8
  84:Core/Src/main.c **** }
 342              		.loc 1 84 26 view .LVU90
 343 0058 1843     		orrs	r0, r3
  84:Core/Src/main.c **** }
 344              		.loc 1 84 49 view .LVU91
 345 005a A378     		ldrb	r3, [r4, #2]
  84:Core/Src/main.c **** }
 346              		.loc 1 84 43 view .LVU92
 347 005c 1843     		orrs	r0, r3
  85:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 18


 348              		.loc 1 85 1 view .LVU93
 349 005e 04B0     		add	sp, sp, #16
 350              		@ sp needed
 351 0060 80BC     		pop	{r7}
 352 0062 B846     		mov	r8, r7
 353 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 354              	.L10:
 355 0066 C046     		.align	2
 356              	.L9:
 357 0068 00000000 		.word	hspi1
 358              		.cfi_endproc
 359              	.LFE41:
 361              		.section	.text.ads131m04_transfer_frame,"ax",%progbits
 362              		.align	1
 363              		.global	ads131m04_transfer_frame
 364              		.syntax unified
 365              		.code	16
 366              		.thumb_func
 368              	ads131m04_transfer_frame:
 369              	.LVL16:
 370              	.LFB42:
  87:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 371              		.loc 1 87 85 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
  87:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 375              		.loc 1 87 85 is_stmt 0 view .LVU95
 376 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 377              		.cfi_def_cfa_offset 24
 378              		.cfi_offset 3, -24
 379              		.cfi_offset 4, -20
 380              		.cfi_offset 5, -16
 381              		.cfi_offset 6, -12
 382              		.cfi_offset 7, -8
 383              		.cfi_offset 14, -4
 384 0002 0700     		movs	r7, r0
 385 0004 0E00     		movs	r6, r1
  88:Core/Src/main.c ****   
 386              		.loc 1 88 3 is_stmt 1 view .LVU96
 387 0006 9020     		movs	r0, #144
 388              	.LVL17:
  88:Core/Src/main.c ****   
 389              		.loc 1 88 3 is_stmt 0 view .LVU97
 390 0008 0022     		movs	r2, #0
 391              	.LVL18:
  88:Core/Src/main.c ****   
 392              		.loc 1 88 3 view .LVU98
 393 000a 1021     		movs	r1, #16
 394              	.LVL19:
  88:Core/Src/main.c ****   
 395              		.loc 1 88 3 view .LVU99
 396 000c C005     		lsls	r0, r0, #23
 397 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.LVL20:
  90:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 399              		.loc 1 90 3 is_stmt 1 view .LVU100
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 19


 400              	.LBB7:
  90:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 401              		.loc 1 90 8 view .LVU101
  90:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 402              		.loc 1 90 16 is_stmt 0 view .LVU102
 403 0012 0024     		movs	r4, #0
  90:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 404              		.loc 1 90 3 view .LVU103
 405 0014 08E0     		b	.L12
 406              	.LVL21:
 407              	.L13:
  91:Core/Src/main.c ****   }
 408              		.loc 1 91 5 is_stmt 1 discriminator 3 view .LVU104
  91:Core/Src/main.c ****   }
 409              		.loc 1 91 43 is_stmt 0 discriminator 3 view .LVU105
 410 0016 6300     		lsls	r3, r4, #1
  91:Core/Src/main.c ****   }
 411              		.loc 1 91 8 discriminator 3 view .LVU106
 412 0018 A500     		lsls	r5, r4, #2
 413 001a 7D19     		adds	r5, r7, r5
  91:Core/Src/main.c ****   }
 414              		.loc 1 91 14 discriminator 3 view .LVU107
 415 001c F05A     		ldrh	r0, [r6, r3]
 416 001e FFF7FEFF 		bl	ads131m04_transfer_word
 417              	.LVL22:
  91:Core/Src/main.c ****   }
 418              		.loc 1 91 12 discriminator 3 view .LVU108
 419 0022 2860     		str	r0, [r5]
  90:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 420              		.loc 1 90 31 is_stmt 1 discriminator 3 view .LVU109
 421 0024 0134     		adds	r4, r4, #1
 422              	.LVL23:
  90:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 423              		.loc 1 90 31 is_stmt 0 discriminator 3 view .LVU110
 424 0026 E4B2     		uxtb	r4, r4
 425              	.LVL24:
 426              	.L12:
  90:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 427              		.loc 1 90 25 is_stmt 1 discriminator 1 view .LVU111
 428 0028 052C     		cmp	r4, #5
 429 002a F4D9     		bls	.L13
 430              	.LBE7:
  94:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 431              		.loc 1 94 3 view .LVU112
 432 002c 0420     		movs	r0, #4
 433 002e FFF7FEFF 		bl	delay_us
 434              	.LVL25:
  95:Core/Src/main.c **** }
 435              		.loc 1 95 3 view .LVU113
 436 0032 9020     		movs	r0, #144
 437 0034 0122     		movs	r2, #1
 438 0036 1021     		movs	r1, #16
 439 0038 C005     		lsls	r0, r0, #23
 440 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 441              	.LVL26:
  96:Core/Src/main.c **** 
 442              		.loc 1 96 1 is_stmt 0 view .LVU114
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 20


 443              		@ sp needed
 444              	.LVL27:
 445              	.LVL28:
 446              	.LVL29:
  96:Core/Src/main.c **** 
 447              		.loc 1 96 1 view .LVU115
 448 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 449              		.cfi_endproc
 450              	.LFE42:
 452              		.section	.text.ads131m04_read_adc_nonblocking,"ax",%progbits
 453              		.align	1
 454              		.global	ads131m04_read_adc_nonblocking
 455              		.syntax unified
 456              		.code	16
 457              		.thumb_func
 459              	ads131m04_read_adc_nonblocking:
 460              	.LVL30:
 461              	.LFB43:
  98:Core/Src/main.c ****   uint32_t recv[12];
 462              		.loc 1 98 52 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 64
 465              		@ frame_needed = 0, uses_anonymous_args = 0
  98:Core/Src/main.c ****   uint32_t recv[12];
 466              		.loc 1 98 52 is_stmt 0 view .LVU117
 467 0000 10B5     		push	{r4, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 4, -8
 470              		.cfi_offset 14, -4
 471 0002 90B0     		sub	sp, sp, #64
 472              		.cfi_def_cfa_offset 72
 473 0004 0400     		movs	r4, r0
  99:Core/Src/main.c ****   uint16_t words[6] = {0, 0, 0, 0, 0, 0};
 474              		.loc 1 99 3 is_stmt 1 view .LVU118
 100:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 475              		.loc 1 100 3 view .LVU119
 100:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 476              		.loc 1 100 12 is_stmt 0 view .LVU120
 477 0006 0C22     		movs	r2, #12
 478 0008 0021     		movs	r1, #0
 479 000a 01A8     		add	r0, sp, #4
 480              	.LVL31:
 100:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 481              		.loc 1 100 12 view .LVU121
 482 000c FFF7FEFF 		bl	memset
 483              	.LVL32:
 101:Core/Src/main.c ****   out[0] = recv[1];
 484              		.loc 1 101 3 is_stmt 1 view .LVU122
 485 0010 0022     		movs	r2, #0
 486 0012 01A9     		add	r1, sp, #4
 487 0014 04A8     		add	r0, sp, #16
 488 0016 FFF7FEFF 		bl	ads131m04_transfer_frame
 489              	.LVL33:
 102:Core/Src/main.c ****   out[1] = recv[2];
 490              		.loc 1 102 3 view .LVU123
 102:Core/Src/main.c ****   out[1] = recv[2];
 491              		.loc 1 102 16 is_stmt 0 view .LVU124
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 21


 492 001a 059B     		ldr	r3, [sp, #20]
 102:Core/Src/main.c ****   out[1] = recv[2];
 493              		.loc 1 102 10 view .LVU125
 494 001c 2360     		str	r3, [r4]
 103:Core/Src/main.c ****   out[2] = recv[3];
 495              		.loc 1 103 3 is_stmt 1 view .LVU126
 103:Core/Src/main.c ****   out[2] = recv[3];
 496              		.loc 1 103 16 is_stmt 0 view .LVU127
 497 001e 069B     		ldr	r3, [sp, #24]
 103:Core/Src/main.c ****   out[2] = recv[3];
 498              		.loc 1 103 10 view .LVU128
 499 0020 6360     		str	r3, [r4, #4]
 104:Core/Src/main.c ****   out[3] = recv[4];
 500              		.loc 1 104 3 is_stmt 1 view .LVU129
 104:Core/Src/main.c ****   out[3] = recv[4];
 501              		.loc 1 104 16 is_stmt 0 view .LVU130
 502 0022 079B     		ldr	r3, [sp, #28]
 104:Core/Src/main.c ****   out[3] = recv[4];
 503              		.loc 1 104 10 view .LVU131
 504 0024 A360     		str	r3, [r4, #8]
 105:Core/Src/main.c **** }
 505              		.loc 1 105 3 is_stmt 1 view .LVU132
 105:Core/Src/main.c **** }
 506              		.loc 1 105 16 is_stmt 0 view .LVU133
 507 0026 089B     		ldr	r3, [sp, #32]
 105:Core/Src/main.c **** }
 508              		.loc 1 105 10 view .LVU134
 509 0028 E360     		str	r3, [r4, #12]
 106:Core/Src/main.c **** 
 510              		.loc 1 106 1 view .LVU135
 511 002a 10B0     		add	sp, sp, #64
 512              		@ sp needed
 513              	.LVL34:
 106:Core/Src/main.c **** 
 514              		.loc 1 106 1 view .LVU136
 515 002c 10BD     		pop	{r4, pc}
 516              		.cfi_endproc
 517              	.LFE43:
 519              		.section	.text.ads131m04_drdy_exti_handler,"ax",%progbits
 520              		.align	1
 521              		.global	ads131m04_drdy_exti_handler
 522              		.syntax unified
 523              		.code	16
 524              		.thumb_func
 526              	ads131m04_drdy_exti_handler:
 527              	.LFB44:
 108:Core/Src/main.c ****   ads131m04_read_adc_nonblocking(adc_data);
 528              		.loc 1 108 36 is_stmt 1 view -0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532 0000 10B5     		push	{r4, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 4, -8
 535              		.cfi_offset 14, -4
 109:Core/Src/main.c **** }
 536              		.loc 1 109 3 view .LVU138
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 22


 537 0002 0248     		ldr	r0, .L16
 538 0004 FFF7FEFF 		bl	ads131m04_read_adc_nonblocking
 539              	.LVL35:
 110:Core/Src/main.c **** 
 540              		.loc 1 110 1 is_stmt 0 view .LVU139
 541              		@ sp needed
 542 0008 10BD     		pop	{r4, pc}
 543              	.L17:
 544 000a C046     		.align	2
 545              	.L16:
 546 000c 00000000 		.word	adc_data
 547              		.cfi_endproc
 548              	.LFE44:
 550              		.section	.text.ads131m04_cmd,"ax",%progbits
 551              		.align	1
 552              		.global	ads131m04_cmd
 553              		.syntax unified
 554              		.code	16
 555              		.thumb_func
 557              	ads131m04_cmd:
 558              	.LVL36:
 559              	.LFB45:
 112:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 560              		.loc 1 112 71 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 24
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 112:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 564              		.loc 1 112 71 is_stmt 0 view .LVU141
 565 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 566              		.cfi_def_cfa_offset 20
 567              		.cfi_offset 4, -20
 568              		.cfi_offset 5, -16
 569              		.cfi_offset 6, -12
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 87B0     		sub	sp, sp, #28
 573              		.cfi_def_cfa_offset 48
 574 0004 0700     		movs	r7, r0
 575 0006 0D00     		movs	r5, r1
 576 0008 1600     		movs	r6, r2
 113:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 577              		.loc 1 113 3 is_stmt 1 view .LVU142
 578 000a 0620     		movs	r0, #6
 579              	.LVL37:
 113:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 580              		.loc 1 113 3 is_stmt 0 view .LVU143
 581 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 582              	.LVL38:
 114:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 583              		.loc 1 114 3 is_stmt 1 view .LVU144
 114:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 584              		.loc 1 114 12 is_stmt 0 view .LVU145
 585 0010 03AC     		add	r4, sp, #12
 586 0012 2780     		strh	r7, [r4]
 587 0014 0023     		movs	r3, #0
 588 0016 6380     		strh	r3, [r4, #2]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 23


 589 0018 A380     		strh	r3, [r4, #4]
 590 001a E380     		strh	r3, [r4, #6]
 591 001c 2381     		strh	r3, [r4, #8]
 592 001e 6381     		strh	r3, [r4, #10]
 115:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 593              		.loc 1 115 3 is_stmt 1 view .LVU146
 115:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 594              		.loc 1 115 12 is_stmt 0 view .LVU147
 595 0020 0C22     		movs	r2, #12
 596 0022 0021     		movs	r1, #0
 597 0024 6846     		mov	r0, sp
 598 0026 FFF7FEFF 		bl	memset
 599              	.LVL39:
 116:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 600              		.loc 1 116 3 is_stmt 1 view .LVU148
 601 002a 3200     		movs	r2, r6
 602 002c 2100     		movs	r1, r4
 603 002e 2800     		movs	r0, r5
 604 0030 FFF7FEFF 		bl	ads131m04_transfer_frame
 605              	.LVL40:
 117:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 606              		.loc 1 117 3 view .LVU149
 607 0034 2800     		movs	r0, r5
 608 0036 1830     		adds	r0, r0, #24
 609 0038 0022     		movs	r2, #0
 610 003a 6946     		mov	r1, sp
 611 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 612              	.LVL41:
 118:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 613              		.loc 1 118 3 view .LVU150
 118:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 614              		.loc 1 118 6 is_stmt 0 view .LVU151
 615 0040 002E     		cmp	r6, #0
 616 0042 04D1     		bne	.L20
 617              	.L19:
 119:Core/Src/main.c **** }
 618              		.loc 1 119 3 is_stmt 1 view .LVU152
 619 0044 0620     		movs	r0, #6
 620 0046 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 621              	.LVL42:
 120:Core/Src/main.c **** 
 622              		.loc 1 120 1 is_stmt 0 view .LVU153
 623 004a 07B0     		add	sp, sp, #28
 624              		@ sp needed
 625              	.LVL43:
 120:Core/Src/main.c **** 
 626              		.loc 1 120 1 view .LVU154
 627 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 628              	.LVL44:
 629              	.L20:
 118:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 630              		.loc 1 118 20 is_stmt 1 discriminator 1 view .LVU155
 631 004e 3000     		movs	r0, r6
 632 0050 FFF7FEFF 		bl	delay_us
 633              	.LVL45:
 634 0054 F6E7     		b	.L19
 635              		.cfi_endproc
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 24


 636              	.LFE45:
 638              		.section	.text.ads131m04_reset,"ax",%progbits
 639              		.align	1
 640              		.global	ads131m04_reset
 641              		.syntax unified
 642              		.code	16
 643              		.thumb_func
 645              	ads131m04_reset:
 646              	.LFB46:
 122:Core/Src/main.c ****     uint32_t recv[12];
 647              		.loc 1 122 28 view -0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 48
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651 0000 00B5     		push	{lr}
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 14, -4
 654 0002 8DB0     		sub	sp, sp, #52
 655              		.cfi_def_cfa_offset 56
 123:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 656              		.loc 1 123 5 view .LVU157
 124:Core/Src/main.c ****     return recv[6] >> 8;
 657              		.loc 1 124 5 view .LVU158
 658 0004 0C22     		movs	r2, #12
 659 0006 6946     		mov	r1, sp
 660 0008 1120     		movs	r0, #17
 661 000a FFF7FEFF 		bl	ads131m04_cmd
 662              	.LVL46:
 125:Core/Src/main.c **** }
 663              		.loc 1 125 5 view .LVU159
 125:Core/Src/main.c **** }
 664              		.loc 1 125 16 is_stmt 0 view .LVU160
 665 000e 0698     		ldr	r0, [sp, #24]
 125:Core/Src/main.c **** }
 666              		.loc 1 125 20 view .LVU161
 667 0010 000A     		lsrs	r0, r0, #8
 668 0012 80B2     		uxth	r0, r0
 126:Core/Src/main.c **** 
 669              		.loc 1 126 1 view .LVU162
 670 0014 0DB0     		add	sp, sp, #52
 671              		@ sp needed
 672 0016 00BD     		pop	{pc}
 673              		.cfi_endproc
 674              	.LFE46:
 676              		.section	.text.ads131m04_status,"ax",%progbits
 677              		.align	1
 678              		.global	ads131m04_status
 679              		.syntax unified
 680              		.code	16
 681              		.thumb_func
 683              	ads131m04_status:
 684              	.LFB47:
 128:Core/Src/main.c ****     uint32_t recv[12];
 685              		.loc 1 128 29 is_stmt 1 view -0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 48
 688              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 25


 689 0000 00B5     		push	{lr}
 690              		.cfi_def_cfa_offset 4
 691              		.cfi_offset 14, -4
 692 0002 8DB0     		sub	sp, sp, #52
 693              		.cfi_def_cfa_offset 56
 129:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 694              		.loc 1 129 5 view .LVU164
 130:Core/Src/main.c ****     return recv[6] >> 8;
 695              		.loc 1 130 5 view .LVU165
 696 0004 0022     		movs	r2, #0
 697 0006 6946     		mov	r1, sp
 698 0008 0020     		movs	r0, #0
 699 000a FFF7FEFF 		bl	ads131m04_cmd
 700              	.LVL47:
 131:Core/Src/main.c **** }
 701              		.loc 1 131 5 view .LVU166
 131:Core/Src/main.c **** }
 702              		.loc 1 131 16 is_stmt 0 view .LVU167
 703 000e 0698     		ldr	r0, [sp, #24]
 131:Core/Src/main.c **** }
 704              		.loc 1 131 20 view .LVU168
 705 0010 000A     		lsrs	r0, r0, #8
 706 0012 80B2     		uxth	r0, r0
 132:Core/Src/main.c **** 
 707              		.loc 1 132 1 view .LVU169
 708 0014 0DB0     		add	sp, sp, #52
 709              		@ sp needed
 710 0016 00BD     		pop	{pc}
 711              		.cfi_endproc
 712              	.LFE47:
 714              		.section	.text.ads131m04_standby,"ax",%progbits
 715              		.align	1
 716              		.global	ads131m04_standby
 717              		.syntax unified
 718              		.code	16
 719              		.thumb_func
 721              	ads131m04_standby:
 722              	.LFB48:
 134:Core/Src/main.c ****     uint32_t recv[12];
 723              		.loc 1 134 30 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 48
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727 0000 00B5     		push	{lr}
 728              		.cfi_def_cfa_offset 4
 729              		.cfi_offset 14, -4
 730 0002 8DB0     		sub	sp, sp, #52
 731              		.cfi_def_cfa_offset 56
 135:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 732              		.loc 1 135 5 view .LVU171
 136:Core/Src/main.c ****     return recv[6] >> 8;
 733              		.loc 1 136 5 view .LVU172
 734 0004 0022     		movs	r2, #0
 735 0006 6946     		mov	r1, sp
 736 0008 2220     		movs	r0, #34
 737 000a FFF7FEFF 		bl	ads131m04_cmd
 738              	.LVL48:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 26


 137:Core/Src/main.c **** }
 739              		.loc 1 137 5 view .LVU173
 137:Core/Src/main.c **** }
 740              		.loc 1 137 16 is_stmt 0 view .LVU174
 741 000e 0698     		ldr	r0, [sp, #24]
 137:Core/Src/main.c **** }
 742              		.loc 1 137 20 view .LVU175
 743 0010 000A     		lsrs	r0, r0, #8
 744 0012 80B2     		uxth	r0, r0
 138:Core/Src/main.c **** 
 745              		.loc 1 138 1 view .LVU176
 746 0014 0DB0     		add	sp, sp, #52
 747              		@ sp needed
 748 0016 00BD     		pop	{pc}
 749              		.cfi_endproc
 750              	.LFE48:
 752              		.section	.text.ads131m04_wake,"ax",%progbits
 753              		.align	1
 754              		.global	ads131m04_wake
 755              		.syntax unified
 756              		.code	16
 757              		.thumb_func
 759              	ads131m04_wake:
 760              	.LFB49:
 140:Core/Src/main.c ****     uint32_t recv[12];
 761              		.loc 1 140 27 is_stmt 1 view -0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 48
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765 0000 00B5     		push	{lr}
 766              		.cfi_def_cfa_offset 4
 767              		.cfi_offset 14, -4
 768 0002 8DB0     		sub	sp, sp, #52
 769              		.cfi_def_cfa_offset 56
 141:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 770              		.loc 1 141 5 view .LVU178
 142:Core/Src/main.c ****     return recv[6] >> 8;
 771              		.loc 1 142 5 view .LVU179
 772 0004 0022     		movs	r2, #0
 773 0006 6946     		mov	r1, sp
 774 0008 3320     		movs	r0, #51
 775 000a FFF7FEFF 		bl	ads131m04_cmd
 776              	.LVL49:
 143:Core/Src/main.c **** }
 777              		.loc 1 143 5 view .LVU180
 143:Core/Src/main.c **** }
 778              		.loc 1 143 16 is_stmt 0 view .LVU181
 779 000e 0698     		ldr	r0, [sp, #24]
 143:Core/Src/main.c **** }
 780              		.loc 1 143 20 view .LVU182
 781 0010 000A     		lsrs	r0, r0, #8
 782 0012 80B2     		uxth	r0, r0
 144:Core/Src/main.c **** 
 783              		.loc 1 144 1 view .LVU183
 784 0014 0DB0     		add	sp, sp, #52
 785              		@ sp needed
 786 0016 00BD     		pop	{pc}
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 27


 787              		.cfi_endproc
 788              	.LFE49:
 790              		.section	.text.ads131m04_lock,"ax",%progbits
 791              		.align	1
 792              		.global	ads131m04_lock
 793              		.syntax unified
 794              		.code	16
 795              		.thumb_func
 797              	ads131m04_lock:
 798              	.LFB50:
 146:Core/Src/main.c ****     uint32_t recv[12];
 799              		.loc 1 146 27 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 48
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803 0000 00B5     		push	{lr}
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 14, -4
 806 0002 8DB0     		sub	sp, sp, #52
 807              		.cfi_def_cfa_offset 56
 147:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 808              		.loc 1 147 5 view .LVU185
 148:Core/Src/main.c ****     return recv[6] >> 8;
 809              		.loc 1 148 5 view .LVU186
 810 0004 0022     		movs	r2, #0
 811 0006 6946     		mov	r1, sp
 812 0008 0348     		ldr	r0, .L26
 813 000a FFF7FEFF 		bl	ads131m04_cmd
 814              	.LVL50:
 149:Core/Src/main.c **** }
 815              		.loc 1 149 5 view .LVU187
 149:Core/Src/main.c **** }
 816              		.loc 1 149 16 is_stmt 0 view .LVU188
 817 000e 0698     		ldr	r0, [sp, #24]
 149:Core/Src/main.c **** }
 818              		.loc 1 149 20 view .LVU189
 819 0010 000A     		lsrs	r0, r0, #8
 820 0012 80B2     		uxth	r0, r0
 150:Core/Src/main.c **** 
 821              		.loc 1 150 1 view .LVU190
 822 0014 0DB0     		add	sp, sp, #52
 823              		@ sp needed
 824 0016 00BD     		pop	{pc}
 825              	.L27:
 826              		.align	2
 827              	.L26:
 828 0018 55050000 		.word	1365
 829              		.cfi_endproc
 830              	.LFE50:
 832              		.section	.text.ads131m04_unlock,"ax",%progbits
 833              		.align	1
 834              		.global	ads131m04_unlock
 835              		.syntax unified
 836              		.code	16
 837              		.thumb_func
 839              	ads131m04_unlock:
 840              	.LFB51:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 28


 152:Core/Src/main.c ****     uint32_t recv[12];
 841              		.loc 1 152 29 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 48
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845 0000 00B5     		push	{lr}
 846              		.cfi_def_cfa_offset 4
 847              		.cfi_offset 14, -4
 848 0002 8DB0     		sub	sp, sp, #52
 849              		.cfi_def_cfa_offset 56
 153:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 850              		.loc 1 153 5 view .LVU192
 154:Core/Src/main.c ****     return recv[6] >> 8;
 851              		.loc 1 154 5 view .LVU193
 852 0004 0022     		movs	r2, #0
 853 0006 6946     		mov	r1, sp
 854 0008 0348     		ldr	r0, .L29
 855 000a FFF7FEFF 		bl	ads131m04_cmd
 856              	.LVL51:
 155:Core/Src/main.c **** }
 857              		.loc 1 155 5 view .LVU194
 155:Core/Src/main.c **** }
 858              		.loc 1 155 16 is_stmt 0 view .LVU195
 859 000e 0698     		ldr	r0, [sp, #24]
 155:Core/Src/main.c **** }
 860              		.loc 1 155 20 view .LVU196
 861 0010 000A     		lsrs	r0, r0, #8
 862 0012 80B2     		uxth	r0, r0
 156:Core/Src/main.c **** 
 863              		.loc 1 156 1 view .LVU197
 864 0014 0DB0     		add	sp, sp, #52
 865              		@ sp needed
 866 0016 00BD     		pop	{pc}
 867              	.L30:
 868              		.align	2
 869              	.L29:
 870 0018 55060000 		.word	1621
 871              		.cfi_endproc
 872              	.LFE51:
 874              		.section	.text.ads131m04_rreg,"ax",%progbits
 875              		.align	1
 876              		.global	ads131m04_rreg
 877              		.syntax unified
 878              		.code	16
 879              		.thumb_func
 881              	ads131m04_rreg:
 882              	.LVL52:
 883              	.LFB52:
 159:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 884              		.loc 1 159 38 is_stmt 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 48
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 159:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 888              		.loc 1 159 38 is_stmt 0 view .LVU199
 889 0000 00B5     		push	{lr}
 890              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 29


 891              		.cfi_offset 14, -4
 892 0002 8DB0     		sub	sp, sp, #52
 893              		.cfi_def_cfa_offset 56
 160:Core/Src/main.c ****     uint32_t recv[12];
 894              		.loc 1 160 5 is_stmt 1 view .LVU200
 160:Core/Src/main.c ****     uint32_t recv[12];
 895              		.loc 1 160 43 is_stmt 0 view .LVU201
 896 0004 C301     		lsls	r3, r0, #7
 897 0006 FC22     		movs	r2, #252
 898 0008 5201     		lsls	r2, r2, #5
 899 000a 1340     		ands	r3, r2
 160:Core/Src/main.c ****     uint32_t recv[12];
 900              		.loc 1 160 27 view .LVU202
 901 000c 0548     		ldr	r0, .L32
 902              	.LVL53:
 160:Core/Src/main.c ****     uint32_t recv[12];
 903              		.loc 1 160 27 view .LVU203
 904 000e 1843     		orrs	r0, r3
 160:Core/Src/main.c ****     uint32_t recv[12];
 905              		.loc 1 160 14 view .LVU204
 906 0010 80B2     		uxth	r0, r0
 907              	.LVL54:
 161:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 908              		.loc 1 161 5 is_stmt 1 view .LVU205
 162:Core/Src/main.c ****     return recv[6] >> 8;
 909              		.loc 1 162 5 view .LVU206
 910 0012 0022     		movs	r2, #0
 911 0014 6946     		mov	r1, sp
 912 0016 FFF7FEFF 		bl	ads131m04_cmd
 913              	.LVL55:
 163:Core/Src/main.c **** }
 914              		.loc 1 163 5 view .LVU207
 163:Core/Src/main.c **** }
 915              		.loc 1 163 16 is_stmt 0 view .LVU208
 916 001a 0698     		ldr	r0, [sp, #24]
 163:Core/Src/main.c **** }
 917              		.loc 1 163 20 view .LVU209
 918 001c 000A     		lsrs	r0, r0, #8
 919 001e 80B2     		uxth	r0, r0
 164:Core/Src/main.c **** 
 920              		.loc 1 164 1 view .LVU210
 921 0020 0DB0     		add	sp, sp, #52
 922              		@ sp needed
 923 0022 00BD     		pop	{pc}
 924              	.L33:
 925              		.align	2
 926              	.L32:
 927 0024 00A0FFFF 		.word	-24576
 928              		.cfi_endproc
 929              	.LFE52:
 931              		.section	.text.ads131m04_rreg_multiple,"ax",%progbits
 932              		.align	1
 933              		.global	ads131m04_rreg_multiple
 934              		.syntax unified
 935              		.code	16
 936              		.thumb_func
 938              	ads131m04_rreg_multiple:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 30


 939              	.LVL56:
 940              	.LFB53:
 169:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 941              		.loc 1 169 79 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 16
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 945              		.loc 1 169 79 is_stmt 0 view .LVU212
 946 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 947              		.cfi_def_cfa_offset 20
 948              		.cfi_offset 4, -20
 949              		.cfi_offset 5, -16
 950              		.cfi_offset 6, -12
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953 0002 85B0     		sub	sp, sp, #20
 954              		.cfi_def_cfa_offset 40
 955 0004 0400     		movs	r4, r0
 956 0006 0D00     		movs	r5, r1
 957 0008 1600     		movs	r6, r2
 170:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 958              		.loc 1 170 3 is_stmt 1 view .LVU213
 959 000a 0620     		movs	r0, #6
 960              	.LVL57:
 170:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 961              		.loc 1 170 3 is_stmt 0 view .LVU214
 962 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 963              	.LVL58:
 172:Core/Src/main.c ****   if (count == 1) {
 964              		.loc 1 172 3 is_stmt 1 view .LVU215
 172:Core/Src/main.c ****   if (count == 1) {
 965              		.loc 1 172 6 is_stmt 0 view .LVU216
 966 0010 002D     		cmp	r5, #0
 967 0012 49D0     		beq	.L34
 173:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 968              		.loc 1 173 3 is_stmt 1 view .LVU217
 173:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 969              		.loc 1 173 6 is_stmt 0 view .LVU218
 970 0014 012D     		cmp	r5, #1
 971 0016 23D0     		beq	.L41
 181:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 972              		.loc 1 181 3 is_stmt 1 view .LVU219
 181:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 973              		.loc 1 181 47 is_stmt 0 view .LVU220
 974 0018 E401     		lsls	r4, r4, #7
 975 001a FC23     		movs	r3, #252
 976 001c 5B01     		lsls	r3, r3, #5
 977 001e 1C40     		ands	r4, r3
 181:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 978              		.loc 1 181 25 view .LVU221
 979 0020 224A     		ldr	r2, .L42
 980 0022 2243     		orrs	r2, r4
 181:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 981              		.loc 1 181 63 view .LVU222
 982 0024 6B1E     		subs	r3, r5, #1
 181:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 31


 983              		.loc 1 181 12 view .LVU223
 984 0026 7F21     		movs	r1, #127
 985 0028 0B40     		ands	r3, r1
 986 002a 1343     		orrs	r3, r2
 987              	.LVL59:
 182:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 988              		.loc 1 182 3 is_stmt 1 view .LVU224
 182:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 989              		.loc 1 182 12 is_stmt 0 view .LVU225
 990 002c 01A9     		add	r1, sp, #4
 991 002e 0B80     		strh	r3, [r1]
 992 0030 0023     		movs	r3, #0
 993              	.LVL60:
 182:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 994              		.loc 1 182 12 view .LVU226
 995 0032 4B80     		strh	r3, [r1, #2]
 996 0034 8B80     		strh	r3, [r1, #4]
 997 0036 CB80     		strh	r3, [r1, #6]
 998 0038 0B81     		strh	r3, [r1, #8]
 999 003a 4B81     		strh	r3, [r1, #10]
 183:Core/Src/main.c **** 
 1000              		.loc 1 183 3 is_stmt 1 view .LVU227
 1001 003c 0022     		movs	r2, #0
 1002 003e 3000     		movs	r0, r6
 1003 0040 FFF7FEFF 		bl	ads131m04_transfer_frame
 1004              	.LVL61:
 186:Core/Src/main.c ****   
 1005              		.loc 1 186 3 view .LVU228
 1006 0044 9020     		movs	r0, #144
 1007 0046 0022     		movs	r2, #0
 1008 0048 1021     		movs	r1, #16
 1009 004a C005     		lsls	r0, r0, #23
 1010 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1011              	.LVL62:
 189:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1012              		.loc 1 189 3 view .LVU229
 189:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 1013              		.loc 1 189 11 is_stmt 0 view .LVU230
 1014 0050 2F1C     		adds	r7, r5, #0
 1015 0052 032D     		cmp	r5, #3
 1016 0054 00D8     		bhi	.L37
 1017 0056 0427     		movs	r7, #4
 1018              	.L37:
 1019 0058 0237     		adds	r7, r7, #2
 1020 005a FFB2     		uxtb	r7, r7
 1021              	.LVL63:
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1022              		.loc 1 190 3 is_stmt 1 view .LVU231
 1023              	.LBB8:
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1024              		.loc 1 190 8 view .LVU232
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1025              		.loc 1 190 16 is_stmt 0 view .LVU233
 1026 005c 0024     		movs	r4, #0
 1027              	.LVL64:
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1028              		.loc 1 190 3 view .LVU234
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 32


 1029 005e 15E0     		b	.L38
 1030              	.LVL65:
 1031              	.L41:
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1032              		.loc 1 190 3 view .LVU235
 1033              	.LBE8:
 1034              	.LBB9:
 174:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1035              		.loc 1 174 5 is_stmt 1 view .LVU236
 174:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1036              		.loc 1 174 49 is_stmt 0 view .LVU237
 1037 0060 E401     		lsls	r4, r4, #7
 1038 0062 FC23     		movs	r3, #252
 1039 0064 5B01     		lsls	r3, r3, #5
 1040 0066 1C40     		ands	r4, r3
 174:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1041              		.loc 1 174 27 view .LVU238
 1042 0068 1048     		ldr	r0, .L42
 1043 006a 2043     		orrs	r0, r4
 174:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 1044              		.loc 1 174 14 view .LVU239
 1045 006c 80B2     		uxth	r0, r0
 1046              	.LVL66:
 175:Core/Src/main.c ****     out[7] = out[6];
 1047              		.loc 1 175 5 is_stmt 1 view .LVU240
 1048 006e 0022     		movs	r2, #0
 1049 0070 3100     		movs	r1, r6
 1050 0072 FFF7FEFF 		bl	ads131m04_cmd
 1051              	.LVL67:
 176:Core/Src/main.c ****     return;
 1052              		.loc 1 176 5 view .LVU241
 176:Core/Src/main.c ****     return;
 1053              		.loc 1 176 12 is_stmt 0 view .LVU242
 1054 0076 B369     		ldr	r3, [r6, #24]
 1055 0078 F361     		str	r3, [r6, #28]
 177:Core/Src/main.c ****   }
 1056              		.loc 1 177 5 is_stmt 1 view .LVU243
 1057 007a 15E0     		b	.L34
 1058              	.LVL68:
 1059              	.L39:
 177:Core/Src/main.c ****   }
 1060              		.loc 1 177 5 is_stmt 0 view .LVU244
 1061              	.LBE9:
 1062              	.LBB10:
 191:Core/Src/main.c ****   }
 1063              		.loc 1 191 5 is_stmt 1 discriminator 3 view .LVU245
 191:Core/Src/main.c ****   }
 1064              		.loc 1 191 8 is_stmt 0 discriminator 3 view .LVU246
 1065 007c A500     		lsls	r5, r4, #2
 1066 007e 7519     		adds	r5, r6, r5
 191:Core/Src/main.c ****   }
 1067              		.loc 1 191 14 discriminator 3 view .LVU247
 1068 0080 0020     		movs	r0, #0
 1069 0082 FFF7FEFF 		bl	ads131m04_transfer_word
 1070              	.LVL69:
 191:Core/Src/main.c ****   }
 1071              		.loc 1 191 12 discriminator 3 view .LVU248
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 33


 1072 0086 2860     		str	r0, [r5]
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1073              		.loc 1 190 33 is_stmt 1 discriminator 3 view .LVU249
 1074 0088 0134     		adds	r4, r4, #1
 1075              	.LVL70:
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1076              		.loc 1 190 33 is_stmt 0 discriminator 3 view .LVU250
 1077 008a E4B2     		uxtb	r4, r4
 1078              	.LVL71:
 1079              	.L38:
 190:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 1080              		.loc 1 190 25 is_stmt 1 discriminator 1 view .LVU251
 1081 008c BC42     		cmp	r4, r7
 1082 008e F5D3     		bcc	.L39
 1083              	.LBE10:
 194:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1084              		.loc 1 194 3 view .LVU252
 1085 0090 0420     		movs	r0, #4
 1086 0092 FFF7FEFF 		bl	delay_us
 1087              	.LVL72:
 195:Core/Src/main.c **** 
 1088              		.loc 1 195 3 view .LVU253
 1089 0096 9020     		movs	r0, #144
 1090 0098 0122     		movs	r2, #1
 1091 009a 1021     		movs	r1, #16
 1092 009c C005     		lsls	r0, r0, #23
 1093 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1094              	.LVL73:
 197:Core/Src/main.c **** }
 1095              		.loc 1 197 3 view .LVU254
 1096 00a2 0620     		movs	r0, #6
 1097 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1098              	.LVL74:
 1099              	.L34:
 198:Core/Src/main.c **** 
 1100              		.loc 1 198 1 is_stmt 0 view .LVU255
 1101 00a8 05B0     		add	sp, sp, #20
 1102              		@ sp needed
 1103              	.LVL75:
 198:Core/Src/main.c **** 
 1104              		.loc 1 198 1 view .LVU256
 1105 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 1106              	.L43:
 1107              		.align	2
 1108              	.L42:
 1109 00ac 00A0FFFF 		.word	-24576
 1110              		.cfi_endproc
 1111              	.LFE53:
 1113              		.section	.text.ads131m04_wreg,"ax",%progbits
 1114              		.align	1
 1115              		.global	ads131m04_wreg
 1116              		.syntax unified
 1117              		.code	16
 1118              		.thumb_func
 1120              	ads131m04_wreg:
 1121              	.LVL76:
 1122              	.LFB54:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 34


 201:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1123              		.loc 1 201 53 is_stmt 1 view -0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 72
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 201:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1127              		.loc 1 201 53 is_stmt 0 view .LVU258
 1128 0000 30B5     		push	{r4, r5, lr}
 1129              		.cfi_def_cfa_offset 12
 1130              		.cfi_offset 4, -12
 1131              		.cfi_offset 5, -8
 1132              		.cfi_offset 14, -4
 1133 0002 93B0     		sub	sp, sp, #76
 1134              		.cfi_def_cfa_offset 88
 1135 0004 0400     		movs	r4, r0
 1136 0006 0D00     		movs	r5, r1
 202:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1137              		.loc 1 202 3 is_stmt 1 view .LVU259
 1138 0008 0620     		movs	r0, #6
 1139              	.LVL77:
 202:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1140              		.loc 1 202 3 is_stmt 0 view .LVU260
 1141 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1142              	.LVL78:
 203:Core/Src/main.c ****   uint32_t recv[12];
 1143              		.loc 1 203 3 is_stmt 1 view .LVU261
 203:Core/Src/main.c ****   uint32_t recv[12];
 1144              		.loc 1 203 41 is_stmt 0 view .LVU262
 1145 000e E401     		lsls	r4, r4, #7
 1146 0010 FC23     		movs	r3, #252
 1147 0012 5B01     		lsls	r3, r3, #5
 1148 0014 1C40     		ands	r4, r3
 203:Core/Src/main.c ****   uint32_t recv[12];
 1149              		.loc 1 203 12 view .LVU263
 1150 0016 C023     		movs	r3, #192
 1151 0018 DB01     		lsls	r3, r3, #7
 1152 001a 2343     		orrs	r3, r4
 1153              	.LVL79:
 204:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 1154              		.loc 1 204 3 is_stmt 1 view .LVU264
 205:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1155              		.loc 1 205 3 view .LVU265
 205:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1156              		.loc 1 205 12 is_stmt 0 view .LVU266
 1157 001c 03AC     		add	r4, sp, #12
 1158 001e 2380     		strh	r3, [r4]
 1159 0020 6580     		strh	r5, [r4, #2]
 1160 0022 0023     		movs	r3, #0
 1161              	.LVL80:
 205:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1162              		.loc 1 205 12 view .LVU267
 1163 0024 A380     		strh	r3, [r4, #4]
 1164 0026 E380     		strh	r3, [r4, #6]
 1165 0028 2381     		strh	r3, [r4, #8]
 1166 002a 6381     		strh	r3, [r4, #10]
 206:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1167              		.loc 1 206 3 is_stmt 1 view .LVU268
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 35


 206:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1168              		.loc 1 206 12 is_stmt 0 view .LVU269
 1169 002c 0C22     		movs	r2, #12
 1170 002e 0021     		movs	r1, #0
 1171 0030 6846     		mov	r0, sp
 1172 0032 FFF7FEFF 		bl	memset
 1173              	.LVL81:
 207:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 1174              		.loc 1 207 3 is_stmt 1 view .LVU270
 1175 0036 0022     		movs	r2, #0
 1176 0038 2100     		movs	r1, r4
 1177 003a 06A8     		add	r0, sp, #24
 1178 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1179              	.LVL82:
 208:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 1180              		.loc 1 208 3 view .LVU271
 1181 0040 0022     		movs	r2, #0
 1182 0042 6946     		mov	r1, sp
 1183 0044 0CA8     		add	r0, sp, #48
 1184 0046 FFF7FEFF 		bl	ads131m04_transfer_frame
 1185              	.LVL83:
 209:Core/Src/main.c ****   return recv[6] >> 8;
 1186              		.loc 1 209 3 view .LVU272
 1187 004a 0620     		movs	r0, #6
 1188 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1189              	.LVL84:
 210:Core/Src/main.c **** }
 1190              		.loc 1 210 3 view .LVU273
 210:Core/Src/main.c **** }
 1191              		.loc 1 210 14 is_stmt 0 view .LVU274
 1192 0050 0C98     		ldr	r0, [sp, #48]
 210:Core/Src/main.c **** }
 1193              		.loc 1 210 18 view .LVU275
 1194 0052 000A     		lsrs	r0, r0, #8
 1195 0054 80B2     		uxth	r0, r0
 211:Core/Src/main.c **** 
 1196              		.loc 1 211 1 view .LVU276
 1197 0056 13B0     		add	sp, sp, #76
 1198              		@ sp needed
 1199 0058 30BD     		pop	{r4, r5, pc}
 1200              		.cfi_endproc
 1201              	.LFE54:
 1203              		.section	.text.ads131m04_wreg_multiple,"ax",%progbits
 1204              		.align	1
 1205              		.global	ads131m04_wreg_multiple
 1206              		.syntax unified
 1207              		.code	16
 1208              		.thumb_func
 1210              	ads131m04_wreg_multiple:
 1211              	.LVL85:
 1212              	.LFB55:
 214:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
 1213              		.loc 1 214 84 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 64
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 214:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI2_3_IRQn);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 36


 1217              		.loc 1 214 84 is_stmt 0 view .LVU278
 1218 0000 70B5     		push	{r4, r5, r6, lr}
 1219              		.cfi_def_cfa_offset 16
 1220              		.cfi_offset 4, -16
 1221              		.cfi_offset 5, -12
 1222              		.cfi_offset 6, -8
 1223              		.cfi_offset 14, -4
 1224 0002 90B0     		sub	sp, sp, #64
 1225              		.cfi_def_cfa_offset 80
 1226 0004 0400     		movs	r4, r0
 1227 0006 0D00     		movs	r5, r1
 1228 0008 1600     		movs	r6, r2
 215:Core/Src/main.c ****   if (count == 0) return 0;
 1229              		.loc 1 215 3 is_stmt 1 view .LVU279
 1230 000a 0620     		movs	r0, #6
 1231              	.LVL86:
 215:Core/Src/main.c ****   if (count == 0) return 0;
 1232              		.loc 1 215 3 is_stmt 0 view .LVU280
 1233 000c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1234              	.LVL87:
 216:Core/Src/main.c **** 
 1235              		.loc 1 216 3 is_stmt 1 view .LVU281
 216:Core/Src/main.c **** 
 1236              		.loc 1 216 6 is_stmt 0 view .LVU282
 1237 0010 002D     		cmp	r5, #0
 1238 0012 02D1     		bne	.L52
 216:Core/Src/main.c **** 
 1239              		.loc 1 216 26 view .LVU283
 1240 0014 0020     		movs	r0, #0
 1241              	.L46:
 248:Core/Src/main.c **** /* USER CODE END 0 */
 1242              		.loc 1 248 1 view .LVU284
 1243 0016 10B0     		add	sp, sp, #64
 1244              		@ sp needed
 1245              	.LVL88:
 248:Core/Src/main.c **** /* USER CODE END 0 */
 1246              		.loc 1 248 1 view .LVU285
 1247 0018 70BD     		pop	{r4, r5, r6, pc}
 1248              	.LVL89:
 1249              	.L52:
 218:Core/Src/main.c ****   // manually transfer the first frame
 1250              		.loc 1 218 3 is_stmt 1 view .LVU286
 218:Core/Src/main.c ****   // manually transfer the first frame
 1251              		.loc 1 218 47 is_stmt 0 view .LVU287
 1252 001a E401     		lsls	r4, r4, #7
 1253 001c FC23     		movs	r3, #252
 1254 001e 5B01     		lsls	r3, r3, #5
 1255 0020 1C40     		ands	r4, r3
 218:Core/Src/main.c ****   // manually transfer the first frame
 1256              		.loc 1 218 25 view .LVU288
 1257 0022 C022     		movs	r2, #192
 1258 0024 D201     		lsls	r2, r2, #7
 1259 0026 2243     		orrs	r2, r4
 218:Core/Src/main.c ****   // manually transfer the first frame
 1260              		.loc 1 218 63 view .LVU289
 1261 0028 6B1E     		subs	r3, r5, #1
 218:Core/Src/main.c ****   // manually transfer the first frame
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 37


 1262              		.loc 1 218 12 view .LVU290
 1263 002a 7F21     		movs	r1, #127
 1264 002c 1C00     		movs	r4, r3
 1265 002e 0C40     		ands	r4, r1
 1266 0030 1443     		orrs	r4, r2
 1267              	.LVL90:
 220:Core/Src/main.c **** 
 1268              		.loc 1 220 3 is_stmt 1 view .LVU291
 1269 0032 9020     		movs	r0, #144
 1270 0034 0022     		movs	r2, #0
 1271 0036 6F39     		subs	r1, r1, #111
 1272 0038 C005     		lsls	r0, r0, #23
 1273 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1274              	.LVL91:
 223:Core/Src/main.c **** 
 1275              		.loc 1 223 3 view .LVU292
 1276 003e 2000     		movs	r0, r4
 1277 0040 FFF7FEFF 		bl	ads131m04_transfer_word
 1278              	.LVL92:
 226:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1279              		.loc 1 226 3 view .LVU293
 1280              	.LBB11:
 226:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1281              		.loc 1 226 8 view .LVU294
 226:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1282              		.loc 1 226 16 is_stmt 0 view .LVU295
 1283 0044 0024     		movs	r4, #0
 1284              	.LVL93:
 226:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1285              		.loc 1 226 3 view .LVU296
 1286 0046 05E0     		b	.L47
 1287              	.LVL94:
 1288              	.L48:
 227:Core/Src/main.c ****   }
 1289              		.loc 1 227 5 is_stmt 1 discriminator 3 view .LVU297
 227:Core/Src/main.c ****   }
 1290              		.loc 1 227 33 is_stmt 0 discriminator 3 view .LVU298
 1291 0048 6300     		lsls	r3, r4, #1
 227:Core/Src/main.c ****   }
 1292              		.loc 1 227 5 discriminator 3 view .LVU299
 1293 004a F05A     		ldrh	r0, [r6, r3]
 1294 004c FFF7FEFF 		bl	ads131m04_transfer_word
 1295              	.LVL95:
 226:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1296              		.loc 1 226 35 is_stmt 1 discriminator 3 view .LVU300
 1297 0050 0134     		adds	r4, r4, #1
 1298              	.LVL96:
 226:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1299              		.loc 1 226 35 is_stmt 0 discriminator 3 view .LVU301
 1300 0052 E4B2     		uxtb	r4, r4
 1301              	.LVL97:
 1302              	.L47:
 226:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1303              		.loc 1 226 25 is_stmt 1 discriminator 1 view .LVU302
 1304 0054 AC42     		cmp	r4, r5
 1305 0056 F7D3     		bcc	.L48
 1306              	.LBE11:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 38


 1307              	.LBB12:
 231:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1308              		.loc 1 231 15 is_stmt 0 view .LVU303
 1309 0058 0024     		movs	r4, #0
 1310              	.LVL98:
 231:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1311              		.loc 1 231 15 view .LVU304
 1312 005a 04E0     		b	.L49
 1313              	.LVL99:
 1314              	.L50:
 232:Core/Src/main.c ****   }
 1315              		.loc 1 232 5 is_stmt 1 discriminator 3 view .LVU305
 1316 005c 0020     		movs	r0, #0
 1317 005e FFF7FEFF 		bl	ads131m04_transfer_word
 1318              	.LVL100:
 231:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1319              		.loc 1 231 38 discriminator 3 view .LVU306
 1320 0062 0134     		adds	r4, r4, #1
 1321              	.LVL101:
 231:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1322              		.loc 1 231 38 is_stmt 0 discriminator 3 view .LVU307
 1323 0064 64B2     		sxtb	r4, r4
 1324              	.LVL102:
 1325              	.L49:
 231:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1326              		.loc 1 231 24 is_stmt 1 discriminator 1 view .LVU308
 231:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1327              		.loc 1 231 28 is_stmt 0 discriminator 1 view .LVU309
 1328 0066 0423     		movs	r3, #4
 1329 0068 5B1B     		subs	r3, r3, r5
 231:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1330              		.loc 1 231 24 discriminator 1 view .LVU310
 1331 006a 9C42     		cmp	r4, r3
 1332 006c F6DB     		blt	.L50
 1333              	.LBE12:
 236:Core/Src/main.c **** 
 1334              		.loc 1 236 3 is_stmt 1 view .LVU311
 1335 006e 0020     		movs	r0, #0
 1336 0070 FFF7FEFF 		bl	ads131m04_transfer_word
 1337              	.LVL103:
 238:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1338              		.loc 1 238 3 view .LVU312
 1339 0074 0420     		movs	r0, #4
 1340 0076 FFF7FEFF 		bl	delay_us
 1341              	.LVL104:
 239:Core/Src/main.c **** 
 1342              		.loc 1 239 3 view .LVU313
 1343 007a 9020     		movs	r0, #144
 1344 007c 0122     		movs	r2, #1
 1345 007e 1021     		movs	r1, #16
 1346 0080 C005     		lsls	r0, r0, #23
 1347 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1348              	.LVL105:
 242:Core/Src/main.c ****   uint32_t recv[12];
 1349              		.loc 1 242 3 view .LVU314
 242:Core/Src/main.c ****   uint32_t recv[12];
 1350              		.loc 1 242 12 is_stmt 0 view .LVU315
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 39


 1351 0086 0C22     		movs	r2, #12
 1352 0088 0021     		movs	r1, #0
 1353 008a 0DA8     		add	r0, sp, #52
 1354 008c FFF7FEFF 		bl	memset
 1355              	.LVL106:
 243:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 1356              		.loc 1 243 3 is_stmt 1 view .LVU316
 244:Core/Src/main.c **** 
 1357              		.loc 1 244 3 view .LVU317
 1358 0090 0022     		movs	r2, #0
 1359 0092 0DA9     		add	r1, sp, #52
 1360 0094 01A8     		add	r0, sp, #4
 1361 0096 FFF7FEFF 		bl	ads131m04_transfer_frame
 1362              	.LVL107:
 246:Core/Src/main.c ****   return recv[6] >> 8;  
 1363              		.loc 1 246 3 view .LVU318
 1364 009a 0620     		movs	r0, #6
 1365 009c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1366              	.LVL108:
 247:Core/Src/main.c **** }
 1367              		.loc 1 247 3 view .LVU319
 247:Core/Src/main.c **** }
 1368              		.loc 1 247 14 is_stmt 0 view .LVU320
 1369 00a0 0798     		ldr	r0, [sp, #28]
 247:Core/Src/main.c **** }
 1370              		.loc 1 247 18 view .LVU321
 1371 00a2 000A     		lsrs	r0, r0, #8
 1372 00a4 80B2     		uxth	r0, r0
 1373 00a6 B6E7     		b	.L46
 1374              		.cfi_endproc
 1375              	.LFE55:
 1377              		.section	.text.Error_Handler,"ax",%progbits
 1378              		.align	1
 1379              		.global	Error_Handler
 1380              		.syntax unified
 1381              		.code	16
 1382              		.thumb_func
 1384              	Error_Handler:
 1385              	.LFB63:
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 601:Core/Src/main.c **** 
 602:Core/Src/main.c **** /* USER CODE END 4 */
 603:Core/Src/main.c **** 
 604:Core/Src/main.c **** /**
 605:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 606:Core/Src/main.c ****   * @retval None
 607:Core/Src/main.c ****   */
 608:Core/Src/main.c **** void Error_Handler(void)
 609:Core/Src/main.c **** {
 1386              		.loc 1 609 1 is_stmt 1 view -0
 1387              		.cfi_startproc
 1388              		@ Volatile: function does not return.
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391              		@ link register save eliminated.
 610:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 40


 611:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 612:Core/Src/main.c ****   __disable_irq();
 1392              		.loc 1 612 3 view .LVU323
 1393              	.LBB13:
 1394              	.LBI13:
 1395              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 41


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 42


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1396              		.loc 2 140 27 view .LVU324
 1397              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1398              		.loc 2 142 3 view .LVU325
 1399              		.syntax divided
 1400              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1401 0000 72B6     		cpsid i
 1402              	@ 0 "" 2
 1403              		.thumb
 1404              		.syntax unified
 1405              	.L54:
 1406              	.LBE14:
 1407              	.LBE13:
 613:Core/Src/main.c ****   while (1)
 1408              		.loc 1 613 3 discriminator 1 view .LVU326
 614:Core/Src/main.c ****   {
 615:Core/Src/main.c ****   }
 1409              		.loc 1 615 3 discriminator 1 view .LVU327
 613:Core/Src/main.c ****   while (1)
 1410              		.loc 1 613 9 discriminator 1 view .LVU328
 1411 0002 FEE7     		b	.L54
 1412              		.cfi_endproc
 1413              	.LFE63:
 1415              		.section	.text.MX_CAN_Init,"ax",%progbits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 43


 1416              		.align	1
 1417              		.syntax unified
 1418              		.code	16
 1419              		.thumb_func
 1421              	MX_CAN_Init:
 1422              	.LFB58:
 376:Core/Src/main.c **** 
 1423              		.loc 1 376 1 view -0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427 0000 10B5     		push	{r4, lr}
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 4, -8
 1430              		.cfi_offset 14, -4
 385:Core/Src/main.c ****   hcan.Init.Prescaler = 32;
 1431              		.loc 1 385 3 view .LVU330
 385:Core/Src/main.c ****   hcan.Init.Prescaler = 32;
 1432              		.loc 1 385 17 is_stmt 0 view .LVU331
 1433 0002 0B48     		ldr	r0, .L58
 1434 0004 0B4B     		ldr	r3, .L58+4
 1435 0006 0360     		str	r3, [r0]
 386:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 1436              		.loc 1 386 3 is_stmt 1 view .LVU332
 386:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 1437              		.loc 1 386 23 is_stmt 0 view .LVU333
 1438 0008 2023     		movs	r3, #32
 1439 000a 4360     		str	r3, [r0, #4]
 387:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1440              		.loc 1 387 3 is_stmt 1 view .LVU334
 387:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1441              		.loc 1 387 18 is_stmt 0 view .LVU335
 1442 000c 0023     		movs	r3, #0
 1443 000e 8360     		str	r3, [r0, #8]
 388:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 1444              		.loc 1 388 3 is_stmt 1 view .LVU336
 388:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 1445              		.loc 1 388 27 is_stmt 0 view .LVU337
 1446 0010 C360     		str	r3, [r0, #12]
 389:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 1447              		.loc 1 389 3 is_stmt 1 view .LVU338
 389:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 1448              		.loc 1 389 22 is_stmt 0 view .LVU339
 1449 0012 0361     		str	r3, [r0, #16]
 390:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 1450              		.loc 1 390 3 is_stmt 1 view .LVU340
 390:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 1451              		.loc 1 390 22 is_stmt 0 view .LVU341
 1452 0014 4361     		str	r3, [r0, #20]
 391:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 1453              		.loc 1 391 3 is_stmt 1 view .LVU342
 391:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 1454              		.loc 1 391 31 is_stmt 0 view .LVU343
 1455 0016 0376     		strb	r3, [r0, #24]
 392:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 1456              		.loc 1 392 3 is_stmt 1 view .LVU344
 392:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 44


 1457              		.loc 1 392 24 is_stmt 0 view .LVU345
 1458 0018 4376     		strb	r3, [r0, #25]
 393:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 1459              		.loc 1 393 3 is_stmt 1 view .LVU346
 393:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 1460              		.loc 1 393 24 is_stmt 0 view .LVU347
 1461 001a 8376     		strb	r3, [r0, #26]
 394:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 1462              		.loc 1 394 3 is_stmt 1 view .LVU348
 394:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 1463              		.loc 1 394 32 is_stmt 0 view .LVU349
 1464 001c C376     		strb	r3, [r0, #27]
 395:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 1465              		.loc 1 395 3 is_stmt 1 view .LVU350
 395:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 1466              		.loc 1 395 31 is_stmt 0 view .LVU351
 1467 001e 0377     		strb	r3, [r0, #28]
 396:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 1468              		.loc 1 396 3 is_stmt 1 view .LVU352
 396:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 1469              		.loc 1 396 34 is_stmt 0 view .LVU353
 1470 0020 4377     		strb	r3, [r0, #29]
 397:Core/Src/main.c ****   {
 1471              		.loc 1 397 3 is_stmt 1 view .LVU354
 397:Core/Src/main.c ****   {
 1472              		.loc 1 397 7 is_stmt 0 view .LVU355
 1473 0022 FFF7FEFF 		bl	HAL_CAN_Init
 1474              	.LVL109:
 397:Core/Src/main.c ****   {
 1475              		.loc 1 397 6 view .LVU356
 1476 0026 0028     		cmp	r0, #0
 1477 0028 00D1     		bne	.L57
 405:Core/Src/main.c **** 
 1478              		.loc 1 405 1 view .LVU357
 1479              		@ sp needed
 1480 002a 10BD     		pop	{r4, pc}
 1481              	.L57:
 399:Core/Src/main.c ****   }
 1482              		.loc 1 399 5 is_stmt 1 view .LVU358
 1483 002c FFF7FEFF 		bl	Error_Handler
 1484              	.LVL110:
 1485              	.L59:
 1486              		.align	2
 1487              	.L58:
 1488 0030 00000000 		.word	hcan
 1489 0034 00640040 		.word	1073767424
 1490              		.cfi_endproc
 1491              	.LFE58:
 1493              		.section	.text.MX_SPI1_Init,"ax",%progbits
 1494              		.align	1
 1495              		.syntax unified
 1496              		.code	16
 1497              		.thumb_func
 1499              	MX_SPI1_Init:
 1500              	.LFB59:
 413:Core/Src/main.c **** 
 1501              		.loc 1 413 1 view -0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 45


 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505 0000 10B5     		push	{r4, lr}
 1506              		.cfi_def_cfa_offset 8
 1507              		.cfi_offset 4, -8
 1508              		.cfi_offset 14, -4
 423:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1509              		.loc 1 423 3 view .LVU360
 423:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1510              		.loc 1 423 18 is_stmt 0 view .LVU361
 1511 0002 1148     		ldr	r0, .L63
 1512 0004 114B     		ldr	r3, .L63+4
 1513 0006 0360     		str	r3, [r0]
 424:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1514              		.loc 1 424 3 is_stmt 1 view .LVU362
 424:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1515              		.loc 1 424 19 is_stmt 0 view .LVU363
 1516 0008 8223     		movs	r3, #130
 1517 000a 5B00     		lsls	r3, r3, #1
 1518 000c 4360     		str	r3, [r0, #4]
 425:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1519              		.loc 1 425 3 is_stmt 1 view .LVU364
 425:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1520              		.loc 1 425 24 is_stmt 0 view .LVU365
 1521 000e 0023     		movs	r3, #0
 1522 0010 8360     		str	r3, [r0, #8]
 426:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1523              		.loc 1 426 3 is_stmt 1 view .LVU366
 426:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1524              		.loc 1 426 23 is_stmt 0 view .LVU367
 1525 0012 E022     		movs	r2, #224
 1526 0014 D200     		lsls	r2, r2, #3
 1527 0016 C260     		str	r2, [r0, #12]
 427:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 1528              		.loc 1 427 3 is_stmt 1 view .LVU368
 427:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 1529              		.loc 1 427 26 is_stmt 0 view .LVU369
 1530 0018 0361     		str	r3, [r0, #16]
 428:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1531              		.loc 1 428 3 is_stmt 1 view .LVU370
 428:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1532              		.loc 1 428 23 is_stmt 0 view .LVU371
 1533 001a 0122     		movs	r2, #1
 1534 001c 4261     		str	r2, [r0, #20]
 429:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 1535              		.loc 1 429 3 is_stmt 1 view .LVU372
 429:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 1536              		.loc 1 429 18 is_stmt 0 view .LVU373
 1537 001e 8022     		movs	r2, #128
 1538 0020 9200     		lsls	r2, r2, #2
 1539 0022 8261     		str	r2, [r0, #24]
 430:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1540              		.loc 1 430 3 is_stmt 1 view .LVU374
 430:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1541              		.loc 1 430 32 is_stmt 0 view .LVU375
 1542 0024 F13A     		subs	r2, r2, #241
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 46


 1543 0026 FF3A     		subs	r2, r2, #255
 1544 0028 C261     		str	r2, [r0, #28]
 431:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1545              		.loc 1 431 3 is_stmt 1 view .LVU376
 431:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1546              		.loc 1 431 23 is_stmt 0 view .LVU377
 1547 002a 0362     		str	r3, [r0, #32]
 432:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1548              		.loc 1 432 3 is_stmt 1 view .LVU378
 432:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1549              		.loc 1 432 21 is_stmt 0 view .LVU379
 1550 002c 4362     		str	r3, [r0, #36]
 433:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 1551              		.loc 1 433 3 is_stmt 1 view .LVU380
 433:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 1552              		.loc 1 433 29 is_stmt 0 view .LVU381
 1553 002e 8362     		str	r3, [r0, #40]
 434:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1554              		.loc 1 434 3 is_stmt 1 view .LVU382
 434:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1555              		.loc 1 434 28 is_stmt 0 view .LVU383
 1556 0030 093A     		subs	r2, r2, #9
 1557 0032 C262     		str	r2, [r0, #44]
 435:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 1558              		.loc 1 435 3 is_stmt 1 view .LVU384
 435:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 1559              		.loc 1 435 24 is_stmt 0 view .LVU385
 1560 0034 0363     		str	r3, [r0, #48]
 436:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1561              		.loc 1 436 3 is_stmt 1 view .LVU386
 436:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1562              		.loc 1 436 23 is_stmt 0 view .LVU387
 1563 0036 4363     		str	r3, [r0, #52]
 437:Core/Src/main.c ****   {
 1564              		.loc 1 437 3 is_stmt 1 view .LVU388
 437:Core/Src/main.c ****   {
 1565              		.loc 1 437 7 is_stmt 0 view .LVU389
 1566 0038 FFF7FEFF 		bl	HAL_SPI_Init
 1567              	.LVL111:
 437:Core/Src/main.c ****   {
 1568              		.loc 1 437 6 view .LVU390
 1569 003c 0028     		cmp	r0, #0
 1570 003e 00D1     		bne	.L62
 445:Core/Src/main.c **** 
 1571              		.loc 1 445 1 view .LVU391
 1572              		@ sp needed
 1573 0040 10BD     		pop	{r4, pc}
 1574              	.L62:
 439:Core/Src/main.c ****   }
 1575              		.loc 1 439 5 is_stmt 1 view .LVU392
 1576 0042 FFF7FEFF 		bl	Error_Handler
 1577              	.LVL112:
 1578              	.L64:
 1579 0046 C046     		.align	2
 1580              	.L63:
 1581 0048 00000000 		.word	hspi1
 1582 004c 00300140 		.word	1073819648
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 47


 1583              		.cfi_endproc
 1584              	.LFE59:
 1586              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1587              		.align	1
 1588              		.syntax unified
 1589              		.code	16
 1590              		.thumb_func
 1592              	MX_TIM3_Init:
 1593              	.LFB60:
 453:Core/Src/main.c **** 
 1594              		.loc 1 453 1 view -0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 56
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
 1598 0000 00B5     		push	{lr}
 1599              		.cfi_def_cfa_offset 4
 1600              		.cfi_offset 14, -4
 1601 0002 8FB0     		sub	sp, sp, #60
 1602              		.cfi_def_cfa_offset 64
 459:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1603              		.loc 1 459 3 view .LVU394
 459:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1604              		.loc 1 459 26 is_stmt 0 view .LVU395
 1605 0004 1022     		movs	r2, #16
 1606 0006 0021     		movs	r1, #0
 1607 0008 0AA8     		add	r0, sp, #40
 1608 000a FFF7FEFF 		bl	memset
 1609              	.LVL113:
 460:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1610              		.loc 1 460 3 is_stmt 1 view .LVU396
 460:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1611              		.loc 1 460 27 is_stmt 0 view .LVU397
 1612 000e 0822     		movs	r2, #8
 1613 0010 0021     		movs	r1, #0
 1614 0012 08A8     		add	r0, sp, #32
 1615 0014 FFF7FEFF 		bl	memset
 1616              	.LVL114:
 461:Core/Src/main.c **** 
 1617              		.loc 1 461 3 is_stmt 1 view .LVU398
 461:Core/Src/main.c **** 
 1618              		.loc 1 461 22 is_stmt 0 view .LVU399
 1619 0018 1C22     		movs	r2, #28
 1620 001a 0021     		movs	r1, #0
 1621 001c 01A8     		add	r0, sp, #4
 1622 001e FFF7FEFF 		bl	memset
 1623              	.LVL115:
 466:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1624              		.loc 1 466 3 is_stmt 1 view .LVU400
 466:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1625              		.loc 1 466 18 is_stmt 0 view .LVU401
 1626 0022 2148     		ldr	r0, .L76
 1627 0024 214B     		ldr	r3, .L76+4
 1628 0026 0360     		str	r3, [r0]
 467:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1629              		.loc 1 467 3 is_stmt 1 view .LVU402
 467:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1630              		.loc 1 467 24 is_stmt 0 view .LVU403
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 48


 1631 0028 0023     		movs	r3, #0
 1632 002a 4360     		str	r3, [r0, #4]
 468:Core/Src/main.c ****   htim3.Init.Period = 7;
 1633              		.loc 1 468 3 is_stmt 1 view .LVU404
 468:Core/Src/main.c ****   htim3.Init.Period = 7;
 1634              		.loc 1 468 26 is_stmt 0 view .LVU405
 1635 002c 8360     		str	r3, [r0, #8]
 469:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1636              		.loc 1 469 3 is_stmt 1 view .LVU406
 469:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1637              		.loc 1 469 21 is_stmt 0 view .LVU407
 1638 002e 0722     		movs	r2, #7
 1639 0030 C260     		str	r2, [r0, #12]
 470:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1640              		.loc 1 470 3 is_stmt 1 view .LVU408
 470:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1641              		.loc 1 470 28 is_stmt 0 view .LVU409
 1642 0032 0361     		str	r3, [r0, #16]
 471:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1643              		.loc 1 471 3 is_stmt 1 view .LVU410
 471:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1644              		.loc 1 471 32 is_stmt 0 view .LVU411
 1645 0034 8361     		str	r3, [r0, #24]
 472:Core/Src/main.c ****   {
 1646              		.loc 1 472 3 is_stmt 1 view .LVU412
 472:Core/Src/main.c ****   {
 1647              		.loc 1 472 7 is_stmt 0 view .LVU413
 1648 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1649              	.LVL116:
 472:Core/Src/main.c ****   {
 1650              		.loc 1 472 6 view .LVU414
 1651 003a 0028     		cmp	r0, #0
 1652 003c 29D1     		bne	.L71
 476:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1653              		.loc 1 476 3 is_stmt 1 view .LVU415
 476:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1654              		.loc 1 476 34 is_stmt 0 view .LVU416
 1655 003e 8023     		movs	r3, #128
 1656 0040 5B01     		lsls	r3, r3, #5
 1657 0042 0A93     		str	r3, [sp, #40]
 477:Core/Src/main.c ****   {
 1658              		.loc 1 477 3 is_stmt 1 view .LVU417
 477:Core/Src/main.c ****   {
 1659              		.loc 1 477 7 is_stmt 0 view .LVU418
 1660 0044 1848     		ldr	r0, .L76
 1661 0046 0AA9     		add	r1, sp, #40
 1662 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1663              	.LVL117:
 477:Core/Src/main.c ****   {
 1664              		.loc 1 477 6 view .LVU419
 1665 004c 0028     		cmp	r0, #0
 1666 004e 22D1     		bne	.L72
 481:Core/Src/main.c ****   {
 1667              		.loc 1 481 3 is_stmt 1 view .LVU420
 481:Core/Src/main.c ****   {
 1668              		.loc 1 481 7 is_stmt 0 view .LVU421
 1669 0050 1548     		ldr	r0, .L76
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 49


 1670 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1671              	.LVL118:
 481:Core/Src/main.c ****   {
 1672              		.loc 1 481 6 view .LVU422
 1673 0056 0028     		cmp	r0, #0
 1674 0058 1FD1     		bne	.L73
 485:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1675              		.loc 1 485 3 is_stmt 1 view .LVU423
 485:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1676              		.loc 1 485 37 is_stmt 0 view .LVU424
 1677 005a 0023     		movs	r3, #0
 1678 005c 0893     		str	r3, [sp, #32]
 486:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1679              		.loc 1 486 3 is_stmt 1 view .LVU425
 486:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1680              		.loc 1 486 33 is_stmt 0 view .LVU426
 1681 005e 0993     		str	r3, [sp, #36]
 487:Core/Src/main.c ****   {
 1682              		.loc 1 487 3 is_stmt 1 view .LVU427
 487:Core/Src/main.c ****   {
 1683              		.loc 1 487 7 is_stmt 0 view .LVU428
 1684 0060 1148     		ldr	r0, .L76
 1685 0062 08A9     		add	r1, sp, #32
 1686 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1687              	.LVL119:
 487:Core/Src/main.c ****   {
 1688              		.loc 1 487 6 view .LVU429
 1689 0068 0028     		cmp	r0, #0
 1690 006a 18D1     		bne	.L74
 491:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 1691              		.loc 1 491 3 is_stmt 1 view .LVU430
 491:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 1692              		.loc 1 491 20 is_stmt 0 view .LVU431
 1693 006c 6023     		movs	r3, #96
 1694 006e 0193     		str	r3, [sp, #4]
 492:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1695              		.loc 1 492 3 is_stmt 1 view .LVU432
 492:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1696              		.loc 1 492 19 is_stmt 0 view .LVU433
 1697 0070 5C3B     		subs	r3, r3, #92
 1698 0072 0293     		str	r3, [sp, #8]
 493:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 1699              		.loc 1 493 3 is_stmt 1 view .LVU434
 493:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 1700              		.loc 1 493 24 is_stmt 0 view .LVU435
 1701 0074 0022     		movs	r2, #0
 1702 0076 0392     		str	r2, [sp, #12]
 494:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1703              		.loc 1 494 3 is_stmt 1 view .LVU436
 494:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1704              		.loc 1 494 24 is_stmt 0 view .LVU437
 1705 0078 0593     		str	r3, [sp, #20]
 495:Core/Src/main.c ****   {
 1706              		.loc 1 495 3 is_stmt 1 view .LVU438
 495:Core/Src/main.c ****   {
 1707              		.loc 1 495 7 is_stmt 0 view .LVU439
 1708 007a 0B48     		ldr	r0, .L76
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 50


 1709 007c 0C32     		adds	r2, r2, #12
 1710 007e 01A9     		add	r1, sp, #4
 1711 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1712              	.LVL120:
 495:Core/Src/main.c ****   {
 1713              		.loc 1 495 6 view .LVU440
 1714 0084 0028     		cmp	r0, #0
 1715 0086 0CD1     		bne	.L75
 502:Core/Src/main.c **** 
 1716              		.loc 1 502 3 is_stmt 1 view .LVU441
 1717 0088 0748     		ldr	r0, .L76
 1718 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1719              	.LVL121:
 504:Core/Src/main.c **** 
 1720              		.loc 1 504 1 is_stmt 0 view .LVU442
 1721 008e 0FB0     		add	sp, sp, #60
 1722              		@ sp needed
 1723 0090 00BD     		pop	{pc}
 1724              	.L71:
 474:Core/Src/main.c ****   }
 1725              		.loc 1 474 5 is_stmt 1 view .LVU443
 1726 0092 FFF7FEFF 		bl	Error_Handler
 1727              	.LVL122:
 1728              	.L72:
 479:Core/Src/main.c ****   }
 1729              		.loc 1 479 5 view .LVU444
 1730 0096 FFF7FEFF 		bl	Error_Handler
 1731              	.LVL123:
 1732              	.L73:
 483:Core/Src/main.c ****   }
 1733              		.loc 1 483 5 view .LVU445
 1734 009a FFF7FEFF 		bl	Error_Handler
 1735              	.LVL124:
 1736              	.L74:
 489:Core/Src/main.c ****   }
 1737              		.loc 1 489 5 view .LVU446
 1738 009e FFF7FEFF 		bl	Error_Handler
 1739              	.LVL125:
 1740              	.L75:
 497:Core/Src/main.c ****   }
 1741              		.loc 1 497 5 view .LVU447
 1742 00a2 FFF7FEFF 		bl	Error_Handler
 1743              	.LVL126:
 1744              	.L77:
 1745 00a6 C046     		.align	2
 1746              	.L76:
 1747 00a8 00000000 		.word	htim3
 1748 00ac 00040040 		.word	1073742848
 1749              		.cfi_endproc
 1750              	.LFE60:
 1752              		.section	.text.MX_TIM16_Init,"ax",%progbits
 1753              		.align	1
 1754              		.syntax unified
 1755              		.code	16
 1756              		.thumb_func
 1758              	MX_TIM16_Init:
 1759              	.LFB61:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 51


 512:Core/Src/main.c **** 
 1760              		.loc 1 512 1 view -0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764 0000 10B5     		push	{r4, lr}
 1765              		.cfi_def_cfa_offset 8
 1766              		.cfi_offset 4, -8
 1767              		.cfi_offset 14, -4
 521:Core/Src/main.c ****   htim16.Init.Prescaler = 48;
 1768              		.loc 1 521 3 view .LVU449
 521:Core/Src/main.c ****   htim16.Init.Prescaler = 48;
 1769              		.loc 1 521 19 is_stmt 0 view .LVU450
 1770 0002 0948     		ldr	r0, .L81
 1771 0004 094B     		ldr	r3, .L81+4
 1772 0006 0360     		str	r3, [r0]
 522:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1773              		.loc 1 522 3 is_stmt 1 view .LVU451
 522:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1774              		.loc 1 522 25 is_stmt 0 view .LVU452
 1775 0008 3023     		movs	r3, #48
 1776 000a 4360     		str	r3, [r0, #4]
 523:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1777              		.loc 1 523 3 is_stmt 1 view .LVU453
 523:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1778              		.loc 1 523 27 is_stmt 0 view .LVU454
 1779 000c 0023     		movs	r3, #0
 1780 000e 8360     		str	r3, [r0, #8]
 524:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1781              		.loc 1 524 3 is_stmt 1 view .LVU455
 524:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1782              		.loc 1 524 22 is_stmt 0 view .LVU456
 1783 0010 074A     		ldr	r2, .L81+8
 1784 0012 C260     		str	r2, [r0, #12]
 525:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1785              		.loc 1 525 3 is_stmt 1 view .LVU457
 525:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1786              		.loc 1 525 29 is_stmt 0 view .LVU458
 1787 0014 0361     		str	r3, [r0, #16]
 526:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1788              		.loc 1 526 3 is_stmt 1 view .LVU459
 526:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1789              		.loc 1 526 33 is_stmt 0 view .LVU460
 1790 0016 4361     		str	r3, [r0, #20]
 527:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1791              		.loc 1 527 3 is_stmt 1 view .LVU461
 527:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1792              		.loc 1 527 33 is_stmt 0 view .LVU462
 1793 0018 8361     		str	r3, [r0, #24]
 528:Core/Src/main.c ****   {
 1794              		.loc 1 528 3 is_stmt 1 view .LVU463
 528:Core/Src/main.c ****   {
 1795              		.loc 1 528 7 is_stmt 0 view .LVU464
 1796 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1797              	.LVL127:
 528:Core/Src/main.c ****   {
 1798              		.loc 1 528 6 view .LVU465
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 52


 1799 001e 0028     		cmp	r0, #0
 1800 0020 00D1     		bne	.L80
 536:Core/Src/main.c **** 
 1801              		.loc 1 536 1 view .LVU466
 1802              		@ sp needed
 1803 0022 10BD     		pop	{r4, pc}
 1804              	.L80:
 530:Core/Src/main.c ****   }
 1805              		.loc 1 530 5 is_stmt 1 view .LVU467
 1806 0024 FFF7FEFF 		bl	Error_Handler
 1807              	.LVL128:
 1808              	.L82:
 1809              		.align	2
 1810              	.L81:
 1811 0028 00000000 		.word	htim16
 1812 002c 00440140 		.word	1073824768
 1813 0030 FFFF0000 		.word	65535
 1814              		.cfi_endproc
 1815              	.LFE61:
 1817              		.section	.text.SystemClock_Config,"ax",%progbits
 1818              		.align	1
 1819              		.global	SystemClock_Config
 1820              		.syntax unified
 1821              		.code	16
 1822              		.thumb_func
 1824              	SystemClock_Config:
 1825              	.LFB57:
 337:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1826              		.loc 1 337 1 view -0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 72
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
 1830 0000 00B5     		push	{lr}
 1831              		.cfi_def_cfa_offset 4
 1832              		.cfi_offset 14, -4
 1833 0002 93B0     		sub	sp, sp, #76
 1834              		.cfi_def_cfa_offset 80
 338:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1835              		.loc 1 338 3 view .LVU469
 338:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1836              		.loc 1 338 22 is_stmt 0 view .LVU470
 1837 0004 3422     		movs	r2, #52
 1838 0006 0021     		movs	r1, #0
 1839 0008 05A8     		add	r0, sp, #20
 1840 000a FFF7FEFF 		bl	memset
 1841              	.LVL129:
 339:Core/Src/main.c **** 
 1842              		.loc 1 339 3 is_stmt 1 view .LVU471
 339:Core/Src/main.c **** 
 1843              		.loc 1 339 22 is_stmt 0 view .LVU472
 1844 000e 1022     		movs	r2, #16
 1845 0010 0021     		movs	r1, #0
 1846 0012 01A8     		add	r0, sp, #4
 1847 0014 FFF7FEFF 		bl	memset
 1848              	.LVL130:
 344:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1849              		.loc 1 344 3 is_stmt 1 view .LVU473
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 53


 344:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1850              		.loc 1 344 36 is_stmt 0 view .LVU474
 1851 0018 0223     		movs	r3, #2
 1852 001a 0593     		str	r3, [sp, #20]
 345:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1853              		.loc 1 345 3 is_stmt 1 view .LVU475
 345:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1854              		.loc 1 345 30 is_stmt 0 view .LVU476
 1855 001c 0122     		movs	r2, #1
 1856 001e 0892     		str	r2, [sp, #32]
 346:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1857              		.loc 1 346 3 is_stmt 1 view .LVU477
 346:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1858              		.loc 1 346 41 is_stmt 0 view .LVU478
 1859 0020 0F32     		adds	r2, r2, #15
 1860 0022 0992     		str	r2, [sp, #36]
 347:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1861              		.loc 1 347 3 is_stmt 1 view .LVU479
 347:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1862              		.loc 1 347 34 is_stmt 0 view .LVU480
 1863 0024 0E93     		str	r3, [sp, #56]
 348:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 1864              		.loc 1 348 3 is_stmt 1 view .LVU481
 348:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 1865              		.loc 1 348 35 is_stmt 0 view .LVU482
 1866 0026 8023     		movs	r3, #128
 1867 0028 1B02     		lsls	r3, r3, #8
 1868 002a 0F93     		str	r3, [sp, #60]
 349:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1869              		.loc 1 349 3 is_stmt 1 view .LVU483
 349:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1870              		.loc 1 349 32 is_stmt 0 view .LVU484
 1871 002c 8023     		movs	r3, #128
 1872 002e 5B03     		lsls	r3, r3, #13
 1873 0030 1093     		str	r3, [sp, #64]
 350:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1874              		.loc 1 350 3 is_stmt 1 view .LVU485
 351:Core/Src/main.c ****   {
 1875              		.loc 1 351 3 view .LVU486
 351:Core/Src/main.c ****   {
 1876              		.loc 1 351 7 is_stmt 0 view .LVU487
 1877 0032 05A8     		add	r0, sp, #20
 1878 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1879              	.LVL131:
 351:Core/Src/main.c ****   {
 1880              		.loc 1 351 6 view .LVU488
 1881 0038 0028     		cmp	r0, #0
 1882 003a 0ED1     		bne	.L86
 358:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1883              		.loc 1 358 3 is_stmt 1 view .LVU489
 358:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1884              		.loc 1 358 31 is_stmt 0 view .LVU490
 1885 003c 0723     		movs	r3, #7
 1886 003e 0193     		str	r3, [sp, #4]
 360:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1887              		.loc 1 360 3 is_stmt 1 view .LVU491
 360:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 54


 1888              		.loc 1 360 34 is_stmt 0 view .LVU492
 1889 0040 053B     		subs	r3, r3, #5
 1890 0042 0293     		str	r3, [sp, #8]
 361:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1891              		.loc 1 361 3 is_stmt 1 view .LVU493
 361:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1892              		.loc 1 361 35 is_stmt 0 view .LVU494
 1893 0044 0023     		movs	r3, #0
 1894 0046 0393     		str	r3, [sp, #12]
 362:Core/Src/main.c **** 
 1895              		.loc 1 362 3 is_stmt 1 view .LVU495
 362:Core/Src/main.c **** 
 1896              		.loc 1 362 36 is_stmt 0 view .LVU496
 1897 0048 0493     		str	r3, [sp, #16]
 364:Core/Src/main.c ****   {
 1898              		.loc 1 364 3 is_stmt 1 view .LVU497
 364:Core/Src/main.c ****   {
 1899              		.loc 1 364 7 is_stmt 0 view .LVU498
 1900 004a 0121     		movs	r1, #1
 1901 004c 01A8     		add	r0, sp, #4
 1902 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1903              	.LVL132:
 364:Core/Src/main.c ****   {
 1904              		.loc 1 364 6 view .LVU499
 1905 0052 0028     		cmp	r0, #0
 1906 0054 03D1     		bne	.L87
 368:Core/Src/main.c **** 
 1907              		.loc 1 368 1 view .LVU500
 1908 0056 13B0     		add	sp, sp, #76
 1909              		@ sp needed
 1910 0058 00BD     		pop	{pc}
 1911              	.L86:
 353:Core/Src/main.c ****   }
 1912              		.loc 1 353 5 is_stmt 1 view .LVU501
 1913 005a FFF7FEFF 		bl	Error_Handler
 1914              	.LVL133:
 1915              	.L87:
 366:Core/Src/main.c ****   }
 1916              		.loc 1 366 5 view .LVU502
 1917 005e FFF7FEFF 		bl	Error_Handler
 1918              	.LVL134:
 1919              		.cfi_endproc
 1920              	.LFE57:
 1922              		.section	.text.main,"ax",%progbits
 1923              		.align	1
 1924              		.global	main
 1925              		.syntax unified
 1926              		.code	16
 1927              		.thumb_func
 1929              	main:
 1930              	.LFB56:
 256:Core/Src/main.c **** 
 1931              		.loc 1 256 1 view -0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 264
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935 0000 00B5     		push	{lr}
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 55


 1936              		.cfi_def_cfa_offset 4
 1937              		.cfi_offset 14, -4
 1938 0002 C3B0     		sub	sp, sp, #268
 1939              		.cfi_def_cfa_offset 272
 265:Core/Src/main.c **** 
 1940              		.loc 1 265 3 view .LVU504
 1941 0004 FFF7FEFF 		bl	HAL_Init
 1942              	.LVL135:
 272:Core/Src/main.c **** 
 1943              		.loc 1 272 3 view .LVU505
 1944 0008 FFF7FEFF 		bl	SystemClock_Config
 1945              	.LVL136:
 279:Core/Src/main.c ****   MX_CAN_Init();
 1946              		.loc 1 279 3 view .LVU506
 1947 000c FFF7FEFF 		bl	MX_GPIO_Init
 1948              	.LVL137:
 280:Core/Src/main.c ****   MX_SPI1_Init();
 1949              		.loc 1 280 3 view .LVU507
 1950 0010 FFF7FEFF 		bl	MX_CAN_Init
 1951              	.LVL138:
 281:Core/Src/main.c ****   MX_TIM3_Init();
 1952              		.loc 1 281 3 view .LVU508
 1953 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1954              	.LVL139:
 282:Core/Src/main.c ****   MX_TIM16_Init();
 1955              		.loc 1 282 3 view .LVU509
 1956 0018 FFF7FEFF 		bl	MX_TIM3_Init
 1957              	.LVL140:
 283:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1958              		.loc 1 283 3 view .LVU510
 1959 001c FFF7FEFF 		bl	MX_TIM16_Init
 1960              	.LVL141:
 285:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 1961              		.loc 1 285 3 view .LVU511
 1962 0020 2B48     		ldr	r0, .L92
 1963 0022 0C21     		movs	r1, #12
 1964 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1965              	.LVL142:
 286:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1966              		.loc 1 286 3 view .LVU512
 1967 0028 2A48     		ldr	r0, .L92+4
 1968 002a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1969              	.LVL143:
 287:Core/Src/main.c **** 
 1970              		.loc 1 287 3 view .LVU513
 1971 002e 9020     		movs	r0, #144
 1972 0030 0122     		movs	r2, #1
 1973 0032 1021     		movs	r1, #16
 1974 0034 C005     		lsls	r0, r0, #23
 1975 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1976              	.LVL144:
 289:Core/Src/main.c ****   for (int i = 0; i < 64; i++) registers[i] = 0;
 1977              		.loc 1 289 3 view .LVU514
 290:Core/Src/main.c ****   /* USER CODE END 2 */
 1978              		.loc 1 290 3 view .LVU515
 1979              	.LBB15:
 290:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 56


 1980              		.loc 1 290 8 view .LVU516
 290:Core/Src/main.c ****   /* USER CODE END 2 */
 1981              		.loc 1 290 12 is_stmt 0 view .LVU517
 1982 003a 0023     		movs	r3, #0
 290:Core/Src/main.c ****   /* USER CODE END 2 */
 1983              		.loc 1 290 3 view .LVU518
 1984 003c 04E0     		b	.L89
 1985              	.LVL145:
 1986              	.L90:
 290:Core/Src/main.c ****   /* USER CODE END 2 */
 1987              		.loc 1 290 32 is_stmt 1 discriminator 3 view .LVU519
 290:Core/Src/main.c ****   /* USER CODE END 2 */
 1988              		.loc 1 290 45 is_stmt 0 discriminator 3 view .LVU520
 1989 003e 9900     		lsls	r1, r3, #2
 1990 0040 02AA     		add	r2, sp, #8
 1991 0042 0020     		movs	r0, #0
 1992 0044 8850     		str	r0, [r1, r2]
 290:Core/Src/main.c ****   /* USER CODE END 2 */
 1993              		.loc 1 290 28 is_stmt 1 discriminator 3 view .LVU521
 1994 0046 0133     		adds	r3, r3, #1
 1995              	.LVL146:
 1996              	.L89:
 290:Core/Src/main.c ****   /* USER CODE END 2 */
 1997              		.loc 1 290 21 discriminator 1 view .LVU522
 1998 0048 3F2B     		cmp	r3, #63
 1999 004a F8DD     		ble	.L90
 2000              	.LBE15:
 296:Core/Src/main.c ****   while (1)
 2001              		.loc 1 296 3 view .LVU523
 2002 004c FFF7FEFF 		bl	ads131m04_reset
 2003              	.LVL147:
 2004              	.L91:
 297:Core/Src/main.c ****   {
 2005              		.loc 1 297 3 discriminator 1 view .LVU524
 2006              	.LBB16:
 299:Core/Src/main.c ****     HAL_Delay(1);
 2007              		.loc 1 299 5 discriminator 1 view .LVU525
 2008 0050 0121     		movs	r1, #1
 2009 0052 2148     		ldr	r0, .L92+8
 2010 0054 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2011              	.LVL148:
 300:Core/Src/main.c **** 
 2012              		.loc 1 300 5 discriminator 1 view .LVU526
 2013 0058 0120     		movs	r0, #1
 2014 005a FFF7FEFF 		bl	HAL_Delay
 2015              	.LVL149:
 302:Core/Src/main.c **** 
 2016              		.loc 1 302 5 discriminator 1 view .LVU527
 2017 005e FFF7FEFF 		bl	ads131m04_reset
 2018              	.LVL150:
 304:Core/Src/main.c **** 
 2019              		.loc 1 304 5 discriminator 1 view .LVU528
 2020 0062 0120     		movs	r0, #1
 2021 0064 FFF7FEFF 		bl	HAL_Delay
 2022              	.LVL151:
 306:Core/Src/main.c ****     ads131m04_lock();
 2023              		.loc 1 306 5 discriminator 1 view .LVU529
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 57


 2024 0068 FFF7FEFF 		bl	ads131m04_status
 2025              	.LVL152:
 307:Core/Src/main.c ****     ads131m04_unlock();
 2026              		.loc 1 307 5 discriminator 1 view .LVU530
 2027 006c FFF7FEFF 		bl	ads131m04_lock
 2028              	.LVL153:
 308:Core/Src/main.c ****     
 2029              		.loc 1 308 5 discriminator 1 view .LVU531
 2030 0070 FFF7FEFF 		bl	ads131m04_unlock
 2031              	.LVL154:
 310:Core/Src/main.c ****     HAL_Delay(1);
 2032              		.loc 1 310 5 discriminator 1 view .LVU532
 2033 0074 FFF7FEFF 		bl	ads131m04_wake
 2034              	.LVL155:
 311:Core/Src/main.c ****     ads131m04_standby();
 2035              		.loc 1 311 5 discriminator 1 view .LVU533
 2036 0078 0120     		movs	r0, #1
 2037 007a FFF7FEFF 		bl	HAL_Delay
 2038              	.LVL156:
 312:Core/Src/main.c ****     HAL_Delay(1);
 2039              		.loc 1 312 5 discriminator 1 view .LVU534
 2040 007e FFF7FEFF 		bl	ads131m04_standby
 2041              	.LVL157:
 313:Core/Src/main.c ****     ads131m04_wake();
 2042              		.loc 1 313 5 discriminator 1 view .LVU535
 2043 0082 0120     		movs	r0, #1
 2044 0084 FFF7FEFF 		bl	HAL_Delay
 2045              	.LVL158:
 314:Core/Src/main.c ****     HAL_Delay(1);
 2046              		.loc 1 314 5 discriminator 1 view .LVU536
 2047 0088 FFF7FEFF 		bl	ads131m04_wake
 2048              	.LVL159:
 315:Core/Src/main.c ****     ads131m04_rreg_multiple(0x00, 28, registers);
 2049              		.loc 1 315 5 discriminator 1 view .LVU537
 2050 008c 0120     		movs	r0, #1
 2051 008e FFF7FEFF 		bl	HAL_Delay
 2052              	.LVL160:
 316:Core/Src/main.c ****     HAL_Delay(1);
 2053              		.loc 1 316 5 discriminator 1 view .LVU538
 2054 0092 02AA     		add	r2, sp, #8
 2055 0094 1C21     		movs	r1, #28
 2056 0096 0020     		movs	r0, #0
 2057 0098 FFF7FEFF 		bl	ads131m04_rreg_multiple
 2058              	.LVL161:
 317:Core/Src/main.c ****     ads131m04_wreg(0x06, 0x0602);
 2059              		.loc 1 317 5 discriminator 1 view .LVU539
 2060 009c 0120     		movs	r0, #1
 2061 009e FFF7FEFF 		bl	HAL_Delay
 2062              	.LVL162:
 318:Core/Src/main.c ****     HAL_Delay(1);
 2063              		.loc 1 318 5 discriminator 1 view .LVU540
 2064 00a2 0E49     		ldr	r1, .L92+12
 2065 00a4 0620     		movs	r0, #6
 2066 00a6 FFF7FEFF 		bl	ads131m04_wreg
 2067              	.LVL163:
 319:Core/Src/main.c ****     registers[0x07] = ads131m04_rreg(0x06);
 2068              		.loc 1 319 5 discriminator 1 view .LVU541
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 58


 2069 00aa 0120     		movs	r0, #1
 2070 00ac FFF7FEFF 		bl	HAL_Delay
 2071              	.LVL164:
 320:Core/Src/main.c ****     HAL_Delay(1);
 2072              		.loc 1 320 5 discriminator 1 view .LVU542
 320:Core/Src/main.c ****     HAL_Delay(1);
 2073              		.loc 1 320 23 is_stmt 0 discriminator 1 view .LVU543
 2074 00b0 0620     		movs	r0, #6
 2075 00b2 FFF7FEFF 		bl	ads131m04_rreg
 2076              	.LVL165:
 320:Core/Src/main.c ****     HAL_Delay(1);
 2077              		.loc 1 320 21 discriminator 1 view .LVU544
 2078 00b6 0990     		str	r0, [sp, #36]
 321:Core/Src/main.c ****     uint16_t towrite[2] = {0x0513, 0x0f0e};
 2079              		.loc 1 321 5 is_stmt 1 discriminator 1 view .LVU545
 2080 00b8 0120     		movs	r0, #1
 2081 00ba FFF7FEFF 		bl	HAL_Delay
 2082              	.LVL166:
 322:Core/Src/main.c ****     ads131m04_wreg_multiple(0x02, 2, towrite);
 2083              		.loc 1 322 5 discriminator 1 view .LVU546
 322:Core/Src/main.c ****     ads131m04_wreg_multiple(0x02, 2, towrite);
 2084              		.loc 1 322 14 is_stmt 0 discriminator 1 view .LVU547
 2085 00be 084B     		ldr	r3, .L92+16
 2086 00c0 1B68     		ldr	r3, [r3]
 2087 00c2 0193     		str	r3, [sp, #4]
 323:Core/Src/main.c ****     // HAL_Delay(id | status | mode | clock | gain | cfg); // no optimization >:(((
 2088              		.loc 1 323 5 is_stmt 1 discriminator 1 view .LVU548
 2089 00c4 01AA     		add	r2, sp, #4
 2090 00c6 0221     		movs	r1, #2
 2091 00c8 0220     		movs	r0, #2
 2092 00ca FFF7FEFF 		bl	ads131m04_wreg_multiple
 2093              	.LVL167:
 2094              	.LBE16:
 297:Core/Src/main.c ****   {
 2095              		.loc 1 297 9 discriminator 1 view .LVU549
 2096 00ce BFE7     		b	.L91
 2097              	.L93:
 2098              		.align	2
 2099              	.L92:
 2100 00d0 00000000 		.word	htim3
 2101 00d4 00000000 		.word	htim16
 2102 00d8 00140048 		.word	1207964672
 2103 00dc 02060000 		.word	1538
 2104 00e0 00000000 		.word	.LANCHOR0
 2105              		.cfi_endproc
 2106              	.LFE56:
 2108              		.global	adc_data
 2109              		.section	.bss.adc_data,"aw",%nobits
 2110              		.align	2
 2113              	adc_data:
 2114 0000 00000000 		.space	16
 2114      00000000 
 2114      00000000 
 2114      00000000 
 2115              		.global	htim16
 2116              		.section	.bss.htim16,"aw",%nobits
 2117              		.align	2
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 59


 2120              	htim16:
 2121 0000 00000000 		.space	72
 2121      00000000 
 2121      00000000 
 2121      00000000 
 2121      00000000 
 2122              		.global	htim3
 2123              		.section	.bss.htim3,"aw",%nobits
 2124              		.align	2
 2127              	htim3:
 2128 0000 00000000 		.space	72
 2128      00000000 
 2128      00000000 
 2128      00000000 
 2128      00000000 
 2129              		.global	hspi1
 2130              		.section	.bss.hspi1,"aw",%nobits
 2131              		.align	2
 2134              	hspi1:
 2135 0000 00000000 		.space	100
 2135      00000000 
 2135      00000000 
 2135      00000000 
 2135      00000000 
 2136              		.global	hcan
 2137              		.section	.bss.hcan,"aw",%nobits
 2138              		.align	2
 2141              	hcan:
 2142 0000 00000000 		.space	40
 2142      00000000 
 2142      00000000 
 2142      00000000 
 2142      00000000 
 2143              		.section	.rodata
 2144              		.align	2
 2145              		.set	.LANCHOR0,. + 0
 2146              	.LC0:
 2147 0000 1305     		.short	1299
 2148 0002 0E0F     		.short	3854
 2149              		.text
 2150              	.Letext0:
 2151              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 2152              		.file 4 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2153              		.file 5 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2154              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2155              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2156              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2157              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2158              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2159              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 2160              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 2161              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 2162              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 2163              		.file 15 "Core/Inc/main.h"
 2164              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 2165              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2166              		.file 18 "<built-in>"
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 60


ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:214    .text.MX_GPIO_Init:000000d0 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:220    .text.delay_us:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:226    .text.delay_us:00000000 delay_us
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:253    .text.delay_us:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2120   .bss.htim16:00000000 htim16
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:258    .text.ads131m04_transfer_word:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:264    .text.ads131m04_transfer_word:00000000 ads131m04_transfer_word
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:357    .text.ads131m04_transfer_word:00000068 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2134   .bss.hspi1:00000000 hspi1
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:362    .text.ads131m04_transfer_frame:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:368    .text.ads131m04_transfer_frame:00000000 ads131m04_transfer_frame
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:453    .text.ads131m04_read_adc_nonblocking:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:459    .text.ads131m04_read_adc_nonblocking:00000000 ads131m04_read_adc_nonblocking
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:520    .text.ads131m04_drdy_exti_handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:526    .text.ads131m04_drdy_exti_handler:00000000 ads131m04_drdy_exti_handler
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:546    .text.ads131m04_drdy_exti_handler:0000000c $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2113   .bss.adc_data:00000000 adc_data
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:551    .text.ads131m04_cmd:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:557    .text.ads131m04_cmd:00000000 ads131m04_cmd
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:639    .text.ads131m04_reset:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:645    .text.ads131m04_reset:00000000 ads131m04_reset
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:677    .text.ads131m04_status:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:683    .text.ads131m04_status:00000000 ads131m04_status
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:715    .text.ads131m04_standby:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:721    .text.ads131m04_standby:00000000 ads131m04_standby
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:753    .text.ads131m04_wake:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:759    .text.ads131m04_wake:00000000 ads131m04_wake
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:791    .text.ads131m04_lock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:797    .text.ads131m04_lock:00000000 ads131m04_lock
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:828    .text.ads131m04_lock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:833    .text.ads131m04_unlock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:839    .text.ads131m04_unlock:00000000 ads131m04_unlock
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:870    .text.ads131m04_unlock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:875    .text.ads131m04_rreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:881    .text.ads131m04_rreg:00000000 ads131m04_rreg
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:927    .text.ads131m04_rreg:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:932    .text.ads131m04_rreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:938    .text.ads131m04_rreg_multiple:00000000 ads131m04_rreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1109   .text.ads131m04_rreg_multiple:000000ac $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1114   .text.ads131m04_wreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1120   .text.ads131m04_wreg:00000000 ads131m04_wreg
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1204   .text.ads131m04_wreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1210   .text.ads131m04_wreg_multiple:00000000 ads131m04_wreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1378   .text.Error_Handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1384   .text.Error_Handler:00000000 Error_Handler
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1416   .text.MX_CAN_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1421   .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1488   .text.MX_CAN_Init:00000030 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2141   .bss.hcan:00000000 hcan
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1494   .text.MX_SPI1_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1499   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1581   .text.MX_SPI1_Init:00000048 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1587   .text.MX_TIM3_Init:00000000 $t
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s 			page 62


C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1592   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1747   .text.MX_TIM3_Init:000000a8 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2127   .bss.htim3:00000000 htim3
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1753   .text.MX_TIM16_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1758   .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1811   .text.MX_TIM16_Init:00000028 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1818   .text.SystemClock_Config:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1824   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1923   .text.main:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:1929   .text.main:00000000 main
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2100   .text.main:000000d0 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2110   .bss.adc_data:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2117   .bss.htim16:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2124   .bss.htim3:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2131   .bss.hspi1:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2138   .bss.hcan:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccXTETPZ.s:2144   .rodata:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_TransmitReceive
HAL_NVIC_DisableIRQ
HAL_CAN_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start
HAL_GPIO_TogglePin
HAL_Delay
