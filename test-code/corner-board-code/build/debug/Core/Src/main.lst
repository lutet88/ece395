ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB60:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  48:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_CAN_Init(void);
  58:Core/Src/main.c **** static void MX_SPI1_Init(void);
  59:Core/Src/main.c **** static void MX_TIM3_Init(void);
  60:Core/Src/main.c **** static void MX_TIM16_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** void delay_us (uint16_t us)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
  71:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
  72:Core/Src/main.c **** }
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** uint32_t ads131m04_transfer_word(uint16_t word) {
  75:Core/Src/main.c ****   uint8_t lower = word & 0xff;
  76:Core/Src/main.c ****   uint8_t upper = word >> 8;
  77:Core/Src/main.c ****   uint8_t zero = 0;
  78:Core/Src/main.c ****   uint8_t recv[3];
  79:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
  80:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
  81:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
  82:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
  83:Core/Src/main.c **** }
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** void ads131m04_transfer_frame(uint32_t* out, uint16_t* words, uint16_t tx_rx_delay) {
  86:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
  87:Core/Src/main.c ****   
  88:Core/Src/main.c ****   for (uint8_t i = 0; i < 6; i++) {
  89:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
  90:Core/Src/main.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 3


  91:Core/Src/main.c ****   // need to wait length of one word. at 6mhz this is 4us
  92:Core/Src/main.c ****   delay_us(4);
  93:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
  94:Core/Src/main.c **** }
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** void ads131m04_cmd(uint16_t cmd, uint32_t* out, uint16_t tx_rx_delay) {
  97:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
  98:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
  99:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 100:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 101:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** uint16_t ads131m04_reset() {
 105:Core/Src/main.c ****     uint32_t recv[12];
 106:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 107:Core/Src/main.c ****     return recv[6] >> 8;
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** uint16_t ads131m04_status() {
 111:Core/Src/main.c ****     uint32_t recv[12];
 112:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 113:Core/Src/main.c ****     return recv[6] >> 8;
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** uint16_t ads131m04_standby() {
 117:Core/Src/main.c ****     uint32_t recv[12];
 118:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 119:Core/Src/main.c ****     return recv[6] >> 8;
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** uint16_t ads131m04_wake() {
 123:Core/Src/main.c ****     uint32_t recv[12];
 124:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 125:Core/Src/main.c ****     return recv[6] >> 8;
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** uint16_t ads131m04_lock() {
 129:Core/Src/main.c ****     uint32_t recv[12];
 130:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 131:Core/Src/main.c ****     return recv[6] >> 8;
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** uint16_t ads131m04_unlock() {
 135:Core/Src/main.c ****     uint32_t recv[12];
 136:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 137:Core/Src/main.c ****     return recv[6] >> 8;
 138:Core/Src/main.c **** }
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** // returns register value
 141:Core/Src/main.c **** uint16_t ads131m04_rreg(uint8_t reg) {
 142:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 143:Core/Src/main.c ****     uint32_t recv[12];
 144:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 145:Core/Src/main.c ****     return recv[6] >> 8;
 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 4


 148:Core/Src/main.c **** // read multiple registers
 149:Core/Src/main.c **** // returns read acknowledgement in out[0]
 150:Core/Src/main.c **** // returns register i in out[1+i]
 151:Core/Src/main.c **** void ads131m04_rreg_multiple(uint8_t start_reg, uint8_t count, uint32_t* out) {
 152:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 153:Core/Src/main.c ****   if (count == 0) return;
 154:Core/Src/main.c ****   if (count == 1) {
 155:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 156:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 157:Core/Src/main.c ****     out[7] = out[6];
 158:Core/Src/main.c ****     return;
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   // write first frame asking to read
 162:Core/Src/main.c ****   uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 163:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 164:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   // manually transfer the second frame
 167:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 168:Core/Src/main.c ****   
 169:Core/Src/main.c ****   // write min(6, count + 2) zero words
 170:Core/Src/main.c ****   uint8_t max = (count < 4) ? 6 : (count + 2);
 171:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 172:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 176:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** // returns write acknowledgement
 180:Core/Src/main.c **** uint16_t ads131m04_wreg(uint8_t reg, uint16_t data) {
 181:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 182:Core/Src/main.c ****   uint32_t recv[12];
 183:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 184:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 185:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 186:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 187:Core/Src/main.c ****   return recv[6] >> 8;
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** // returns write acknowledgement
 191:Core/Src/main.c **** uint16_t ads131m04_wreg_multiple(uint8_t start_reg, uint8_t count, uint16_t* data) {
 192:Core/Src/main.c ****   if (count == 0) return 0;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((start_reg & 0x3F) << 7) | ((count - 1) & 0x7F);
 195:Core/Src/main.c ****   // manually transfer the first frame
 196:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   // write the command
 199:Core/Src/main.c ****   ads131m04_transfer_word(cmd);
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   // write all registers to write
 202:Core/Src/main.c ****   for (uint8_t i = 0; i < count; i++) {
 203:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 204:Core/Src/main.c ****   }
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   // pad if not written enough (need to have written at least 6 words)
 207:Core/Src/main.c ****   for (int8_t i = 0; i < 4 - count; i++) {
 208:Core/Src/main.c ****     ads131m04_transfer_word(0);
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   // write one zero word
 212:Core/Src/main.c ****   ads131m04_transfer_word(0);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   delay_us(4); // need to wait length of one word. at 6mhz this is 4us
 215:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   // transfer the second frame to get the write acknowledgement
 218:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 219:Core/Src/main.c ****   uint32_t recv[12];
 220:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 221:Core/Src/main.c ****   return recv[6] >> 8;  
 222:Core/Src/main.c **** }
 223:Core/Src/main.c **** /* USER CODE END 0 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****   * @brief  The application entry point.
 227:Core/Src/main.c ****   * @retval int
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c **** int main(void)
 230:Core/Src/main.c **** {
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END 1 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 239:Core/Src/main.c ****   HAL_Init();
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END Init */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* Configure the system clock */
 246:Core/Src/main.c ****   SystemClock_Config();
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END SysInit */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* Initialize all configured peripherals */
 253:Core/Src/main.c ****   MX_GPIO_Init();
 254:Core/Src/main.c ****   MX_CAN_Init();
 255:Core/Src/main.c ****   MX_SPI1_Init();
 256:Core/Src/main.c ****   MX_TIM3_Init();
 257:Core/Src/main.c ****   MX_TIM16_Init();
 258:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 259:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 260:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 261:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   uint32_t registers[64];
 264:Core/Src/main.c ****   for (int i = 0; i < 64; i++) registers[i] = 0;
 265:Core/Src/main.c ****   /* USER CODE END 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* Infinite loop */
 268:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   ads131m04_reset();
 271:Core/Src/main.c ****   while (1)
 272:Core/Src/main.c ****   {
 273:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 274:Core/Src/main.c ****     HAL_Delay(1);
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     // ads131m04_reset();
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****     HAL_Delay(1);
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****     // status = ads131m04_status();
 281:Core/Src/main.c ****     //ads131m04_lock();
 282:Core/Src/main.c ****     //ads131m04_unlock();
 283:Core/Src/main.c ****     //
 284:Core/Src/main.c ****     ads131m04_wake();
 285:Core/Src/main.c ****     HAL_Delay(1);
 286:Core/Src/main.c ****     ads131m04_standby();
 287:Core/Src/main.c ****     HAL_Delay(1);
 288:Core/Src/main.c ****     ads131m04_wake();
 289:Core/Src/main.c ****     HAL_Delay(1);
 290:Core/Src/main.c ****     ads131m04_rreg_multiple(0x00, 28, registers);
 291:Core/Src/main.c ****     HAL_Delay(1);
 292:Core/Src/main.c ****     ads131m04_wreg(0x06, 0x0602);
 293:Core/Src/main.c ****     HAL_Delay(1);
 294:Core/Src/main.c ****     registers[0x07] = ads131m04_rreg(0x06);
 295:Core/Src/main.c ****     HAL_Delay(1);
 296:Core/Src/main.c ****     uint16_t towrite[2] = {0x0513, 0x0f0e};
 297:Core/Src/main.c ****     ads131m04_wreg_multiple(0x02, 2, towrite);
 298:Core/Src/main.c ****     // HAL_Delay(id | status | mode | clock | gain | cfg); // no optimization >:(((
 299:Core/Src/main.c ****     /* USER CODE END WHILE */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c ****   /* USER CODE END 3 */
 304:Core/Src/main.c **** }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /**
 307:Core/Src/main.c ****   * @brief System Clock Configuration
 308:Core/Src/main.c ****   * @retval None
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c **** void SystemClock_Config(void)
 311:Core/Src/main.c **** {
 312:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 313:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 316:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 317:Core/Src/main.c ****   */
 318:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 7


 319:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 320:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 325:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 331:Core/Src/main.c ****   */
 332:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 333:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 334:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 335:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 339:Core/Src/main.c ****   {
 340:Core/Src/main.c ****     Error_Handler();
 341:Core/Src/main.c ****   }
 342:Core/Src/main.c **** }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /**
 345:Core/Src/main.c ****   * @brief CAN Initialization Function
 346:Core/Src/main.c ****   * @param None
 347:Core/Src/main.c ****   * @retval None
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c **** static void MX_CAN_Init(void)
 350:Core/Src/main.c **** {
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
 359:Core/Src/main.c ****   hcan.Instance = CAN;
 360:Core/Src/main.c ****   hcan.Init.Prescaler = 32;
 361:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 362:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 363:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 364:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 365:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 366:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 367:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 368:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 369:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 370:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 371:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 8


 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** }
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /**
 382:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 383:Core/Src/main.c ****   * @param None
 384:Core/Src/main.c ****   * @retval None
 385:Core/Src/main.c ****   */
 386:Core/Src/main.c **** static void MX_SPI1_Init(void)
 387:Core/Src/main.c **** {
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 396:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 397:Core/Src/main.c ****   hspi1.Instance = SPI1;
 398:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 399:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 400:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 401:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 402:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 403:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 404:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 405:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 406:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 407:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 408:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 409:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 410:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 411:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     Error_Handler();
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** }
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /**
 422:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 423:Core/Src/main.c ****   * @param None
 424:Core/Src/main.c ****   * @retval None
 425:Core/Src/main.c ****   */
 426:Core/Src/main.c **** static void MX_TIM3_Init(void)
 427:Core/Src/main.c **** {
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 432:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 9


 433:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 434:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 435:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 440:Core/Src/main.c ****   htim3.Instance = TIM3;
 441:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 442:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 443:Core/Src/main.c ****   htim3.Init.Period = 7;
 444:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 445:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 446:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 451:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 452:Core/Src/main.c ****   {
 453:Core/Src/main.c ****     Error_Handler();
 454:Core/Src/main.c ****   }
 455:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 460:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 461:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 462:Core/Src/main.c ****   {
 463:Core/Src/main.c ****     Error_Handler();
 464:Core/Src/main.c ****   }
 465:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 466:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 467:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 468:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 469:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     Error_Handler();
 472:Core/Src/main.c ****   }
 473:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 476:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** }
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** /**
 481:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 482:Core/Src/main.c ****   * @param None
 483:Core/Src/main.c ****   * @retval None
 484:Core/Src/main.c ****   */
 485:Core/Src/main.c **** static void MX_TIM16_Init(void)
 486:Core/Src/main.c **** {
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 489:Core/Src/main.c **** 
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 10


 490:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 495:Core/Src/main.c ****   htim16.Instance = TIM16;
 496:Core/Src/main.c ****   htim16.Init.Prescaler = 48;
 497:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 498:Core/Src/main.c ****   htim16.Init.Period = 65535;
 499:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 500:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 501:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 502:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 503:Core/Src/main.c ****   {
 504:Core/Src/main.c ****     Error_Handler();
 505:Core/Src/main.c ****   }
 506:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** }
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** /**
 513:Core/Src/main.c ****   * @brief GPIO Initialization Function
 514:Core/Src/main.c ****   * @param None
 515:Core/Src/main.c ****   * @retval None
 516:Core/Src/main.c ****   */
 517:Core/Src/main.c **** static void MX_GPIO_Init(void)
 518:Core/Src/main.c **** {
  26              		.loc 1 518 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              		.cfi_def_cfa_offset 56
 519:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 519 3 view .LVU1
  40              		.loc 1 519 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 520:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 521:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 524:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  46              		.loc 1 524 3 is_stmt 1 view .LVU3
  47              	.LBB4:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 11


  48              		.loc 1 524 3 view .LVU4
  49              		.loc 1 524 3 view .LVU5
  50 000e 2C4B     		ldr	r3, .L2
  51 0010 5A69     		ldr	r2, [r3, #20]
  52 0012 8021     		movs	r1, #128
  53 0014 C903     		lsls	r1, r1, #15
  54 0016 0A43     		orrs	r2, r1
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 524 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0A40     		ands	r2, r1
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 524 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 524 3 view .LVU8
 525:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 525 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 525 3 view .LVU10
  67              		.loc 1 525 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 8902     		lsls	r1, r1, #10
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 525 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 0A40     		ands	r2, r1
  76 0030 0192     		str	r2, [sp, #4]
  77              		.loc 1 525 3 view .LVU13
  78 0032 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 525 3 view .LVU14
 526:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 526 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 526 3 view .LVU16
  84              		.loc 1 526 3 view .LVU17
  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 8021     		movs	r1, #128
  87 0038 C902     		lsls	r1, r1, #11
  88 003a 0A43     		orrs	r2, r1
  89 003c 5A61     		str	r2, [r3, #20]
  90              		.loc 1 526 3 view .LVU18
  91 003e 5B69     		ldr	r3, [r3, #20]
  92 0040 0B40     		ands	r3, r1
  93 0042 0293     		str	r3, [sp, #8]
  94              		.loc 1 526 3 view .LVU19
  95 0044 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 526 3 view .LVU20
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 529:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  98              		.loc 1 529 3 view .LVU21
  99 0046 1F4F     		ldr	r7, .L2+4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 12


 100 0048 0022     		movs	r2, #0
 101 004a 0121     		movs	r1, #1
 102 004c 3800     		movs	r0, r7
 103 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL1:
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 532:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, GPIO_PIN_RESET);
 105              		.loc 1 532 3 view .LVU22
 106 0052 9026     		movs	r6, #144
 107 0054 F605     		lsls	r6, r6, #23
 108 0056 0022     		movs	r2, #0
 109 0058 1021     		movs	r1, #16
 110 005a 3000     		movs	r0, r6
 111 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL2:
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 535:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 113              		.loc 1 535 3 view .LVU23
 114              		.loc 1 535 23 is_stmt 0 view .LVU24
 115 0060 0125     		movs	r5, #1
 116 0062 0395     		str	r5, [sp, #12]
 536:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 536 3 is_stmt 1 view .LVU25
 118              		.loc 1 536 24 is_stmt 0 view .LVU26
 119 0064 0495     		str	r5, [sp, #16]
 537:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 537 3 is_stmt 1 view .LVU27
 121              		.loc 1 537 24 is_stmt 0 view .LVU28
 122 0066 0024     		movs	r4, #0
 123 0068 0594     		str	r4, [sp, #20]
 538:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 538 3 is_stmt 1 view .LVU29
 125              		.loc 1 538 25 is_stmt 0 view .LVU30
 126 006a 0694     		str	r4, [sp, #24]
 539:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 127              		.loc 1 539 3 is_stmt 1 view .LVU31
 128 006c 03A9     		add	r1, sp, #12
 129 006e 3800     		movs	r0, r7
 130 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /*Configure GPIO pin : A3_Pin */
 542:Core/Src/main.c ****   GPIO_InitStruct.Pin = A3_Pin;
 132              		.loc 1 542 3 view .LVU32
 133              		.loc 1 542 23 is_stmt 0 view .LVU33
 134 0074 0223     		movs	r3, #2
 135 0076 0393     		str	r3, [sp, #12]
 543:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 136              		.loc 1 543 3 is_stmt 1 view .LVU34
 137              		.loc 1 543 24 is_stmt 0 view .LVU35
 138 0078 0494     		str	r4, [sp, #16]
 544:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 139              		.loc 1 544 3 is_stmt 1 view .LVU36
 140              		.loc 1 544 24 is_stmt 0 view .LVU37
 141 007a 0595     		str	r5, [sp, #20]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 13


 545:Core/Src/main.c ****   HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 545 3 is_stmt 1 view .LVU38
 143 007c 03A9     		add	r1, sp, #12
 144 007e 3800     		movs	r0, r7
 145 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /*Configure GPIO pins : A2_Pin A1_Pin A0_Pin */
 548:Core/Src/main.c ****   GPIO_InitStruct.Pin = A2_Pin|A1_Pin|A0_Pin;
 147              		.loc 1 548 3 view .LVU39
 148              		.loc 1 548 23 is_stmt 0 view .LVU40
 149 0084 0723     		movs	r3, #7
 150 0086 0393     		str	r3, [sp, #12]
 549:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 151              		.loc 1 549 3 is_stmt 1 view .LVU41
 152              		.loc 1 549 24 is_stmt 0 view .LVU42
 153 0088 0494     		str	r4, [sp, #16]
 550:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 154              		.loc 1 550 3 is_stmt 1 view .LVU43
 155              		.loc 1 550 24 is_stmt 0 view .LVU44
 156 008a 0595     		str	r5, [sp, #20]
 551:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157              		.loc 1 551 3 is_stmt 1 view .LVU45
 158 008c 03A9     		add	r1, sp, #12
 159 008e 3000     		movs	r0, r6
 160 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /*Configure GPIO pin : DRDY_Pin */
 554:Core/Src/main.c ****   GPIO_InitStruct.Pin = DRDY_Pin;
 162              		.loc 1 554 3 view .LVU46
 163              		.loc 1 554 23 is_stmt 0 view .LVU47
 164 0094 0823     		movs	r3, #8
 165 0096 0393     		str	r3, [sp, #12]
 555:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 166              		.loc 1 555 3 is_stmt 1 view .LVU48
 167              		.loc 1 555 24 is_stmt 0 view .LVU49
 168 0098 8823     		movs	r3, #136
 169 009a 5B03     		lsls	r3, r3, #13
 170 009c 0493     		str	r3, [sp, #16]
 556:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 556 3 is_stmt 1 view .LVU50
 172              		.loc 1 556 24 is_stmt 0 view .LVU51
 173 009e 0594     		str	r4, [sp, #20]
 557:Core/Src/main.c ****   HAL_GPIO_Init(DRDY_GPIO_Port, &GPIO_InitStruct);
 174              		.loc 1 557 3 is_stmt 1 view .LVU52
 175 00a0 03A9     		add	r1, sp, #12
 176 00a2 3000     		movs	r0, r6
 177 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL6:
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /*Configure GPIO pin : CS_Pin */
 560:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_Pin;
 179              		.loc 1 560 3 view .LVU53
 180              		.loc 1 560 23 is_stmt 0 view .LVU54
 181 00a8 1023     		movs	r3, #16
 182 00aa 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 14


 561:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 561 3 is_stmt 1 view .LVU55
 184              		.loc 1 561 24 is_stmt 0 view .LVU56
 185 00ac 0495     		str	r5, [sp, #16]
 562:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 562 3 is_stmt 1 view .LVU57
 187              		.loc 1 562 24 is_stmt 0 view .LVU58
 188 00ae 0594     		str	r4, [sp, #20]
 563:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 563 3 is_stmt 1 view .LVU59
 190              		.loc 1 563 25 is_stmt 0 view .LVU60
 191 00b0 0694     		str	r4, [sp, #24]
 564:Core/Src/main.c ****   HAL_GPIO_Init(CS_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 564 3 is_stmt 1 view .LVU61
 193 00b2 03A9     		add	r1, sp, #12
 194 00b4 3000     		movs	r0, r6
 195 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL7:
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 567:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 568:Core/Src/main.c **** }
 197              		.loc 1 568 1 is_stmt 0 view .LVU62
 198 00ba 09B0     		add	sp, sp, #36
 199              		@ sp needed
 200 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 201              	.L3:
 202 00be C046     		.align	2
 203              	.L2:
 204 00c0 00100240 		.word	1073876992
 205 00c4 00140048 		.word	1207964672
 206              		.cfi_endproc
 207              	.LFE60:
 209              		.section	.text.delay_us,"ax",%progbits
 210              		.align	1
 211              		.global	delay_us
 212              		.syntax unified
 213              		.code	16
 214              		.thumb_func
 216              	delay_us:
 217              	.LVL8:
 218              	.LFB40:
  69:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim16,0);  
 219              		.loc 1 69 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
  70:Core/Src/main.c **** 	while (__HAL_TIM_GET_COUNTER(&htim16) < us);  
 224              		.loc 1 70 2 view .LVU64
 225 0000 034B     		ldr	r3, .L6
 226 0002 1A68     		ldr	r2, [r3]
 227 0004 0023     		movs	r3, #0
 228 0006 5362     		str	r3, [r2, #36]
  71:Core/Src/main.c **** }
 229              		.loc 1 71 2 view .LVU65
 230              	.L5:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 15


  71:Core/Src/main.c **** }
 231              		.loc 1 71 40 discriminator 1 view .LVU66
  71:Core/Src/main.c **** }
 232              		.loc 1 71 9 is_stmt 0 discriminator 1 view .LVU67
 233 0008 536A     		ldr	r3, [r2, #36]
  71:Core/Src/main.c **** }
 234              		.loc 1 71 40 discriminator 1 view .LVU68
 235 000a 8342     		cmp	r3, r0
 236 000c FCD3     		bcc	.L5
  72:Core/Src/main.c **** 
 237              		.loc 1 72 1 view .LVU69
 238              		@ sp needed
 239 000e 7047     		bx	lr
 240              	.L7:
 241              		.align	2
 242              	.L6:
 243 0010 00000000 		.word	htim16
 244              		.cfi_endproc
 245              	.LFE40:
 247              		.section	.text.ads131m04_transfer_word,"ax",%progbits
 248              		.align	1
 249              		.global	ads131m04_transfer_word
 250              		.syntax unified
 251              		.code	16
 252              		.thumb_func
 254              	ads131m04_transfer_word:
 255              	.LVL9:
 256              	.LFB41:
  74:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 257              		.loc 1 74 49 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 0, uses_anonymous_args = 0
  74:Core/Src/main.c ****   uint8_t lower = word & 0xff;
 261              		.loc 1 74 49 is_stmt 0 view .LVU71
 262 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 263              		.cfi_def_cfa_offset 20
 264              		.cfi_offset 4, -20
 265              		.cfi_offset 5, -16
 266              		.cfi_offset 6, -12
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 C646     		mov	lr, r8
 270 0004 00B5     		push	{lr}
 271              		.cfi_def_cfa_offset 24
 272              		.cfi_offset 8, -24
 273 0006 84B0     		sub	sp, sp, #16
 274              		.cfi_def_cfa_offset 40
  75:Core/Src/main.c ****   uint8_t upper = word >> 8;
 275              		.loc 1 75 3 is_stmt 1 view .LVU72
  75:Core/Src/main.c ****   uint8_t upper = word >> 8;
 276              		.loc 1 75 11 is_stmt 0 view .LVU73
 277 0008 0F23     		movs	r3, #15
 278 000a 6B44     		add	r3, r3, sp
 279 000c 9846     		mov	r8, r3
 280 000e 1870     		strb	r0, [r3]
  76:Core/Src/main.c ****   uint8_t zero = 0;
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 16


 281              		.loc 1 76 3 is_stmt 1 view .LVU74
  76:Core/Src/main.c ****   uint8_t zero = 0;
 282              		.loc 1 76 11 is_stmt 0 view .LVU75
 283 0010 0E21     		movs	r1, #14
 284 0012 6944     		add	r1, r1, sp
 285 0014 000A     		lsrs	r0, r0, #8
 286              	.LVL10:
  76:Core/Src/main.c ****   uint8_t zero = 0;
 287              		.loc 1 76 11 view .LVU76
 288 0016 0870     		strb	r0, [r1]
  77:Core/Src/main.c ****   uint8_t recv[3];
 289              		.loc 1 77 3 is_stmt 1 view .LVU77
  77:Core/Src/main.c ****   uint8_t recv[3];
 290              		.loc 1 77 11 is_stmt 0 view .LVU78
 291 0018 0D27     		movs	r7, #13
 292 001a 6F44     		add	r7, r7, sp
 293 001c 0026     		movs	r6, #0
 294 001e 3E70     		strb	r6, [r7]
  78:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &upper, recv, 1, 0.1); // CMD
 295              		.loc 1 78 3 is_stmt 1 view .LVU79
  79:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &lower, recv+1, 1, 0.1);
 296              		.loc 1 79 3 view .LVU80
 297 0020 02AC     		add	r4, sp, #8
 298 0022 114D     		ldr	r5, .L9
 299 0024 0096     		str	r6, [sp]
 300 0026 0123     		movs	r3, #1
 301 0028 2200     		movs	r2, r4
 302 002a 2800     		movs	r0, r5
 303 002c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 304              	.LVL11:
  80:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi1, &zero, recv+2, 1, 0.1);
 305              		.loc 1 80 3 view .LVU81
 306 0030 0096     		str	r6, [sp]
 307 0032 0123     		movs	r3, #1
 308 0034 0922     		movs	r2, #9
 309 0036 6A44     		add	r2, r2, sp
 310 0038 4146     		mov	r1, r8
 311 003a 2800     		movs	r0, r5
 312 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 313              	.LVL12:
  81:Core/Src/main.c ****   return (recv[0] << 16) | (recv[1] << 8) | recv[2];
 314              		.loc 1 81 3 view .LVU82
 315 0040 0096     		str	r6, [sp]
 316 0042 0123     		movs	r3, #1
 317 0044 0A22     		movs	r2, #10
 318 0046 6A44     		add	r2, r2, sp
 319 0048 3900     		movs	r1, r7
 320 004a 2800     		movs	r0, r5
 321 004c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 322              	.LVL13:
  82:Core/Src/main.c **** }
 323              		.loc 1 82 3 view .LVU83
  82:Core/Src/main.c **** }
 324              		.loc 1 82 15 is_stmt 0 view .LVU84
 325 0050 2078     		ldrb	r0, [r4]
  82:Core/Src/main.c **** }
 326              		.loc 1 82 19 view .LVU85
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 17


 327 0052 0004     		lsls	r0, r0, #16
  82:Core/Src/main.c **** }
 328              		.loc 1 82 33 view .LVU86
 329 0054 6378     		ldrb	r3, [r4, #1]
  82:Core/Src/main.c **** }
 330              		.loc 1 82 37 view .LVU87
 331 0056 1B02     		lsls	r3, r3, #8
  82:Core/Src/main.c **** }
 332              		.loc 1 82 26 view .LVU88
 333 0058 1843     		orrs	r0, r3
  82:Core/Src/main.c **** }
 334              		.loc 1 82 49 view .LVU89
 335 005a A378     		ldrb	r3, [r4, #2]
  82:Core/Src/main.c **** }
 336              		.loc 1 82 43 view .LVU90
 337 005c 1843     		orrs	r0, r3
  83:Core/Src/main.c **** 
 338              		.loc 1 83 1 view .LVU91
 339 005e 04B0     		add	sp, sp, #16
 340              		@ sp needed
 341 0060 80BC     		pop	{r7}
 342 0062 B846     		mov	r8, r7
 343 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 344              	.L10:
 345 0066 C046     		.align	2
 346              	.L9:
 347 0068 00000000 		.word	hspi1
 348              		.cfi_endproc
 349              	.LFE41:
 351              		.section	.text.ads131m04_transfer_frame,"ax",%progbits
 352              		.align	1
 353              		.global	ads131m04_transfer_frame
 354              		.syntax unified
 355              		.code	16
 356              		.thumb_func
 358              	ads131m04_transfer_frame:
 359              	.LVL14:
 360              	.LFB42:
  85:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 361              		.loc 1 85 85 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
  85:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 0);
 365              		.loc 1 85 85 is_stmt 0 view .LVU93
 366 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 367              		.cfi_def_cfa_offset 24
 368              		.cfi_offset 3, -24
 369              		.cfi_offset 4, -20
 370              		.cfi_offset 5, -16
 371              		.cfi_offset 6, -12
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 0700     		movs	r7, r0
 375 0004 0E00     		movs	r6, r1
  86:Core/Src/main.c ****   
 376              		.loc 1 86 3 is_stmt 1 view .LVU94
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 18


 377 0006 9020     		movs	r0, #144
 378              	.LVL15:
  86:Core/Src/main.c ****   
 379              		.loc 1 86 3 is_stmt 0 view .LVU95
 380 0008 0022     		movs	r2, #0
 381              	.LVL16:
  86:Core/Src/main.c ****   
 382              		.loc 1 86 3 view .LVU96
 383 000a 1021     		movs	r1, #16
 384              	.LVL17:
  86:Core/Src/main.c ****   
 385              		.loc 1 86 3 view .LVU97
 386 000c C005     		lsls	r0, r0, #23
 387 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 388              	.LVL18:
  88:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 389              		.loc 1 88 3 is_stmt 1 view .LVU98
 390              	.LBB7:
  88:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 391              		.loc 1 88 8 view .LVU99
  88:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 392              		.loc 1 88 16 is_stmt 0 view .LVU100
 393 0012 0024     		movs	r4, #0
  88:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 394              		.loc 1 88 3 view .LVU101
 395 0014 08E0     		b	.L12
 396              	.LVL19:
 397              	.L13:
  89:Core/Src/main.c ****   }
 398              		.loc 1 89 5 is_stmt 1 discriminator 3 view .LVU102
  89:Core/Src/main.c ****   }
 399              		.loc 1 89 43 is_stmt 0 discriminator 3 view .LVU103
 400 0016 6300     		lsls	r3, r4, #1
  89:Core/Src/main.c ****   }
 401              		.loc 1 89 8 discriminator 3 view .LVU104
 402 0018 A500     		lsls	r5, r4, #2
 403 001a 7D19     		adds	r5, r7, r5
  89:Core/Src/main.c ****   }
 404              		.loc 1 89 14 discriminator 3 view .LVU105
 405 001c F05A     		ldrh	r0, [r6, r3]
 406 001e FFF7FEFF 		bl	ads131m04_transfer_word
 407              	.LVL20:
  89:Core/Src/main.c ****   }
 408              		.loc 1 89 12 discriminator 3 view .LVU106
 409 0022 2860     		str	r0, [r5]
  88:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 410              		.loc 1 88 31 is_stmt 1 discriminator 3 view .LVU107
 411 0024 0134     		adds	r4, r4, #1
 412              	.LVL21:
  88:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 413              		.loc 1 88 31 is_stmt 0 discriminator 3 view .LVU108
 414 0026 E4B2     		uxtb	r4, r4
 415              	.LVL22:
 416              	.L12:
  88:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(words[i]);
 417              		.loc 1 88 25 is_stmt 1 discriminator 1 view .LVU109
 418 0028 052C     		cmp	r4, #5
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 19


 419 002a F4D9     		bls	.L13
 420              	.LBE7:
  92:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 421              		.loc 1 92 3 view .LVU110
 422 002c 0420     		movs	r0, #4
 423 002e FFF7FEFF 		bl	delay_us
 424              	.LVL23:
  93:Core/Src/main.c **** }
 425              		.loc 1 93 3 view .LVU111
 426 0032 9020     		movs	r0, #144
 427 0034 0122     		movs	r2, #1
 428 0036 1021     		movs	r1, #16
 429 0038 C005     		lsls	r0, r0, #23
 430 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 431              	.LVL24:
  94:Core/Src/main.c **** 
 432              		.loc 1 94 1 is_stmt 0 view .LVU112
 433              		@ sp needed
 434              	.LVL25:
 435              	.LVL26:
 436              	.LVL27:
  94:Core/Src/main.c **** 
 437              		.loc 1 94 1 view .LVU113
 438 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 439              		.cfi_endproc
 440              	.LFE42:
 442              		.section	.text.ads131m04_cmd,"ax",%progbits
 443              		.align	1
 444              		.global	ads131m04_cmd
 445              		.syntax unified
 446              		.code	16
 447              		.thumb_func
 449              	ads131m04_cmd:
 450              	.LVL28:
 451              	.LFB43:
  96:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 452              		.loc 1 96 71 is_stmt 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 24
 455              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 456              		.loc 1 96 71 is_stmt 0 view .LVU115
 457 0000 70B5     		push	{r4, r5, r6, lr}
 458              		.cfi_def_cfa_offset 16
 459              		.cfi_offset 4, -16
 460              		.cfi_offset 5, -12
 461              		.cfi_offset 6, -8
 462              		.cfi_offset 14, -4
 463 0002 86B0     		sub	sp, sp, #24
 464              		.cfi_def_cfa_offset 40
 465 0004 0D00     		movs	r5, r1
 466 0006 1600     		movs	r6, r2
  97:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 467              		.loc 1 97 3 is_stmt 1 view .LVU116
  97:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 468              		.loc 1 97 12 is_stmt 0 view .LVU117
 469 0008 03AC     		add	r4, sp, #12
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 20


 470 000a 2080     		strh	r0, [r4]
 471 000c 0023     		movs	r3, #0
 472 000e 6380     		strh	r3, [r4, #2]
 473 0010 A380     		strh	r3, [r4, #4]
 474 0012 E380     		strh	r3, [r4, #6]
 475 0014 2381     		strh	r3, [r4, #8]
 476 0016 6381     		strh	r3, [r4, #10]
  98:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 477              		.loc 1 98 3 is_stmt 1 view .LVU118
  98:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 478              		.loc 1 98 12 is_stmt 0 view .LVU119
 479 0018 0C22     		movs	r2, #12
 480              	.LVL29:
  98:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 481              		.loc 1 98 12 view .LVU120
 482 001a 0021     		movs	r1, #0
 483              	.LVL30:
  98:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 484              		.loc 1 98 12 view .LVU121
 485 001c 6846     		mov	r0, sp
 486              	.LVL31:
  98:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, tx_rx_delay);
 487              		.loc 1 98 12 view .LVU122
 488 001e FFF7FEFF 		bl	memset
 489              	.LVL32:
  99:Core/Src/main.c ****   ads131m04_transfer_frame(out+6, zeros, 0);
 490              		.loc 1 99 3 is_stmt 1 view .LVU123
 491 0022 3200     		movs	r2, r6
 492 0024 2100     		movs	r1, r4
 493 0026 2800     		movs	r0, r5
 494 0028 FFF7FEFF 		bl	ads131m04_transfer_frame
 495              	.LVL33:
 100:Core/Src/main.c ****   if (tx_rx_delay) delay_us(tx_rx_delay); 
 496              		.loc 1 100 3 view .LVU124
 497 002c 2800     		movs	r0, r5
 498 002e 1830     		adds	r0, r0, #24
 499 0030 0022     		movs	r2, #0
 500 0032 6946     		mov	r1, sp
 501 0034 FFF7FEFF 		bl	ads131m04_transfer_frame
 502              	.LVL34:
 101:Core/Src/main.c **** }
 503              		.loc 1 101 3 view .LVU125
 101:Core/Src/main.c **** }
 504              		.loc 1 101 6 is_stmt 0 view .LVU126
 505 0038 002E     		cmp	r6, #0
 506 003a 01D1     		bne	.L16
 507              	.L14:
 102:Core/Src/main.c **** 
 508              		.loc 1 102 1 view .LVU127
 509 003c 06B0     		add	sp, sp, #24
 510              		@ sp needed
 511              	.LVL35:
 102:Core/Src/main.c **** 
 512              		.loc 1 102 1 view .LVU128
 513 003e 70BD     		pop	{r4, r5, r6, pc}
 514              	.LVL36:
 515              	.L16:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 21


 101:Core/Src/main.c **** }
 516              		.loc 1 101 20 is_stmt 1 discriminator 1 view .LVU129
 517 0040 3000     		movs	r0, r6
 518 0042 FFF7FEFF 		bl	delay_us
 519              	.LVL37:
 102:Core/Src/main.c **** 
 520              		.loc 1 102 1 is_stmt 0 discriminator 1 view .LVU130
 521 0046 F9E7     		b	.L14
 522              		.cfi_endproc
 523              	.LFE43:
 525              		.section	.text.ads131m04_reset,"ax",%progbits
 526              		.align	1
 527              		.global	ads131m04_reset
 528              		.syntax unified
 529              		.code	16
 530              		.thumb_func
 532              	ads131m04_reset:
 533              	.LFB44:
 104:Core/Src/main.c ****     uint32_t recv[12];
 534              		.loc 1 104 28 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 48
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538 0000 00B5     		push	{lr}
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 14, -4
 541 0002 8DB0     		sub	sp, sp, #52
 542              		.cfi_def_cfa_offset 56
 105:Core/Src/main.c ****     ads131m04_cmd(0x0011, recv, 12); // reset time
 543              		.loc 1 105 5 view .LVU132
 106:Core/Src/main.c ****     return recv[6] >> 8;
 544              		.loc 1 106 5 view .LVU133
 545 0004 0C22     		movs	r2, #12
 546 0006 6946     		mov	r1, sp
 547 0008 1120     		movs	r0, #17
 548 000a FFF7FEFF 		bl	ads131m04_cmd
 549              	.LVL38:
 107:Core/Src/main.c **** }
 550              		.loc 1 107 5 view .LVU134
 107:Core/Src/main.c **** }
 551              		.loc 1 107 16 is_stmt 0 view .LVU135
 552 000e 0698     		ldr	r0, [sp, #24]
 107:Core/Src/main.c **** }
 553              		.loc 1 107 20 view .LVU136
 554 0010 000A     		lsrs	r0, r0, #8
 555 0012 80B2     		uxth	r0, r0
 108:Core/Src/main.c **** 
 556              		.loc 1 108 1 view .LVU137
 557 0014 0DB0     		add	sp, sp, #52
 558              		@ sp needed
 559 0016 00BD     		pop	{pc}
 560              		.cfi_endproc
 561              	.LFE44:
 563              		.section	.text.ads131m04_status,"ax",%progbits
 564              		.align	1
 565              		.global	ads131m04_status
 566              		.syntax unified
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 22


 567              		.code	16
 568              		.thumb_func
 570              	ads131m04_status:
 571              	.LFB45:
 110:Core/Src/main.c ****     uint32_t recv[12];
 572              		.loc 1 110 29 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 48
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 00B5     		push	{lr}
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 14, -4
 579 0002 8DB0     		sub	sp, sp, #52
 580              		.cfi_def_cfa_offset 56
 111:Core/Src/main.c ****     ads131m04_cmd(0x0000, recv, 0);
 581              		.loc 1 111 5 view .LVU139
 112:Core/Src/main.c ****     return recv[6] >> 8;
 582              		.loc 1 112 5 view .LVU140
 583 0004 0022     		movs	r2, #0
 584 0006 6946     		mov	r1, sp
 585 0008 0020     		movs	r0, #0
 586 000a FFF7FEFF 		bl	ads131m04_cmd
 587              	.LVL39:
 113:Core/Src/main.c **** }
 588              		.loc 1 113 5 view .LVU141
 113:Core/Src/main.c **** }
 589              		.loc 1 113 16 is_stmt 0 view .LVU142
 590 000e 0698     		ldr	r0, [sp, #24]
 113:Core/Src/main.c **** }
 591              		.loc 1 113 20 view .LVU143
 592 0010 000A     		lsrs	r0, r0, #8
 593 0012 80B2     		uxth	r0, r0
 114:Core/Src/main.c **** 
 594              		.loc 1 114 1 view .LVU144
 595 0014 0DB0     		add	sp, sp, #52
 596              		@ sp needed
 597 0016 00BD     		pop	{pc}
 598              		.cfi_endproc
 599              	.LFE45:
 601              		.section	.text.ads131m04_standby,"ax",%progbits
 602              		.align	1
 603              		.global	ads131m04_standby
 604              		.syntax unified
 605              		.code	16
 606              		.thumb_func
 608              	ads131m04_standby:
 609              	.LFB46:
 116:Core/Src/main.c ****     uint32_t recv[12];
 610              		.loc 1 116 30 is_stmt 1 view -0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 48
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614 0000 00B5     		push	{lr}
 615              		.cfi_def_cfa_offset 4
 616              		.cfi_offset 14, -4
 617 0002 8DB0     		sub	sp, sp, #52
 618              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 23


 117:Core/Src/main.c ****     ads131m04_cmd(0x0022, recv, 0);
 619              		.loc 1 117 5 view .LVU146
 118:Core/Src/main.c ****     return recv[6] >> 8;
 620              		.loc 1 118 5 view .LVU147
 621 0004 0022     		movs	r2, #0
 622 0006 6946     		mov	r1, sp
 623 0008 2220     		movs	r0, #34
 624 000a FFF7FEFF 		bl	ads131m04_cmd
 625              	.LVL40:
 119:Core/Src/main.c **** }
 626              		.loc 1 119 5 view .LVU148
 119:Core/Src/main.c **** }
 627              		.loc 1 119 16 is_stmt 0 view .LVU149
 628 000e 0698     		ldr	r0, [sp, #24]
 119:Core/Src/main.c **** }
 629              		.loc 1 119 20 view .LVU150
 630 0010 000A     		lsrs	r0, r0, #8
 631 0012 80B2     		uxth	r0, r0
 120:Core/Src/main.c **** 
 632              		.loc 1 120 1 view .LVU151
 633 0014 0DB0     		add	sp, sp, #52
 634              		@ sp needed
 635 0016 00BD     		pop	{pc}
 636              		.cfi_endproc
 637              	.LFE46:
 639              		.section	.text.ads131m04_wake,"ax",%progbits
 640              		.align	1
 641              		.global	ads131m04_wake
 642              		.syntax unified
 643              		.code	16
 644              		.thumb_func
 646              	ads131m04_wake:
 647              	.LFB47:
 122:Core/Src/main.c ****     uint32_t recv[12];
 648              		.loc 1 122 27 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 48
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652 0000 00B5     		push	{lr}
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 14, -4
 655 0002 8DB0     		sub	sp, sp, #52
 656              		.cfi_def_cfa_offset 56
 123:Core/Src/main.c ****     ads131m04_cmd(0x0033, recv, 0);
 657              		.loc 1 123 5 view .LVU153
 124:Core/Src/main.c ****     return recv[6] >> 8;
 658              		.loc 1 124 5 view .LVU154
 659 0004 0022     		movs	r2, #0
 660 0006 6946     		mov	r1, sp
 661 0008 3320     		movs	r0, #51
 662 000a FFF7FEFF 		bl	ads131m04_cmd
 663              	.LVL41:
 125:Core/Src/main.c **** }
 664              		.loc 1 125 5 view .LVU155
 125:Core/Src/main.c **** }
 665              		.loc 1 125 16 is_stmt 0 view .LVU156
 666 000e 0698     		ldr	r0, [sp, #24]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 24


 125:Core/Src/main.c **** }
 667              		.loc 1 125 20 view .LVU157
 668 0010 000A     		lsrs	r0, r0, #8
 669 0012 80B2     		uxth	r0, r0
 126:Core/Src/main.c **** 
 670              		.loc 1 126 1 view .LVU158
 671 0014 0DB0     		add	sp, sp, #52
 672              		@ sp needed
 673 0016 00BD     		pop	{pc}
 674              		.cfi_endproc
 675              	.LFE47:
 677              		.section	.text.ads131m04_lock,"ax",%progbits
 678              		.align	1
 679              		.global	ads131m04_lock
 680              		.syntax unified
 681              		.code	16
 682              		.thumb_func
 684              	ads131m04_lock:
 685              	.LFB48:
 128:Core/Src/main.c ****     uint32_t recv[12];
 686              		.loc 1 128 27 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 48
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690 0000 00B5     		push	{lr}
 691              		.cfi_def_cfa_offset 4
 692              		.cfi_offset 14, -4
 693 0002 8DB0     		sub	sp, sp, #52
 694              		.cfi_def_cfa_offset 56
 129:Core/Src/main.c ****     ads131m04_cmd(0x0555, recv, 0);
 695              		.loc 1 129 5 view .LVU160
 130:Core/Src/main.c ****     return recv[6] >> 8;
 696              		.loc 1 130 5 view .LVU161
 697 0004 0022     		movs	r2, #0
 698 0006 6946     		mov	r1, sp
 699 0008 0348     		ldr	r0, .L22
 700 000a FFF7FEFF 		bl	ads131m04_cmd
 701              	.LVL42:
 131:Core/Src/main.c **** }
 702              		.loc 1 131 5 view .LVU162
 131:Core/Src/main.c **** }
 703              		.loc 1 131 16 is_stmt 0 view .LVU163
 704 000e 0698     		ldr	r0, [sp, #24]
 131:Core/Src/main.c **** }
 705              		.loc 1 131 20 view .LVU164
 706 0010 000A     		lsrs	r0, r0, #8
 707 0012 80B2     		uxth	r0, r0
 132:Core/Src/main.c **** 
 708              		.loc 1 132 1 view .LVU165
 709 0014 0DB0     		add	sp, sp, #52
 710              		@ sp needed
 711 0016 00BD     		pop	{pc}
 712              	.L23:
 713              		.align	2
 714              	.L22:
 715 0018 55050000 		.word	1365
 716              		.cfi_endproc
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 25


 717              	.LFE48:
 719              		.section	.text.ads131m04_unlock,"ax",%progbits
 720              		.align	1
 721              		.global	ads131m04_unlock
 722              		.syntax unified
 723              		.code	16
 724              		.thumb_func
 726              	ads131m04_unlock:
 727              	.LFB49:
 134:Core/Src/main.c ****     uint32_t recv[12];
 728              		.loc 1 134 29 is_stmt 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 48
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 0000 00B5     		push	{lr}
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 14, -4
 735 0002 8DB0     		sub	sp, sp, #52
 736              		.cfi_def_cfa_offset 56
 135:Core/Src/main.c ****     ads131m04_cmd(0x0655, recv, 0);
 737              		.loc 1 135 5 view .LVU167
 136:Core/Src/main.c ****     return recv[6] >> 8;
 738              		.loc 1 136 5 view .LVU168
 739 0004 0022     		movs	r2, #0
 740 0006 6946     		mov	r1, sp
 741 0008 0348     		ldr	r0, .L25
 742 000a FFF7FEFF 		bl	ads131m04_cmd
 743              	.LVL43:
 137:Core/Src/main.c **** }
 744              		.loc 1 137 5 view .LVU169
 137:Core/Src/main.c **** }
 745              		.loc 1 137 16 is_stmt 0 view .LVU170
 746 000e 0698     		ldr	r0, [sp, #24]
 137:Core/Src/main.c **** }
 747              		.loc 1 137 20 view .LVU171
 748 0010 000A     		lsrs	r0, r0, #8
 749 0012 80B2     		uxth	r0, r0
 138:Core/Src/main.c **** 
 750              		.loc 1 138 1 view .LVU172
 751 0014 0DB0     		add	sp, sp, #52
 752              		@ sp needed
 753 0016 00BD     		pop	{pc}
 754              	.L26:
 755              		.align	2
 756              	.L25:
 757 0018 55060000 		.word	1621
 758              		.cfi_endproc
 759              	.LFE49:
 761              		.section	.text.ads131m04_rreg,"ax",%progbits
 762              		.align	1
 763              		.global	ads131m04_rreg
 764              		.syntax unified
 765              		.code	16
 766              		.thumb_func
 768              	ads131m04_rreg:
 769              	.LVL44:
 770              	.LFB50:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 26


 141:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 771              		.loc 1 141 38 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 48
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 141:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((reg & 0x3F) << 7);
 775              		.loc 1 141 38 is_stmt 0 view .LVU174
 776 0000 00B5     		push	{lr}
 777              		.cfi_def_cfa_offset 4
 778              		.cfi_offset 14, -4
 779 0002 8DB0     		sub	sp, sp, #52
 780              		.cfi_def_cfa_offset 56
 142:Core/Src/main.c ****     uint32_t recv[12];
 781              		.loc 1 142 5 is_stmt 1 view .LVU175
 142:Core/Src/main.c ****     uint32_t recv[12];
 782              		.loc 1 142 43 is_stmt 0 view .LVU176
 783 0004 C301     		lsls	r3, r0, #7
 784 0006 FC22     		movs	r2, #252
 785 0008 5201     		lsls	r2, r2, #5
 786 000a 1340     		ands	r3, r2
 142:Core/Src/main.c ****     uint32_t recv[12];
 787              		.loc 1 142 27 view .LVU177
 788 000c 0548     		ldr	r0, .L28
 789              	.LVL45:
 142:Core/Src/main.c ****     uint32_t recv[12];
 790              		.loc 1 142 27 view .LVU178
 791 000e 1843     		orrs	r0, r3
 142:Core/Src/main.c ****     uint32_t recv[12];
 792              		.loc 1 142 14 view .LVU179
 793 0010 80B2     		uxth	r0, r0
 794              	.LVL46:
 143:Core/Src/main.c ****     ads131m04_cmd(cmd, recv, 0);
 795              		.loc 1 143 5 is_stmt 1 view .LVU180
 144:Core/Src/main.c ****     return recv[6] >> 8;
 796              		.loc 1 144 5 view .LVU181
 797 0012 0022     		movs	r2, #0
 798 0014 6946     		mov	r1, sp
 799 0016 FFF7FEFF 		bl	ads131m04_cmd
 800              	.LVL47:
 145:Core/Src/main.c **** }
 801              		.loc 1 145 5 view .LVU182
 145:Core/Src/main.c **** }
 802              		.loc 1 145 16 is_stmt 0 view .LVU183
 803 001a 0698     		ldr	r0, [sp, #24]
 145:Core/Src/main.c **** }
 804              		.loc 1 145 20 view .LVU184
 805 001c 000A     		lsrs	r0, r0, #8
 806 001e 80B2     		uxth	r0, r0
 146:Core/Src/main.c **** 
 807              		.loc 1 146 1 view .LVU185
 808 0020 0DB0     		add	sp, sp, #52
 809              		@ sp needed
 810 0022 00BD     		pop	{pc}
 811              	.L29:
 812              		.align	2
 813              	.L28:
 814 0024 00A0FFFF 		.word	-24576
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 27


 815              		.cfi_endproc
 816              	.LFE50:
 818              		.section	.text.ads131m04_rreg_multiple,"ax",%progbits
 819              		.align	1
 820              		.global	ads131m04_rreg_multiple
 821              		.syntax unified
 822              		.code	16
 823              		.thumb_func
 825              	ads131m04_rreg_multiple:
 826              	.LVL48:
 827              	.LFB51:
 151:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 828              		.loc 1 151 79 is_stmt 1 view -0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 16
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Core/Src/main.c ****   // if count is 1 then just use regular rreg and duplicate out[6] to out[7]
 832              		.loc 1 151 79 is_stmt 0 view .LVU187
 833 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 834              		.cfi_def_cfa_offset 20
 835              		.cfi_offset 4, -20
 836              		.cfi_offset 5, -16
 837              		.cfi_offset 6, -12
 838              		.cfi_offset 7, -8
 839              		.cfi_offset 14, -4
 840 0002 85B0     		sub	sp, sp, #20
 841              		.cfi_def_cfa_offset 40
 842 0004 0C00     		movs	r4, r1
 843 0006 1600     		movs	r6, r2
 153:Core/Src/main.c ****   if (count == 1) {
 844              		.loc 1 153 3 is_stmt 1 view .LVU188
 153:Core/Src/main.c ****   if (count == 1) {
 845              		.loc 1 153 6 is_stmt 0 view .LVU189
 846 0008 0029     		cmp	r1, #0
 847 000a 46D0     		beq	.L30
 154:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 848              		.loc 1 154 3 is_stmt 1 view .LVU190
 154:Core/Src/main.c ****     uint16_t cmd = 0xA000 | ((start_reg & 0x3F) << 7);
 849              		.loc 1 154 6 is_stmt 0 view .LVU191
 850 000c 0129     		cmp	r1, #1
 851 000e 23D0     		beq	.L37
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 852              		.loc 1 162 3 is_stmt 1 view .LVU192
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 853              		.loc 1 162 47 is_stmt 0 view .LVU193
 854 0010 C001     		lsls	r0, r0, #7
 855              	.LVL49:
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 856              		.loc 1 162 47 view .LVU194
 857 0012 FC23     		movs	r3, #252
 858 0014 5B01     		lsls	r3, r3, #5
 859 0016 1840     		ands	r0, r3
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 860              		.loc 1 162 25 view .LVU195
 861 0018 214A     		ldr	r2, .L38
 862              	.LVL50:
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 28


 863              		.loc 1 162 25 view .LVU196
 864 001a 0243     		orrs	r2, r0
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 865              		.loc 1 162 63 view .LVU197
 866 001c 4B1E     		subs	r3, r1, #1
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 867              		.loc 1 162 12 view .LVU198
 868 001e 7F21     		movs	r1, #127
 869              	.LVL51:
 162:Core/Src/main.c ****   uint16_t words[6] = {cmd, 0, 0, 0, 0, 0};
 870              		.loc 1 162 12 view .LVU199
 871 0020 0B40     		ands	r3, r1
 872 0022 1343     		orrs	r3, r2
 873              	.LVL52:
 163:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 874              		.loc 1 163 3 is_stmt 1 view .LVU200
 163:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 875              		.loc 1 163 12 is_stmt 0 view .LVU201
 876 0024 01A9     		add	r1, sp, #4
 877 0026 0B80     		strh	r3, [r1]
 878 0028 0023     		movs	r3, #0
 879              	.LVL53:
 163:Core/Src/main.c ****   ads131m04_transfer_frame(out, words, 0);
 880              		.loc 1 163 12 view .LVU202
 881 002a 4B80     		strh	r3, [r1, #2]
 882 002c 8B80     		strh	r3, [r1, #4]
 883 002e CB80     		strh	r3, [r1, #6]
 884 0030 0B81     		strh	r3, [r1, #8]
 885 0032 4B81     		strh	r3, [r1, #10]
 164:Core/Src/main.c **** 
 886              		.loc 1 164 3 is_stmt 1 view .LVU203
 887 0034 0022     		movs	r2, #0
 888 0036 3000     		movs	r0, r6
 889 0038 FFF7FEFF 		bl	ads131m04_transfer_frame
 890              	.LVL54:
 167:Core/Src/main.c ****   
 891              		.loc 1 167 3 view .LVU204
 892 003c 9020     		movs	r0, #144
 893 003e 0022     		movs	r2, #0
 894 0040 1021     		movs	r1, #16
 895 0042 C005     		lsls	r0, r0, #23
 896 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 897              	.LVL55:
 170:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 898              		.loc 1 170 3 view .LVU205
 170:Core/Src/main.c ****   for (uint8_t i = 0; i < max; i++) {
 899              		.loc 1 170 11 is_stmt 0 view .LVU206
 900 0048 271C     		adds	r7, r4, #0
 901 004a 032C     		cmp	r4, #3
 902 004c 00D8     		bhi	.L33
 903 004e 0427     		movs	r7, #4
 904              	.L33:
 905 0050 0237     		adds	r7, r7, #2
 906 0052 FFB2     		uxtb	r7, r7
 907              	.LVL56:
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 908              		.loc 1 171 3 is_stmt 1 view .LVU207
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 29


 909              	.LBB8:
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 910              		.loc 1 171 8 view .LVU208
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 911              		.loc 1 171 16 is_stmt 0 view .LVU209
 912 0054 0024     		movs	r4, #0
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 913              		.loc 1 171 3 view .LVU210
 914 0056 15E0     		b	.L34
 915              	.LVL57:
 916              	.L37:
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 917              		.loc 1 171 3 view .LVU211
 918              	.LBE8:
 919              	.LBB9:
 155:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 920              		.loc 1 155 5 is_stmt 1 view .LVU212
 155:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 921              		.loc 1 155 49 is_stmt 0 view .LVU213
 922 0058 C001     		lsls	r0, r0, #7
 923              	.LVL58:
 155:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 924              		.loc 1 155 49 view .LVU214
 925 005a FC23     		movs	r3, #252
 926 005c 5B01     		lsls	r3, r3, #5
 927 005e 1840     		ands	r0, r3
 155:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 928              		.loc 1 155 27 view .LVU215
 929 0060 0F4B     		ldr	r3, .L38
 930 0062 1843     		orrs	r0, r3
 155:Core/Src/main.c ****     ads131m04_cmd(cmd, out, 0);
 931              		.loc 1 155 14 view .LVU216
 932 0064 80B2     		uxth	r0, r0
 933              	.LVL59:
 156:Core/Src/main.c ****     out[7] = out[6];
 934              		.loc 1 156 5 is_stmt 1 view .LVU217
 935 0066 0022     		movs	r2, #0
 936              	.LVL60:
 156:Core/Src/main.c ****     out[7] = out[6];
 937              		.loc 1 156 5 is_stmt 0 view .LVU218
 938 0068 3100     		movs	r1, r6
 939              	.LVL61:
 156:Core/Src/main.c ****     out[7] = out[6];
 940              		.loc 1 156 5 view .LVU219
 941 006a FFF7FEFF 		bl	ads131m04_cmd
 942              	.LVL62:
 157:Core/Src/main.c ****     return;
 943              		.loc 1 157 5 is_stmt 1 view .LVU220
 157:Core/Src/main.c ****     return;
 944              		.loc 1 157 12 is_stmt 0 view .LVU221
 945 006e B369     		ldr	r3, [r6, #24]
 946 0070 F361     		str	r3, [r6, #28]
 158:Core/Src/main.c ****   }
 947              		.loc 1 158 5 is_stmt 1 view .LVU222
 948 0072 12E0     		b	.L30
 949              	.LVL63:
 950              	.L35:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 30


 158:Core/Src/main.c ****   }
 951              		.loc 1 158 5 is_stmt 0 view .LVU223
 952              	.LBE9:
 953              	.LBB10:
 172:Core/Src/main.c ****   }
 954              		.loc 1 172 5 is_stmt 1 discriminator 3 view .LVU224
 172:Core/Src/main.c ****   }
 955              		.loc 1 172 8 is_stmt 0 discriminator 3 view .LVU225
 956 0074 A500     		lsls	r5, r4, #2
 957 0076 7519     		adds	r5, r6, r5
 172:Core/Src/main.c ****   }
 958              		.loc 1 172 14 discriminator 3 view .LVU226
 959 0078 0020     		movs	r0, #0
 960 007a FFF7FEFF 		bl	ads131m04_transfer_word
 961              	.LVL64:
 172:Core/Src/main.c ****   }
 962              		.loc 1 172 12 discriminator 3 view .LVU227
 963 007e 2860     		str	r0, [r5]
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 964              		.loc 1 171 33 is_stmt 1 discriminator 3 view .LVU228
 965 0080 0134     		adds	r4, r4, #1
 966              	.LVL65:
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 967              		.loc 1 171 33 is_stmt 0 discriminator 3 view .LVU229
 968 0082 E4B2     		uxtb	r4, r4
 969              	.LVL66:
 970              	.L34:
 171:Core/Src/main.c ****     out[i] = ads131m04_transfer_word(0);
 971              		.loc 1 171 25 is_stmt 1 discriminator 1 view .LVU230
 972 0084 BC42     		cmp	r4, r7
 973 0086 F5D3     		bcc	.L35
 974              	.LBE10:
 175:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 975              		.loc 1 175 3 view .LVU231
 976 0088 0420     		movs	r0, #4
 977 008a FFF7FEFF 		bl	delay_us
 978              	.LVL67:
 176:Core/Src/main.c **** }
 979              		.loc 1 176 3 view .LVU232
 980 008e 9020     		movs	r0, #144
 981 0090 0122     		movs	r2, #1
 982 0092 1021     		movs	r1, #16
 983 0094 C005     		lsls	r0, r0, #23
 984 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 985              	.LVL68:
 986              	.L30:
 177:Core/Src/main.c **** 
 987              		.loc 1 177 1 is_stmt 0 view .LVU233
 988 009a 05B0     		add	sp, sp, #20
 989              		@ sp needed
 990              	.LVL69:
 177:Core/Src/main.c **** 
 991              		.loc 1 177 1 view .LVU234
 992 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 993              	.L39:
 994 009e C046     		.align	2
 995              	.L38:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 31


 996 00a0 00A0FFFF 		.word	-24576
 997              		.cfi_endproc
 998              	.LFE51:
 1000              		.section	.text.ads131m04_wreg,"ax",%progbits
 1001              		.align	1
 1002              		.global	ads131m04_wreg
 1003              		.syntax unified
 1004              		.code	16
 1005              		.thumb_func
 1007              	ads131m04_wreg:
 1008              	.LVL70:
 1009              	.LFB52:
 180:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1010              		.loc 1 180 53 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 72
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 180:Core/Src/main.c ****   uint16_t cmd = 0x6000 | ((reg & 0x3F) << 7);
 1014              		.loc 1 180 53 is_stmt 0 view .LVU236
 1015 0000 10B5     		push	{r4, lr}
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 4, -8
 1018              		.cfi_offset 14, -4
 1019 0002 92B0     		sub	sp, sp, #72
 1020              		.cfi_def_cfa_offset 80
 181:Core/Src/main.c ****   uint32_t recv[12];
 1021              		.loc 1 181 3 is_stmt 1 view .LVU237
 181:Core/Src/main.c ****   uint32_t recv[12];
 1022              		.loc 1 181 41 is_stmt 0 view .LVU238
 1023 0004 C001     		lsls	r0, r0, #7
 1024              	.LVL71:
 181:Core/Src/main.c ****   uint32_t recv[12];
 1025              		.loc 1 181 41 view .LVU239
 1026 0006 FC23     		movs	r3, #252
 1027 0008 5B01     		lsls	r3, r3, #5
 1028 000a 1840     		ands	r0, r3
 181:Core/Src/main.c ****   uint32_t recv[12];
 1029              		.loc 1 181 12 view .LVU240
 1030 000c C023     		movs	r3, #192
 1031 000e DB01     		lsls	r3, r3, #7
 1032 0010 0343     		orrs	r3, r0
 1033              	.LVL72:
 182:Core/Src/main.c ****   uint16_t words[6] = {cmd, data, 0, 0, 0, 0};
 1034              		.loc 1 182 3 is_stmt 1 view .LVU241
 183:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1035              		.loc 1 183 3 view .LVU242
 183:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1036              		.loc 1 183 12 is_stmt 0 view .LVU243
 1037 0012 03AC     		add	r4, sp, #12
 1038 0014 2380     		strh	r3, [r4]
 1039 0016 6180     		strh	r1, [r4, #2]
 1040 0018 0023     		movs	r3, #0
 1041              	.LVL73:
 183:Core/Src/main.c ****   uint16_t zeros[6] = {0, 0, 0, 0, 0, 0};
 1042              		.loc 1 183 12 view .LVU244
 1043 001a A380     		strh	r3, [r4, #4]
 1044 001c E380     		strh	r3, [r4, #6]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 32


 1045 001e 2381     		strh	r3, [r4, #8]
 1046 0020 6381     		strh	r3, [r4, #10]
 184:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1047              		.loc 1 184 3 is_stmt 1 view .LVU245
 184:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1048              		.loc 1 184 12 is_stmt 0 view .LVU246
 1049 0022 0C22     		movs	r2, #12
 1050 0024 0021     		movs	r1, #0
 1051              	.LVL74:
 184:Core/Src/main.c ****   ads131m04_transfer_frame(recv, words, 0);
 1052              		.loc 1 184 12 view .LVU247
 1053 0026 6846     		mov	r0, sp
 1054 0028 FFF7FEFF 		bl	memset
 1055              	.LVL75:
 185:Core/Src/main.c ****   ads131m04_transfer_frame(recv+6, zeros, 0);
 1056              		.loc 1 185 3 is_stmt 1 view .LVU248
 1057 002c 0022     		movs	r2, #0
 1058 002e 2100     		movs	r1, r4
 1059 0030 06A8     		add	r0, sp, #24
 1060 0032 FFF7FEFF 		bl	ads131m04_transfer_frame
 1061              	.LVL76:
 186:Core/Src/main.c ****   return recv[6] >> 8;
 1062              		.loc 1 186 3 view .LVU249
 1063 0036 0022     		movs	r2, #0
 1064 0038 6946     		mov	r1, sp
 1065 003a 0CA8     		add	r0, sp, #48
 1066 003c FFF7FEFF 		bl	ads131m04_transfer_frame
 1067              	.LVL77:
 187:Core/Src/main.c **** }
 1068              		.loc 1 187 3 view .LVU250
 187:Core/Src/main.c **** }
 1069              		.loc 1 187 14 is_stmt 0 view .LVU251
 1070 0040 0C98     		ldr	r0, [sp, #48]
 187:Core/Src/main.c **** }
 1071              		.loc 1 187 18 view .LVU252
 1072 0042 000A     		lsrs	r0, r0, #8
 1073 0044 80B2     		uxth	r0, r0
 188:Core/Src/main.c **** 
 1074              		.loc 1 188 1 view .LVU253
 1075 0046 12B0     		add	sp, sp, #72
 1076              		@ sp needed
 1077 0048 10BD     		pop	{r4, pc}
 1078              		.cfi_endproc
 1079              	.LFE52:
 1081              		.section	.text.ads131m04_wreg_multiple,"ax",%progbits
 1082              		.align	1
 1083              		.global	ads131m04_wreg_multiple
 1084              		.syntax unified
 1085              		.code	16
 1086              		.thumb_func
 1088              	ads131m04_wreg_multiple:
 1089              	.LVL78:
 1090              	.LFB53:
 191:Core/Src/main.c ****   if (count == 0) return 0;
 1091              		.loc 1 191 84 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 64
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 33


 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 191:Core/Src/main.c ****   if (count == 0) return 0;
 1095              		.loc 1 191 84 is_stmt 0 view .LVU255
 1096 0000 70B5     		push	{r4, r5, r6, lr}
 1097              		.cfi_def_cfa_offset 16
 1098              		.cfi_offset 4, -16
 1099              		.cfi_offset 5, -12
 1100              		.cfi_offset 6, -8
 1101              		.cfi_offset 14, -4
 1102 0002 90B0     		sub	sp, sp, #64
 1103              		.cfi_def_cfa_offset 80
 1104 0004 0D00     		movs	r5, r1
 1105 0006 1600     		movs	r6, r2
 192:Core/Src/main.c **** 
 1106              		.loc 1 192 3 is_stmt 1 view .LVU256
 192:Core/Src/main.c **** 
 1107              		.loc 1 192 6 is_stmt 0 view .LVU257
 1108 0008 0029     		cmp	r1, #0
 1109 000a 02D1     		bne	.L48
 192:Core/Src/main.c **** 
 1110              		.loc 1 192 26 view .LVU258
 1111 000c 0020     		movs	r0, #0
 1112              	.LVL79:
 1113              	.L42:
 222:Core/Src/main.c **** /* USER CODE END 0 */
 1114              		.loc 1 222 1 view .LVU259
 1115 000e 10B0     		add	sp, sp, #64
 1116              		@ sp needed
 1117              	.LVL80:
 222:Core/Src/main.c **** /* USER CODE END 0 */
 1118              		.loc 1 222 1 view .LVU260
 1119 0010 70BD     		pop	{r4, r5, r6, pc}
 1120              	.LVL81:
 1121              	.L48:
 194:Core/Src/main.c ****   // manually transfer the first frame
 1122              		.loc 1 194 3 is_stmt 1 view .LVU261
 194:Core/Src/main.c ****   // manually transfer the first frame
 1123              		.loc 1 194 47 is_stmt 0 view .LVU262
 1124 0012 C001     		lsls	r0, r0, #7
 1125              	.LVL82:
 194:Core/Src/main.c ****   // manually transfer the first frame
 1126              		.loc 1 194 47 view .LVU263
 1127 0014 FC23     		movs	r3, #252
 1128 0016 5B01     		lsls	r3, r3, #5
 1129 0018 1840     		ands	r0, r3
 194:Core/Src/main.c ****   // manually transfer the first frame
 1130              		.loc 1 194 25 view .LVU264
 1131 001a C022     		movs	r2, #192
 1132              	.LVL83:
 194:Core/Src/main.c ****   // manually transfer the first frame
 1133              		.loc 1 194 25 view .LVU265
 1134 001c D201     		lsls	r2, r2, #7
 1135 001e 0243     		orrs	r2, r0
 194:Core/Src/main.c ****   // manually transfer the first frame
 1136              		.loc 1 194 63 view .LVU266
 1137 0020 4B1E     		subs	r3, r1, #1
 194:Core/Src/main.c ****   // manually transfer the first frame
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 34


 1138              		.loc 1 194 12 view .LVU267
 1139 0022 7F21     		movs	r1, #127
 1140              	.LVL84:
 194:Core/Src/main.c ****   // manually transfer the first frame
 1141              		.loc 1 194 12 view .LVU268
 1142 0024 1C00     		movs	r4, r3
 1143 0026 0C40     		ands	r4, r1
 1144 0028 1443     		orrs	r4, r2
 1145              	.LVL85:
 196:Core/Src/main.c **** 
 1146              		.loc 1 196 3 is_stmt 1 view .LVU269
 1147 002a 9020     		movs	r0, #144
 1148 002c 0022     		movs	r2, #0
 1149 002e 6F39     		subs	r1, r1, #111
 1150 0030 C005     		lsls	r0, r0, #23
 1151 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1152              	.LVL86:
 199:Core/Src/main.c **** 
 1153              		.loc 1 199 3 view .LVU270
 1154 0036 2000     		movs	r0, r4
 1155 0038 FFF7FEFF 		bl	ads131m04_transfer_word
 1156              	.LVL87:
 202:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1157              		.loc 1 202 3 view .LVU271
 1158              	.LBB11:
 202:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1159              		.loc 1 202 8 view .LVU272
 202:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1160              		.loc 1 202 16 is_stmt 0 view .LVU273
 1161 003c 0024     		movs	r4, #0
 1162              	.LVL88:
 202:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1163              		.loc 1 202 3 view .LVU274
 1164 003e 05E0     		b	.L43
 1165              	.LVL89:
 1166              	.L44:
 203:Core/Src/main.c ****   }
 1167              		.loc 1 203 5 is_stmt 1 discriminator 3 view .LVU275
 203:Core/Src/main.c ****   }
 1168              		.loc 1 203 33 is_stmt 0 discriminator 3 view .LVU276
 1169 0040 6300     		lsls	r3, r4, #1
 203:Core/Src/main.c ****   }
 1170              		.loc 1 203 5 discriminator 3 view .LVU277
 1171 0042 F05A     		ldrh	r0, [r6, r3]
 1172 0044 FFF7FEFF 		bl	ads131m04_transfer_word
 1173              	.LVL90:
 202:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1174              		.loc 1 202 35 is_stmt 1 discriminator 3 view .LVU278
 1175 0048 0134     		adds	r4, r4, #1
 1176              	.LVL91:
 202:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1177              		.loc 1 202 35 is_stmt 0 discriminator 3 view .LVU279
 1178 004a E4B2     		uxtb	r4, r4
 1179              	.LVL92:
 1180              	.L43:
 202:Core/Src/main.c ****     ads131m04_transfer_word(data[i]);
 1181              		.loc 1 202 25 is_stmt 1 discriminator 1 view .LVU280
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 35


 1182 004c AC42     		cmp	r4, r5
 1183 004e F7D3     		bcc	.L44
 1184              	.LBE11:
 1185              	.LBB12:
 207:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1186              		.loc 1 207 15 is_stmt 0 view .LVU281
 1187 0050 0024     		movs	r4, #0
 1188              	.LVL93:
 207:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1189              		.loc 1 207 15 view .LVU282
 1190 0052 04E0     		b	.L45
 1191              	.LVL94:
 1192              	.L46:
 208:Core/Src/main.c ****   }
 1193              		.loc 1 208 5 is_stmt 1 discriminator 3 view .LVU283
 1194 0054 0020     		movs	r0, #0
 1195 0056 FFF7FEFF 		bl	ads131m04_transfer_word
 1196              	.LVL95:
 207:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1197              		.loc 1 207 38 discriminator 3 view .LVU284
 1198 005a 0134     		adds	r4, r4, #1
 1199              	.LVL96:
 207:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1200              		.loc 1 207 38 is_stmt 0 discriminator 3 view .LVU285
 1201 005c 64B2     		sxtb	r4, r4
 1202              	.LVL97:
 1203              	.L45:
 207:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1204              		.loc 1 207 24 is_stmt 1 discriminator 1 view .LVU286
 207:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1205              		.loc 1 207 28 is_stmt 0 discriminator 1 view .LVU287
 1206 005e 0423     		movs	r3, #4
 1207 0060 5B1B     		subs	r3, r3, r5
 207:Core/Src/main.c ****     ads131m04_transfer_word(0);
 1208              		.loc 1 207 24 discriminator 1 view .LVU288
 1209 0062 9C42     		cmp	r4, r3
 1210 0064 F6DB     		blt	.L46
 1211              	.LBE12:
 212:Core/Src/main.c **** 
 1212              		.loc 1 212 3 is_stmt 1 view .LVU289
 1213 0066 0020     		movs	r0, #0
 1214 0068 FFF7FEFF 		bl	ads131m04_transfer_word
 1215              	.LVL98:
 214:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1216              		.loc 1 214 3 view .LVU290
 1217 006c 0420     		movs	r0, #4
 1218 006e FFF7FEFF 		bl	delay_us
 1219              	.LVL99:
 215:Core/Src/main.c **** 
 1220              		.loc 1 215 3 view .LVU291
 1221 0072 9020     		movs	r0, #144
 1222 0074 0122     		movs	r2, #1
 1223 0076 1021     		movs	r1, #16
 1224 0078 C005     		lsls	r0, r0, #23
 1225 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1226              	.LVL100:
 218:Core/Src/main.c ****   uint32_t recv[12];
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 36


 1227              		.loc 1 218 3 view .LVU292
 218:Core/Src/main.c ****   uint32_t recv[12];
 1228              		.loc 1 218 12 is_stmt 0 view .LVU293
 1229 007e 0C22     		movs	r2, #12
 1230 0080 0021     		movs	r1, #0
 1231 0082 0DA8     		add	r0, sp, #52
 1232 0084 FFF7FEFF 		bl	memset
 1233              	.LVL101:
 219:Core/Src/main.c ****   ads131m04_transfer_frame(recv, zeros, 0);
 1234              		.loc 1 219 3 is_stmt 1 view .LVU294
 220:Core/Src/main.c ****   return recv[6] >> 8;  
 1235              		.loc 1 220 3 view .LVU295
 1236 0088 0022     		movs	r2, #0
 1237 008a 0DA9     		add	r1, sp, #52
 1238 008c 01A8     		add	r0, sp, #4
 1239 008e FFF7FEFF 		bl	ads131m04_transfer_frame
 1240              	.LVL102:
 221:Core/Src/main.c **** }
 1241              		.loc 1 221 3 view .LVU296
 221:Core/Src/main.c **** }
 1242              		.loc 1 221 14 is_stmt 0 view .LVU297
 1243 0092 0798     		ldr	r0, [sp, #28]
 221:Core/Src/main.c **** }
 1244              		.loc 1 221 18 view .LVU298
 1245 0094 000A     		lsrs	r0, r0, #8
 1246 0096 80B2     		uxth	r0, r0
 1247 0098 B9E7     		b	.L42
 1248              		.cfi_endproc
 1249              	.LFE53:
 1251              		.section	.text.Error_Handler,"ax",%progbits
 1252              		.align	1
 1253              		.global	Error_Handler
 1254              		.syntax unified
 1255              		.code	16
 1256              		.thumb_func
 1258              	Error_Handler:
 1259              	.LFB61:
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** /* USER CODE END 4 */
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** /**
 575:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 576:Core/Src/main.c ****   * @retval None
 577:Core/Src/main.c ****   */
 578:Core/Src/main.c **** void Error_Handler(void)
 579:Core/Src/main.c **** {
 1260              		.loc 1 579 1 is_stmt 1 view -0
 1261              		.cfi_startproc
 1262              		@ Volatile: function does not return.
 1263              		@ args = 0, pretend = 0, frame = 0
 1264              		@ frame_needed = 0, uses_anonymous_args = 0
 1265              		@ link register save eliminated.
 580:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 581:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 582:Core/Src/main.c ****   __disable_irq();
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 37


 1266              		.loc 1 582 3 view .LVU300
 1267              	.LBB13:
 1268              	.LBI13:
 1269              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 38


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 39


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1270              		.loc 2 140 27 view .LVU301
 1271              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1272              		.loc 2 142 3 view .LVU302
 1273              		.syntax divided
 1274              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1275 0000 72B6     		cpsid i
 1276              	@ 0 "" 2
 1277              		.thumb
 1278              		.syntax unified
 1279              	.L50:
 1280              	.LBE14:
 1281              	.LBE13:
 583:Core/Src/main.c ****   while (1)
 1282              		.loc 1 583 3 discriminator 1 view .LVU303
 584:Core/Src/main.c ****   {
 585:Core/Src/main.c ****   }
 1283              		.loc 1 585 3 discriminator 1 view .LVU304
 583:Core/Src/main.c ****   while (1)
 1284              		.loc 1 583 9 discriminator 1 view .LVU305
 1285 0002 FEE7     		b	.L50
 1286              		.cfi_endproc
 1287              	.LFE61:
 1289              		.section	.text.MX_CAN_Init,"ax",%progbits
 1290              		.align	1
 1291              		.syntax unified
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 40


 1292              		.code	16
 1293              		.thumb_func
 1295              	MX_CAN_Init:
 1296              	.LFB56:
 350:Core/Src/main.c **** 
 1297              		.loc 1 350 1 view -0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301 0000 10B5     		push	{r4, lr}
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 4, -8
 1304              		.cfi_offset 14, -4
 359:Core/Src/main.c ****   hcan.Init.Prescaler = 32;
 1305              		.loc 1 359 3 view .LVU307
 359:Core/Src/main.c ****   hcan.Init.Prescaler = 32;
 1306              		.loc 1 359 17 is_stmt 0 view .LVU308
 1307 0002 0B48     		ldr	r0, .L54
 1308 0004 0B4B     		ldr	r3, .L54+4
 1309 0006 0360     		str	r3, [r0]
 360:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 1310              		.loc 1 360 3 is_stmt 1 view .LVU309
 360:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 1311              		.loc 1 360 23 is_stmt 0 view .LVU310
 1312 0008 2023     		movs	r3, #32
 1313 000a 4360     		str	r3, [r0, #4]
 361:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1314              		.loc 1 361 3 is_stmt 1 view .LVU311
 361:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 1315              		.loc 1 361 18 is_stmt 0 view .LVU312
 1316 000c 0023     		movs	r3, #0
 1317 000e 8360     		str	r3, [r0, #8]
 362:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 1318              		.loc 1 362 3 is_stmt 1 view .LVU313
 362:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 1319              		.loc 1 362 27 is_stmt 0 view .LVU314
 1320 0010 C360     		str	r3, [r0, #12]
 363:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 1321              		.loc 1 363 3 is_stmt 1 view .LVU315
 363:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 1322              		.loc 1 363 22 is_stmt 0 view .LVU316
 1323 0012 0361     		str	r3, [r0, #16]
 364:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 1324              		.loc 1 364 3 is_stmt 1 view .LVU317
 364:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 1325              		.loc 1 364 22 is_stmt 0 view .LVU318
 1326 0014 4361     		str	r3, [r0, #20]
 365:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 1327              		.loc 1 365 3 is_stmt 1 view .LVU319
 365:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 1328              		.loc 1 365 31 is_stmt 0 view .LVU320
 1329 0016 0376     		strb	r3, [r0, #24]
 366:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 1330              		.loc 1 366 3 is_stmt 1 view .LVU321
 366:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 1331              		.loc 1 366 24 is_stmt 0 view .LVU322
 1332 0018 4376     		strb	r3, [r0, #25]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 41


 367:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 1333              		.loc 1 367 3 is_stmt 1 view .LVU323
 367:Core/Src/main.c ****   hcan.Init.AutoRetransmission = DISABLE;
 1334              		.loc 1 367 24 is_stmt 0 view .LVU324
 1335 001a 8376     		strb	r3, [r0, #26]
 368:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 1336              		.loc 1 368 3 is_stmt 1 view .LVU325
 368:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 1337              		.loc 1 368 32 is_stmt 0 view .LVU326
 1338 001c C376     		strb	r3, [r0, #27]
 369:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 1339              		.loc 1 369 3 is_stmt 1 view .LVU327
 369:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 1340              		.loc 1 369 31 is_stmt 0 view .LVU328
 1341 001e 0377     		strb	r3, [r0, #28]
 370:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 1342              		.loc 1 370 3 is_stmt 1 view .LVU329
 370:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 1343              		.loc 1 370 34 is_stmt 0 view .LVU330
 1344 0020 4377     		strb	r3, [r0, #29]
 371:Core/Src/main.c ****   {
 1345              		.loc 1 371 3 is_stmt 1 view .LVU331
 371:Core/Src/main.c ****   {
 1346              		.loc 1 371 7 is_stmt 0 view .LVU332
 1347 0022 FFF7FEFF 		bl	HAL_CAN_Init
 1348              	.LVL103:
 371:Core/Src/main.c ****   {
 1349              		.loc 1 371 6 view .LVU333
 1350 0026 0028     		cmp	r0, #0
 1351 0028 00D1     		bne	.L53
 379:Core/Src/main.c **** 
 1352              		.loc 1 379 1 view .LVU334
 1353              		@ sp needed
 1354 002a 10BD     		pop	{r4, pc}
 1355              	.L53:
 373:Core/Src/main.c ****   }
 1356              		.loc 1 373 5 is_stmt 1 view .LVU335
 1357 002c FFF7FEFF 		bl	Error_Handler
 1358              	.LVL104:
 1359              	.L55:
 1360              		.align	2
 1361              	.L54:
 1362 0030 00000000 		.word	hcan
 1363 0034 00640040 		.word	1073767424
 1364              		.cfi_endproc
 1365              	.LFE56:
 1367              		.section	.text.MX_SPI1_Init,"ax",%progbits
 1368              		.align	1
 1369              		.syntax unified
 1370              		.code	16
 1371              		.thumb_func
 1373              	MX_SPI1_Init:
 1374              	.LFB57:
 387:Core/Src/main.c **** 
 1375              		.loc 1 387 1 view -0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 42


 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379 0000 10B5     		push	{r4, lr}
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 4, -8
 1382              		.cfi_offset 14, -4
 397:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1383              		.loc 1 397 3 view .LVU337
 397:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1384              		.loc 1 397 18 is_stmt 0 view .LVU338
 1385 0002 1148     		ldr	r0, .L59
 1386 0004 114B     		ldr	r3, .L59+4
 1387 0006 0360     		str	r3, [r0]
 398:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1388              		.loc 1 398 3 is_stmt 1 view .LVU339
 398:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1389              		.loc 1 398 19 is_stmt 0 view .LVU340
 1390 0008 8223     		movs	r3, #130
 1391 000a 5B00     		lsls	r3, r3, #1
 1392 000c 4360     		str	r3, [r0, #4]
 399:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1393              		.loc 1 399 3 is_stmt 1 view .LVU341
 399:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1394              		.loc 1 399 24 is_stmt 0 view .LVU342
 1395 000e 0023     		movs	r3, #0
 1396 0010 8360     		str	r3, [r0, #8]
 400:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1397              		.loc 1 400 3 is_stmt 1 view .LVU343
 400:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1398              		.loc 1 400 23 is_stmt 0 view .LVU344
 1399 0012 E022     		movs	r2, #224
 1400 0014 D200     		lsls	r2, r2, #3
 1401 0016 C260     		str	r2, [r0, #12]
 401:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 1402              		.loc 1 401 3 is_stmt 1 view .LVU345
 401:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 1403              		.loc 1 401 26 is_stmt 0 view .LVU346
 1404 0018 0361     		str	r3, [r0, #16]
 402:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1405              		.loc 1 402 3 is_stmt 1 view .LVU347
 402:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1406              		.loc 1 402 23 is_stmt 0 view .LVU348
 1407 001a 0122     		movs	r2, #1
 1408 001c 4261     		str	r2, [r0, #20]
 403:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1409              		.loc 1 403 3 is_stmt 1 view .LVU349
 403:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1410              		.loc 1 403 18 is_stmt 0 view .LVU350
 1411 001e 8022     		movs	r2, #128
 1412 0020 9200     		lsls	r2, r2, #2
 1413 0022 8261     		str	r2, [r0, #24]
 404:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1414              		.loc 1 404 3 is_stmt 1 view .LVU351
 404:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1415              		.loc 1 404 32 is_stmt 0 view .LVU352
 1416 0024 E13A     		subs	r2, r2, #225
 1417 0026 FF3A     		subs	r2, r2, #255
 1418 0028 C261     		str	r2, [r0, #28]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 43


 405:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1419              		.loc 1 405 3 is_stmt 1 view .LVU353
 405:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1420              		.loc 1 405 23 is_stmt 0 view .LVU354
 1421 002a 0362     		str	r3, [r0, #32]
 406:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1422              		.loc 1 406 3 is_stmt 1 view .LVU355
 406:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1423              		.loc 1 406 21 is_stmt 0 view .LVU356
 1424 002c 4362     		str	r3, [r0, #36]
 407:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 1425              		.loc 1 407 3 is_stmt 1 view .LVU357
 407:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 1426              		.loc 1 407 29 is_stmt 0 view .LVU358
 1427 002e 8362     		str	r3, [r0, #40]
 408:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1428              		.loc 1 408 3 is_stmt 1 view .LVU359
 408:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1429              		.loc 1 408 28 is_stmt 0 view .LVU360
 1430 0030 193A     		subs	r2, r2, #25
 1431 0032 C262     		str	r2, [r0, #44]
 409:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 1432              		.loc 1 409 3 is_stmt 1 view .LVU361
 409:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 1433              		.loc 1 409 24 is_stmt 0 view .LVU362
 1434 0034 0363     		str	r3, [r0, #48]
 410:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1435              		.loc 1 410 3 is_stmt 1 view .LVU363
 410:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1436              		.loc 1 410 23 is_stmt 0 view .LVU364
 1437 0036 4363     		str	r3, [r0, #52]
 411:Core/Src/main.c ****   {
 1438              		.loc 1 411 3 is_stmt 1 view .LVU365
 411:Core/Src/main.c ****   {
 1439              		.loc 1 411 7 is_stmt 0 view .LVU366
 1440 0038 FFF7FEFF 		bl	HAL_SPI_Init
 1441              	.LVL105:
 411:Core/Src/main.c ****   {
 1442              		.loc 1 411 6 view .LVU367
 1443 003c 0028     		cmp	r0, #0
 1444 003e 00D1     		bne	.L58
 419:Core/Src/main.c **** 
 1445              		.loc 1 419 1 view .LVU368
 1446              		@ sp needed
 1447 0040 10BD     		pop	{r4, pc}
 1448              	.L58:
 413:Core/Src/main.c ****   }
 1449              		.loc 1 413 5 is_stmt 1 view .LVU369
 1450 0042 FFF7FEFF 		bl	Error_Handler
 1451              	.LVL106:
 1452              	.L60:
 1453 0046 C046     		.align	2
 1454              	.L59:
 1455 0048 00000000 		.word	hspi1
 1456 004c 00300140 		.word	1073819648
 1457              		.cfi_endproc
 1458              	.LFE57:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 44


 1460              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1461              		.align	1
 1462              		.syntax unified
 1463              		.code	16
 1464              		.thumb_func
 1466              	MX_TIM3_Init:
 1467              	.LFB58:
 427:Core/Src/main.c **** 
 1468              		.loc 1 427 1 view -0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 56
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472 0000 00B5     		push	{lr}
 1473              		.cfi_def_cfa_offset 4
 1474              		.cfi_offset 14, -4
 1475 0002 8FB0     		sub	sp, sp, #60
 1476              		.cfi_def_cfa_offset 64
 433:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1477              		.loc 1 433 3 view .LVU371
 433:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1478              		.loc 1 433 26 is_stmt 0 view .LVU372
 1479 0004 1022     		movs	r2, #16
 1480 0006 0021     		movs	r1, #0
 1481 0008 0AA8     		add	r0, sp, #40
 1482 000a FFF7FEFF 		bl	memset
 1483              	.LVL107:
 434:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1484              		.loc 1 434 3 is_stmt 1 view .LVU373
 434:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1485              		.loc 1 434 27 is_stmt 0 view .LVU374
 1486 000e 0822     		movs	r2, #8
 1487 0010 0021     		movs	r1, #0
 1488 0012 08A8     		add	r0, sp, #32
 1489 0014 FFF7FEFF 		bl	memset
 1490              	.LVL108:
 435:Core/Src/main.c **** 
 1491              		.loc 1 435 3 is_stmt 1 view .LVU375
 435:Core/Src/main.c **** 
 1492              		.loc 1 435 22 is_stmt 0 view .LVU376
 1493 0018 1C22     		movs	r2, #28
 1494 001a 0021     		movs	r1, #0
 1495 001c 01A8     		add	r0, sp, #4
 1496 001e FFF7FEFF 		bl	memset
 1497              	.LVL109:
 440:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1498              		.loc 1 440 3 is_stmt 1 view .LVU377
 440:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1499              		.loc 1 440 18 is_stmt 0 view .LVU378
 1500 0022 2148     		ldr	r0, .L72
 1501 0024 214B     		ldr	r3, .L72+4
 1502 0026 0360     		str	r3, [r0]
 441:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1503              		.loc 1 441 3 is_stmt 1 view .LVU379
 441:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1504              		.loc 1 441 24 is_stmt 0 view .LVU380
 1505 0028 0023     		movs	r3, #0
 1506 002a 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 45


 442:Core/Src/main.c ****   htim3.Init.Period = 7;
 1507              		.loc 1 442 3 is_stmt 1 view .LVU381
 442:Core/Src/main.c ****   htim3.Init.Period = 7;
 1508              		.loc 1 442 26 is_stmt 0 view .LVU382
 1509 002c 8360     		str	r3, [r0, #8]
 443:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1510              		.loc 1 443 3 is_stmt 1 view .LVU383
 443:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1511              		.loc 1 443 21 is_stmt 0 view .LVU384
 1512 002e 0722     		movs	r2, #7
 1513 0030 C260     		str	r2, [r0, #12]
 444:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1514              		.loc 1 444 3 is_stmt 1 view .LVU385
 444:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1515              		.loc 1 444 28 is_stmt 0 view .LVU386
 1516 0032 0361     		str	r3, [r0, #16]
 445:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1517              		.loc 1 445 3 is_stmt 1 view .LVU387
 445:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1518              		.loc 1 445 32 is_stmt 0 view .LVU388
 1519 0034 8361     		str	r3, [r0, #24]
 446:Core/Src/main.c ****   {
 1520              		.loc 1 446 3 is_stmt 1 view .LVU389
 446:Core/Src/main.c ****   {
 1521              		.loc 1 446 7 is_stmt 0 view .LVU390
 1522 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1523              	.LVL110:
 446:Core/Src/main.c ****   {
 1524              		.loc 1 446 6 view .LVU391
 1525 003a 0028     		cmp	r0, #0
 1526 003c 29D1     		bne	.L67
 450:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1527              		.loc 1 450 3 is_stmt 1 view .LVU392
 450:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1528              		.loc 1 450 34 is_stmt 0 view .LVU393
 1529 003e 8023     		movs	r3, #128
 1530 0040 5B01     		lsls	r3, r3, #5
 1531 0042 0A93     		str	r3, [sp, #40]
 451:Core/Src/main.c ****   {
 1532              		.loc 1 451 3 is_stmt 1 view .LVU394
 451:Core/Src/main.c ****   {
 1533              		.loc 1 451 7 is_stmt 0 view .LVU395
 1534 0044 1848     		ldr	r0, .L72
 1535 0046 0AA9     		add	r1, sp, #40
 1536 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1537              	.LVL111:
 451:Core/Src/main.c ****   {
 1538              		.loc 1 451 6 view .LVU396
 1539 004c 0028     		cmp	r0, #0
 1540 004e 22D1     		bne	.L68
 455:Core/Src/main.c ****   {
 1541              		.loc 1 455 3 is_stmt 1 view .LVU397
 455:Core/Src/main.c ****   {
 1542              		.loc 1 455 7 is_stmt 0 view .LVU398
 1543 0050 1548     		ldr	r0, .L72
 1544 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1545              	.LVL112:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 46


 455:Core/Src/main.c ****   {
 1546              		.loc 1 455 6 view .LVU399
 1547 0056 0028     		cmp	r0, #0
 1548 0058 1FD1     		bne	.L69
 459:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1549              		.loc 1 459 3 is_stmt 1 view .LVU400
 459:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1550              		.loc 1 459 37 is_stmt 0 view .LVU401
 1551 005a 0023     		movs	r3, #0
 1552 005c 0893     		str	r3, [sp, #32]
 460:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1553              		.loc 1 460 3 is_stmt 1 view .LVU402
 460:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1554              		.loc 1 460 33 is_stmt 0 view .LVU403
 1555 005e 0993     		str	r3, [sp, #36]
 461:Core/Src/main.c ****   {
 1556              		.loc 1 461 3 is_stmt 1 view .LVU404
 461:Core/Src/main.c ****   {
 1557              		.loc 1 461 7 is_stmt 0 view .LVU405
 1558 0060 1148     		ldr	r0, .L72
 1559 0062 08A9     		add	r1, sp, #32
 1560 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1561              	.LVL113:
 461:Core/Src/main.c ****   {
 1562              		.loc 1 461 6 view .LVU406
 1563 0068 0028     		cmp	r0, #0
 1564 006a 18D1     		bne	.L70
 465:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 1565              		.loc 1 465 3 is_stmt 1 view .LVU407
 465:Core/Src/main.c ****   sConfigOC.Pulse = 4;
 1566              		.loc 1 465 20 is_stmt 0 view .LVU408
 1567 006c 6023     		movs	r3, #96
 1568 006e 0193     		str	r3, [sp, #4]
 466:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1569              		.loc 1 466 3 is_stmt 1 view .LVU409
 466:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1570              		.loc 1 466 19 is_stmt 0 view .LVU410
 1571 0070 5C3B     		subs	r3, r3, #92
 1572 0072 0293     		str	r3, [sp, #8]
 467:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 1573              		.loc 1 467 3 is_stmt 1 view .LVU411
 467:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 1574              		.loc 1 467 24 is_stmt 0 view .LVU412
 1575 0074 0022     		movs	r2, #0
 1576 0076 0392     		str	r2, [sp, #12]
 468:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1577              		.loc 1 468 3 is_stmt 1 view .LVU413
 468:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1578              		.loc 1 468 24 is_stmt 0 view .LVU414
 1579 0078 0593     		str	r3, [sp, #20]
 469:Core/Src/main.c ****   {
 1580              		.loc 1 469 3 is_stmt 1 view .LVU415
 469:Core/Src/main.c ****   {
 1581              		.loc 1 469 7 is_stmt 0 view .LVU416
 1582 007a 0B48     		ldr	r0, .L72
 1583 007c 0C32     		adds	r2, r2, #12
 1584 007e 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 47


 1585 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1586              	.LVL114:
 469:Core/Src/main.c ****   {
 1587              		.loc 1 469 6 view .LVU417
 1588 0084 0028     		cmp	r0, #0
 1589 0086 0CD1     		bne	.L71
 476:Core/Src/main.c **** 
 1590              		.loc 1 476 3 is_stmt 1 view .LVU418
 1591 0088 0748     		ldr	r0, .L72
 1592 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1593              	.LVL115:
 478:Core/Src/main.c **** 
 1594              		.loc 1 478 1 is_stmt 0 view .LVU419
 1595 008e 0FB0     		add	sp, sp, #60
 1596              		@ sp needed
 1597 0090 00BD     		pop	{pc}
 1598              	.L67:
 448:Core/Src/main.c ****   }
 1599              		.loc 1 448 5 is_stmt 1 view .LVU420
 1600 0092 FFF7FEFF 		bl	Error_Handler
 1601              	.LVL116:
 1602              	.L68:
 453:Core/Src/main.c ****   }
 1603              		.loc 1 453 5 view .LVU421
 1604 0096 FFF7FEFF 		bl	Error_Handler
 1605              	.LVL117:
 1606              	.L69:
 457:Core/Src/main.c ****   }
 1607              		.loc 1 457 5 view .LVU422
 1608 009a FFF7FEFF 		bl	Error_Handler
 1609              	.LVL118:
 1610              	.L70:
 463:Core/Src/main.c ****   }
 1611              		.loc 1 463 5 view .LVU423
 1612 009e FFF7FEFF 		bl	Error_Handler
 1613              	.LVL119:
 1614              	.L71:
 471:Core/Src/main.c ****   }
 1615              		.loc 1 471 5 view .LVU424
 1616 00a2 FFF7FEFF 		bl	Error_Handler
 1617              	.LVL120:
 1618              	.L73:
 1619 00a6 C046     		.align	2
 1620              	.L72:
 1621 00a8 00000000 		.word	htim3
 1622 00ac 00040040 		.word	1073742848
 1623              		.cfi_endproc
 1624              	.LFE58:
 1626              		.section	.text.MX_TIM16_Init,"ax",%progbits
 1627              		.align	1
 1628              		.syntax unified
 1629              		.code	16
 1630              		.thumb_func
 1632              	MX_TIM16_Init:
 1633              	.LFB59:
 486:Core/Src/main.c **** 
 1634              		.loc 1 486 1 view -0
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 48


 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638 0000 10B5     		push	{r4, lr}
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 4, -8
 1641              		.cfi_offset 14, -4
 495:Core/Src/main.c ****   htim16.Init.Prescaler = 48;
 1642              		.loc 1 495 3 view .LVU426
 495:Core/Src/main.c ****   htim16.Init.Prescaler = 48;
 1643              		.loc 1 495 19 is_stmt 0 view .LVU427
 1644 0002 0948     		ldr	r0, .L77
 1645 0004 094B     		ldr	r3, .L77+4
 1646 0006 0360     		str	r3, [r0]
 496:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1647              		.loc 1 496 3 is_stmt 1 view .LVU428
 496:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1648              		.loc 1 496 25 is_stmt 0 view .LVU429
 1649 0008 3023     		movs	r3, #48
 1650 000a 4360     		str	r3, [r0, #4]
 497:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1651              		.loc 1 497 3 is_stmt 1 view .LVU430
 497:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1652              		.loc 1 497 27 is_stmt 0 view .LVU431
 1653 000c 0023     		movs	r3, #0
 1654 000e 8360     		str	r3, [r0, #8]
 498:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1655              		.loc 1 498 3 is_stmt 1 view .LVU432
 498:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1656              		.loc 1 498 22 is_stmt 0 view .LVU433
 1657 0010 074A     		ldr	r2, .L77+8
 1658 0012 C260     		str	r2, [r0, #12]
 499:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1659              		.loc 1 499 3 is_stmt 1 view .LVU434
 499:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1660              		.loc 1 499 29 is_stmt 0 view .LVU435
 1661 0014 0361     		str	r3, [r0, #16]
 500:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1662              		.loc 1 500 3 is_stmt 1 view .LVU436
 500:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1663              		.loc 1 500 33 is_stmt 0 view .LVU437
 1664 0016 4361     		str	r3, [r0, #20]
 501:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1665              		.loc 1 501 3 is_stmt 1 view .LVU438
 501:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1666              		.loc 1 501 33 is_stmt 0 view .LVU439
 1667 0018 8361     		str	r3, [r0, #24]
 502:Core/Src/main.c ****   {
 1668              		.loc 1 502 3 is_stmt 1 view .LVU440
 502:Core/Src/main.c ****   {
 1669              		.loc 1 502 7 is_stmt 0 view .LVU441
 1670 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1671              	.LVL121:
 502:Core/Src/main.c ****   {
 1672              		.loc 1 502 6 view .LVU442
 1673 001e 0028     		cmp	r0, #0
 1674 0020 00D1     		bne	.L76
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 49


 510:Core/Src/main.c **** 
 1675              		.loc 1 510 1 view .LVU443
 1676              		@ sp needed
 1677 0022 10BD     		pop	{r4, pc}
 1678              	.L76:
 504:Core/Src/main.c ****   }
 1679              		.loc 1 504 5 is_stmt 1 view .LVU444
 1680 0024 FFF7FEFF 		bl	Error_Handler
 1681              	.LVL122:
 1682              	.L78:
 1683              		.align	2
 1684              	.L77:
 1685 0028 00000000 		.word	htim16
 1686 002c 00440140 		.word	1073824768
 1687 0030 FFFF0000 		.word	65535
 1688              		.cfi_endproc
 1689              	.LFE59:
 1691              		.section	.text.SystemClock_Config,"ax",%progbits
 1692              		.align	1
 1693              		.global	SystemClock_Config
 1694              		.syntax unified
 1695              		.code	16
 1696              		.thumb_func
 1698              	SystemClock_Config:
 1699              	.LFB55:
 311:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1700              		.loc 1 311 1 view -0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 72
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704 0000 00B5     		push	{lr}
 1705              		.cfi_def_cfa_offset 4
 1706              		.cfi_offset 14, -4
 1707 0002 93B0     		sub	sp, sp, #76
 1708              		.cfi_def_cfa_offset 80
 312:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1709              		.loc 1 312 3 view .LVU446
 312:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1710              		.loc 1 312 22 is_stmt 0 view .LVU447
 1711 0004 3422     		movs	r2, #52
 1712 0006 0021     		movs	r1, #0
 1713 0008 05A8     		add	r0, sp, #20
 1714 000a FFF7FEFF 		bl	memset
 1715              	.LVL123:
 313:Core/Src/main.c **** 
 1716              		.loc 1 313 3 is_stmt 1 view .LVU448
 313:Core/Src/main.c **** 
 1717              		.loc 1 313 22 is_stmt 0 view .LVU449
 1718 000e 1022     		movs	r2, #16
 1719 0010 0021     		movs	r1, #0
 1720 0012 01A8     		add	r0, sp, #4
 1721 0014 FFF7FEFF 		bl	memset
 1722              	.LVL124:
 318:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1723              		.loc 1 318 3 is_stmt 1 view .LVU450
 318:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1724              		.loc 1 318 36 is_stmt 0 view .LVU451
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 50


 1725 0018 0223     		movs	r3, #2
 1726 001a 0593     		str	r3, [sp, #20]
 319:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1727              		.loc 1 319 3 is_stmt 1 view .LVU452
 319:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1728              		.loc 1 319 30 is_stmt 0 view .LVU453
 1729 001c 0122     		movs	r2, #1
 1730 001e 0892     		str	r2, [sp, #32]
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1731              		.loc 1 320 3 is_stmt 1 view .LVU454
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1732              		.loc 1 320 41 is_stmt 0 view .LVU455
 1733 0020 0F32     		adds	r2, r2, #15
 1734 0022 0992     		str	r2, [sp, #36]
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1735              		.loc 1 321 3 is_stmt 1 view .LVU456
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1736              		.loc 1 321 34 is_stmt 0 view .LVU457
 1737 0024 0E93     		str	r3, [sp, #56]
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 1738              		.loc 1 322 3 is_stmt 1 view .LVU458
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 1739              		.loc 1 322 35 is_stmt 0 view .LVU459
 1740 0026 8023     		movs	r3, #128
 1741 0028 1B02     		lsls	r3, r3, #8
 1742 002a 0F93     		str	r3, [sp, #60]
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1743              		.loc 1 323 3 is_stmt 1 view .LVU460
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1744              		.loc 1 323 32 is_stmt 0 view .LVU461
 1745 002c 8023     		movs	r3, #128
 1746 002e 5B03     		lsls	r3, r3, #13
 1747 0030 1093     		str	r3, [sp, #64]
 324:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1748              		.loc 1 324 3 is_stmt 1 view .LVU462
 325:Core/Src/main.c ****   {
 1749              		.loc 1 325 3 view .LVU463
 325:Core/Src/main.c ****   {
 1750              		.loc 1 325 7 is_stmt 0 view .LVU464
 1751 0032 05A8     		add	r0, sp, #20
 1752 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1753              	.LVL125:
 325:Core/Src/main.c ****   {
 1754              		.loc 1 325 6 view .LVU465
 1755 0038 0028     		cmp	r0, #0
 1756 003a 0ED1     		bne	.L82
 332:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1757              		.loc 1 332 3 is_stmt 1 view .LVU466
 332:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1758              		.loc 1 332 31 is_stmt 0 view .LVU467
 1759 003c 0723     		movs	r3, #7
 1760 003e 0193     		str	r3, [sp, #4]
 334:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1761              		.loc 1 334 3 is_stmt 1 view .LVU468
 334:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1762              		.loc 1 334 34 is_stmt 0 view .LVU469
 1763 0040 053B     		subs	r3, r3, #5
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 51


 1764 0042 0293     		str	r3, [sp, #8]
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1765              		.loc 1 335 3 is_stmt 1 view .LVU470
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1766              		.loc 1 335 35 is_stmt 0 view .LVU471
 1767 0044 0023     		movs	r3, #0
 1768 0046 0393     		str	r3, [sp, #12]
 336:Core/Src/main.c **** 
 1769              		.loc 1 336 3 is_stmt 1 view .LVU472
 336:Core/Src/main.c **** 
 1770              		.loc 1 336 36 is_stmt 0 view .LVU473
 1771 0048 0493     		str	r3, [sp, #16]
 338:Core/Src/main.c ****   {
 1772              		.loc 1 338 3 is_stmt 1 view .LVU474
 338:Core/Src/main.c ****   {
 1773              		.loc 1 338 7 is_stmt 0 view .LVU475
 1774 004a 0121     		movs	r1, #1
 1775 004c 01A8     		add	r0, sp, #4
 1776 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1777              	.LVL126:
 338:Core/Src/main.c ****   {
 1778              		.loc 1 338 6 view .LVU476
 1779 0052 0028     		cmp	r0, #0
 1780 0054 03D1     		bne	.L83
 342:Core/Src/main.c **** 
 1781              		.loc 1 342 1 view .LVU477
 1782 0056 13B0     		add	sp, sp, #76
 1783              		@ sp needed
 1784 0058 00BD     		pop	{pc}
 1785              	.L82:
 327:Core/Src/main.c ****   }
 1786              		.loc 1 327 5 is_stmt 1 view .LVU478
 1787 005a FFF7FEFF 		bl	Error_Handler
 1788              	.LVL127:
 1789              	.L83:
 340:Core/Src/main.c ****   }
 1790              		.loc 1 340 5 view .LVU479
 1791 005e FFF7FEFF 		bl	Error_Handler
 1792              	.LVL128:
 1793              		.cfi_endproc
 1794              	.LFE55:
 1796              		.section	.text.main,"ax",%progbits
 1797              		.align	1
 1798              		.global	main
 1799              		.syntax unified
 1800              		.code	16
 1801              		.thumb_func
 1803              	main:
 1804              	.LFB54:
 230:Core/Src/main.c **** 
 1805              		.loc 1 230 1 view -0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 264
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809 0000 00B5     		push	{lr}
 1810              		.cfi_def_cfa_offset 4
 1811              		.cfi_offset 14, -4
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 52


 1812 0002 C3B0     		sub	sp, sp, #268
 1813              		.cfi_def_cfa_offset 272
 239:Core/Src/main.c **** 
 1814              		.loc 1 239 3 view .LVU481
 1815 0004 FFF7FEFF 		bl	HAL_Init
 1816              	.LVL129:
 246:Core/Src/main.c **** 
 1817              		.loc 1 246 3 view .LVU482
 1818 0008 FFF7FEFF 		bl	SystemClock_Config
 1819              	.LVL130:
 253:Core/Src/main.c ****   MX_CAN_Init();
 1820              		.loc 1 253 3 view .LVU483
 1821 000c FFF7FEFF 		bl	MX_GPIO_Init
 1822              	.LVL131:
 254:Core/Src/main.c ****   MX_SPI1_Init();
 1823              		.loc 1 254 3 view .LVU484
 1824 0010 FFF7FEFF 		bl	MX_CAN_Init
 1825              	.LVL132:
 255:Core/Src/main.c ****   MX_TIM3_Init();
 1826              		.loc 1 255 3 view .LVU485
 1827 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1828              	.LVL133:
 256:Core/Src/main.c ****   MX_TIM16_Init();
 1829              		.loc 1 256 3 view .LVU486
 1830 0018 FFF7FEFF 		bl	MX_TIM3_Init
 1831              	.LVL134:
 257:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1832              		.loc 1 257 3 view .LVU487
 1833 001c FFF7FEFF 		bl	MX_TIM16_Init
 1834              	.LVL135:
 259:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim16);
 1835              		.loc 1 259 3 view .LVU488
 1836 0020 2748     		ldr	r0, .L88
 1837 0022 0C21     		movs	r1, #12
 1838 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1839              	.LVL136:
 260:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_GPIO_Port, CS_Pin, 1);
 1840              		.loc 1 260 3 view .LVU489
 1841 0028 2648     		ldr	r0, .L88+4
 1842 002a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1843              	.LVL137:
 261:Core/Src/main.c **** 
 1844              		.loc 1 261 3 view .LVU490
 1845 002e 9020     		movs	r0, #144
 1846 0030 0122     		movs	r2, #1
 1847 0032 1021     		movs	r1, #16
 1848 0034 C005     		lsls	r0, r0, #23
 1849 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1850              	.LVL138:
 263:Core/Src/main.c ****   for (int i = 0; i < 64; i++) registers[i] = 0;
 1851              		.loc 1 263 3 view .LVU491
 264:Core/Src/main.c ****   /* USER CODE END 2 */
 1852              		.loc 1 264 3 view .LVU492
 1853              	.LBB15:
 264:Core/Src/main.c ****   /* USER CODE END 2 */
 1854              		.loc 1 264 8 view .LVU493
 264:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 53


 1855              		.loc 1 264 12 is_stmt 0 view .LVU494
 1856 003a 0023     		movs	r3, #0
 264:Core/Src/main.c ****   /* USER CODE END 2 */
 1857              		.loc 1 264 3 view .LVU495
 1858 003c 04E0     		b	.L85
 1859              	.LVL139:
 1860              	.L86:
 264:Core/Src/main.c ****   /* USER CODE END 2 */
 1861              		.loc 1 264 32 is_stmt 1 discriminator 3 view .LVU496
 264:Core/Src/main.c ****   /* USER CODE END 2 */
 1862              		.loc 1 264 45 is_stmt 0 discriminator 3 view .LVU497
 1863 003e 9900     		lsls	r1, r3, #2
 1864 0040 02AA     		add	r2, sp, #8
 1865 0042 0020     		movs	r0, #0
 1866 0044 8850     		str	r0, [r1, r2]
 264:Core/Src/main.c ****   /* USER CODE END 2 */
 1867              		.loc 1 264 28 is_stmt 1 discriminator 3 view .LVU498
 1868 0046 0133     		adds	r3, r3, #1
 1869              	.LVL140:
 1870              	.L85:
 264:Core/Src/main.c ****   /* USER CODE END 2 */
 1871              		.loc 1 264 21 discriminator 1 view .LVU499
 1872 0048 3F2B     		cmp	r3, #63
 1873 004a F8DD     		ble	.L86
 1874              	.LBE15:
 270:Core/Src/main.c ****   while (1)
 1875              		.loc 1 270 3 view .LVU500
 1876 004c FFF7FEFF 		bl	ads131m04_reset
 1877              	.LVL141:
 1878              	.L87:
 271:Core/Src/main.c ****   {
 1879              		.loc 1 271 3 discriminator 1 view .LVU501
 1880              	.LBB16:
 273:Core/Src/main.c ****     HAL_Delay(1);
 1881              		.loc 1 273 5 discriminator 1 view .LVU502
 1882 0050 0121     		movs	r1, #1
 1883 0052 1D48     		ldr	r0, .L88+8
 1884 0054 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1885              	.LVL142:
 274:Core/Src/main.c **** 
 1886              		.loc 1 274 5 discriminator 1 view .LVU503
 1887 0058 0120     		movs	r0, #1
 1888 005a FFF7FEFF 		bl	HAL_Delay
 1889              	.LVL143:
 278:Core/Src/main.c **** 
 1890              		.loc 1 278 5 discriminator 1 view .LVU504
 1891 005e 0120     		movs	r0, #1
 1892 0060 FFF7FEFF 		bl	HAL_Delay
 1893              	.LVL144:
 284:Core/Src/main.c ****     HAL_Delay(1);
 1894              		.loc 1 284 5 discriminator 1 view .LVU505
 1895 0064 FFF7FEFF 		bl	ads131m04_wake
 1896              	.LVL145:
 285:Core/Src/main.c ****     ads131m04_standby();
 1897              		.loc 1 285 5 discriminator 1 view .LVU506
 1898 0068 0120     		movs	r0, #1
 1899 006a FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 54


 1900              	.LVL146:
 286:Core/Src/main.c ****     HAL_Delay(1);
 1901              		.loc 1 286 5 discriminator 1 view .LVU507
 1902 006e FFF7FEFF 		bl	ads131m04_standby
 1903              	.LVL147:
 287:Core/Src/main.c ****     ads131m04_wake();
 1904              		.loc 1 287 5 discriminator 1 view .LVU508
 1905 0072 0120     		movs	r0, #1
 1906 0074 FFF7FEFF 		bl	HAL_Delay
 1907              	.LVL148:
 288:Core/Src/main.c ****     HAL_Delay(1);
 1908              		.loc 1 288 5 discriminator 1 view .LVU509
 1909 0078 FFF7FEFF 		bl	ads131m04_wake
 1910              	.LVL149:
 289:Core/Src/main.c ****     ads131m04_rreg_multiple(0x00, 28, registers);
 1911              		.loc 1 289 5 discriminator 1 view .LVU510
 1912 007c 0120     		movs	r0, #1
 1913 007e FFF7FEFF 		bl	HAL_Delay
 1914              	.LVL150:
 290:Core/Src/main.c ****     HAL_Delay(1);
 1915              		.loc 1 290 5 discriminator 1 view .LVU511
 1916 0082 02AA     		add	r2, sp, #8
 1917 0084 1C21     		movs	r1, #28
 1918 0086 0020     		movs	r0, #0
 1919 0088 FFF7FEFF 		bl	ads131m04_rreg_multiple
 1920              	.LVL151:
 291:Core/Src/main.c ****     ads131m04_wreg(0x06, 0x0602);
 1921              		.loc 1 291 5 discriminator 1 view .LVU512
 1922 008c 0120     		movs	r0, #1
 1923 008e FFF7FEFF 		bl	HAL_Delay
 1924              	.LVL152:
 292:Core/Src/main.c ****     HAL_Delay(1);
 1925              		.loc 1 292 5 discriminator 1 view .LVU513
 1926 0092 0E49     		ldr	r1, .L88+12
 1927 0094 0620     		movs	r0, #6
 1928 0096 FFF7FEFF 		bl	ads131m04_wreg
 1929              	.LVL153:
 293:Core/Src/main.c ****     registers[0x07] = ads131m04_rreg(0x06);
 1930              		.loc 1 293 5 discriminator 1 view .LVU514
 1931 009a 0120     		movs	r0, #1
 1932 009c FFF7FEFF 		bl	HAL_Delay
 1933              	.LVL154:
 294:Core/Src/main.c ****     HAL_Delay(1);
 1934              		.loc 1 294 5 discriminator 1 view .LVU515
 294:Core/Src/main.c ****     HAL_Delay(1);
 1935              		.loc 1 294 23 is_stmt 0 discriminator 1 view .LVU516
 1936 00a0 0620     		movs	r0, #6
 1937 00a2 FFF7FEFF 		bl	ads131m04_rreg
 1938              	.LVL155:
 294:Core/Src/main.c ****     HAL_Delay(1);
 1939              		.loc 1 294 21 discriminator 1 view .LVU517
 1940 00a6 0990     		str	r0, [sp, #36]
 295:Core/Src/main.c ****     uint16_t towrite[2] = {0x0513, 0x0f0e};
 1941              		.loc 1 295 5 is_stmt 1 discriminator 1 view .LVU518
 1942 00a8 0120     		movs	r0, #1
 1943 00aa FFF7FEFF 		bl	HAL_Delay
 1944              	.LVL156:
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 55


 296:Core/Src/main.c ****     ads131m04_wreg_multiple(0x02, 2, towrite);
 1945              		.loc 1 296 5 discriminator 1 view .LVU519
 296:Core/Src/main.c ****     ads131m04_wreg_multiple(0x02, 2, towrite);
 1946              		.loc 1 296 14 is_stmt 0 discriminator 1 view .LVU520
 1947 00ae 084B     		ldr	r3, .L88+16
 1948 00b0 1B68     		ldr	r3, [r3]
 1949 00b2 0193     		str	r3, [sp, #4]
 297:Core/Src/main.c ****     // HAL_Delay(id | status | mode | clock | gain | cfg); // no optimization >:(((
 1950              		.loc 1 297 5 is_stmt 1 discriminator 1 view .LVU521
 1951 00b4 01AA     		add	r2, sp, #4
 1952 00b6 0221     		movs	r1, #2
 1953 00b8 0220     		movs	r0, #2
 1954 00ba FFF7FEFF 		bl	ads131m04_wreg_multiple
 1955              	.LVL157:
 1956              	.LBE16:
 271:Core/Src/main.c ****   {
 1957              		.loc 1 271 9 discriminator 1 view .LVU522
 1958 00be C7E7     		b	.L87
 1959              	.L89:
 1960              		.align	2
 1961              	.L88:
 1962 00c0 00000000 		.word	htim3
 1963 00c4 00000000 		.word	htim16
 1964 00c8 00140048 		.word	1207964672
 1965 00cc 02060000 		.word	1538
 1966 00d0 00000000 		.word	.LANCHOR0
 1967              		.cfi_endproc
 1968              	.LFE54:
 1970              		.global	htim16
 1971              		.section	.bss.htim16,"aw",%nobits
 1972              		.align	2
 1975              	htim16:
 1976 0000 00000000 		.space	72
 1976      00000000 
 1976      00000000 
 1976      00000000 
 1976      00000000 
 1977              		.global	htim3
 1978              		.section	.bss.htim3,"aw",%nobits
 1979              		.align	2
 1982              	htim3:
 1983 0000 00000000 		.space	72
 1983      00000000 
 1983      00000000 
 1983      00000000 
 1983      00000000 
 1984              		.global	hspi1
 1985              		.section	.bss.hspi1,"aw",%nobits
 1986              		.align	2
 1989              	hspi1:
 1990 0000 00000000 		.space	100
 1990      00000000 
 1990      00000000 
 1990      00000000 
 1990      00000000 
 1991              		.global	hcan
 1992              		.section	.bss.hcan,"aw",%nobits
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 56


 1993              		.align	2
 1996              	hcan:
 1997 0000 00000000 		.space	40
 1997      00000000 
 1997      00000000 
 1997      00000000 
 1997      00000000 
 1998              		.section	.rodata
 1999              		.align	2
 2000              		.set	.LANCHOR0,. + 0
 2001              	.LC0:
 2002 0000 1305     		.short	1299
 2003 0002 0E0F     		.short	3854
 2004              		.text
 2005              	.Letext0:
 2006              		.file 3 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2007              		.file 4 "c:\\users\\xhex8\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 2008              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 2009              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2010              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2011              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2012              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2013              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2014              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 2015              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 2016              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 2017              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 2018              		.file 15 "Core/Inc/main.h"
 2019              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2020              		.file 17 "<built-in>"
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:204    .text.MX_GPIO_Init:000000c0 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:210    .text.delay_us:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:216    .text.delay_us:00000000 delay_us
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:243    .text.delay_us:00000010 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1975   .bss.htim16:00000000 htim16
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:248    .text.ads131m04_transfer_word:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:254    .text.ads131m04_transfer_word:00000000 ads131m04_transfer_word
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:347    .text.ads131m04_transfer_word:00000068 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1989   .bss.hspi1:00000000 hspi1
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:352    .text.ads131m04_transfer_frame:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:358    .text.ads131m04_transfer_frame:00000000 ads131m04_transfer_frame
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:443    .text.ads131m04_cmd:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:449    .text.ads131m04_cmd:00000000 ads131m04_cmd
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:526    .text.ads131m04_reset:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:532    .text.ads131m04_reset:00000000 ads131m04_reset
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:564    .text.ads131m04_status:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:570    .text.ads131m04_status:00000000 ads131m04_status
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:602    .text.ads131m04_standby:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:608    .text.ads131m04_standby:00000000 ads131m04_standby
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:640    .text.ads131m04_wake:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:646    .text.ads131m04_wake:00000000 ads131m04_wake
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:678    .text.ads131m04_lock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:684    .text.ads131m04_lock:00000000 ads131m04_lock
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:715    .text.ads131m04_lock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:720    .text.ads131m04_unlock:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:726    .text.ads131m04_unlock:00000000 ads131m04_unlock
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:757    .text.ads131m04_unlock:00000018 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:762    .text.ads131m04_rreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:768    .text.ads131m04_rreg:00000000 ads131m04_rreg
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:814    .text.ads131m04_rreg:00000024 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:819    .text.ads131m04_rreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:825    .text.ads131m04_rreg_multiple:00000000 ads131m04_rreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:996    .text.ads131m04_rreg_multiple:000000a0 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1001   .text.ads131m04_wreg:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1007   .text.ads131m04_wreg:00000000 ads131m04_wreg
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1082   .text.ads131m04_wreg_multiple:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1088   .text.ads131m04_wreg_multiple:00000000 ads131m04_wreg_multiple
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1252   .text.Error_Handler:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1258   .text.Error_Handler:00000000 Error_Handler
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1290   .text.MX_CAN_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1295   .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1362   .text.MX_CAN_Init:00000030 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1996   .bss.hcan:00000000 hcan
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1368   .text.MX_SPI1_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1373   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1455   .text.MX_SPI1_Init:00000048 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1461   .text.MX_TIM3_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1466   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1621   .text.MX_TIM3_Init:000000a8 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1982   .bss.htim3:00000000 htim3
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1627   .text.MX_TIM16_Init:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1632   .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1685   .text.MX_TIM16_Init:00000028 $d
ARM GAS  C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s 			page 58


C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1692   .text.SystemClock_Config:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1698   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1797   .text.main:00000000 $t
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1803   .text.main:00000000 main
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1962   .text.main:000000c0 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1972   .bss.htim16:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1979   .bss.htim3:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1986   .bss.hspi1:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1993   .bss.hcan:00000000 $d
C:\Users\xhex8\AppData\Local\Temp\ccMNypvr.s:1999   .rodata:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_TransmitReceive
HAL_CAN_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start
HAL_GPIO_TogglePin
HAL_Delay
